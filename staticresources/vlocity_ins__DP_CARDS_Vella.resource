{
    "dataPackId": "",
    "dataPacks": [
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-auto-safety-use": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__DRBundle__c": [
                    {
                        "%vlocity_namespace%__BatchSize__c": 200,
                        "%vlocity_namespace%__CheckFieldLevelSecurity__c": false,
                        "%vlocity_namespace%__DRMapItem__c": [
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "Id",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "%vlocity_namespace%__AssetId__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 1,
                                "%vlocity_namespace%__InterfaceObjectName__c": "%vlocity_namespace%__AssetTransaction__c",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom6048",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom6048"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "'Activity'",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "%vlocity_namespace%__Type__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 1,
                                "%vlocity_namespace%__InterfaceObjectName__c": "%vlocity_namespace%__AssetTransaction__c",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom8101",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom8101"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "ORDER BY",
                                "%vlocity_namespace%__FilterValue__c": "%vlocity_namespace%__TransactionDate__c",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 1,
                                "%vlocity_namespace%__InterfaceObjectName__c": "%vlocity_namespace%__AssetTransaction__c",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom1755",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom1755"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:Activity",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:%vlocity_namespace%__Activity__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "nullCustom9260",
                                "%vlocity_namespace%__TransformValuesMap__c": "{}",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/nullCustom9260"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:Amount",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:%vlocity_namespace%__Amount__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom6711",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom6711"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:TransactionNumber",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:%vlocity_namespace%__TransactionNumber__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom6526",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom6526"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:Rate",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:Rate__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom5841",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom5841"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:Score",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:Score__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom4010",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom4010"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:TransactionDate",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:%vlocity_namespace%__TransactionDate__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom2431",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom2431"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "policyTransactions:Type",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "policyTransactions:%vlocity_namespace%__Type__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getAutoTransactionsCustom6369",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getAutoTransactions",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRMapItem__c/getAutoTransactionsCustom6369"
                            }
                        ],
                        "%vlocity_namespace%__DRMapName__c": "getAutoTransactions",
                        "%vlocity_namespace%__DeleteOnSuccess__c": false,
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "",
                        "%vlocity_namespace%__IgnoreErrors__c": false,
                        "%vlocity_namespace%__InputType__c": "JSON",
                        "%vlocity_namespace%__InputXml__c": "",
                        "%vlocity_namespace%__InterfaceObject__c": "json",
                        "%vlocity_namespace%__IsDefaultForInterface__c": false,
                        "%vlocity_namespace%__IsProcessSuperBulk__c": false,
                        "%vlocity_namespace%__OuboundStagingObjectDataField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationName__c": "",
                        "%vlocity_namespace%__OutboundStagingObjectName__c": "",
                        "%vlocity_namespace%__OutputType__c": "JSON",
                        "%vlocity_namespace%__OverwriteAllNullValues__c": false,
                        "%vlocity_namespace%__PreprocessorClassName__c": "",
                        "%vlocity_namespace%__ProcessNowThreshold__c": 0,
                        "%vlocity_namespace%__RollbackOnError__c": false,
                        "%vlocity_namespace%__SampleInputJSON__c": "{\"Id\":\"02i6A0000009Wa7\"}",
                        "%vlocity_namespace%__SampleInputRows__c": "",
                        "%vlocity_namespace%__SampleInputXML__c": "",
                        "%vlocity_namespace%__TargetOutDocuSignTemplateId__c": "",
                        "%vlocity_namespace%__TargetOutPdfDocName__c": "",
                        "%vlocity_namespace%__TargetOutXml__c": "",
                        "%vlocity_namespace%__Type__c": "Extract",
                        "%vlocity_namespace%__UseAssignmentRules__c": false,
                        "Name": "getAutoTransactions",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__DRBundle__c",
                        "VlocityRecordSourceKey": "DataRaptor/getAutoTransactions/%vlocity_namespace%__DRBundle__c/getAutoTransactions"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "DataRaptor/getAutoTransactions",
                "VlocityDataPackType": "DataRaptor"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "DataRaptor/getAutoTransactions",
            "VlocityDataPackName": "getAutoTransactions",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "DataRaptor"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-insurable-items": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__DRBundle__c": [
                    {
                        "%vlocity_namespace%__BatchSize__c": 200,
                        "%vlocity_namespace%__CheckFieldLevelSecurity__c": false,
                        "%vlocity_namespace%__DRMapItem__c": [
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "User",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "'$Vlocity.UserId'",
                                "%vlocity_namespace%__FormulaOrder__c": "",
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 1,
                                "%vlocity_namespace%__InterfaceObjectName__c": "User",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": "",
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom7654",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom7654"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 2,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "User:AccountId",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 2,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Account",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom4964",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom4964"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "ORDER BY",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 2,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Account",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom1252",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom1252"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account:InsurableItems",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "ORDER BY",
                                "%vlocity_namespace%__FilterValue__c": "%vlocity_namespace%__SpecProduct2Id__c",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 3,
                                "%vlocity_namespace%__InterfaceObjectName__c": "%vlocity_namespace%__InsurableItem__c",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom5363",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom5363"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account:InsurableItems",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "Account:Id",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "%vlocity_namespace%__AccountId__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 3,
                                "%vlocity_namespace%__InterfaceObjectName__c": "%vlocity_namespace%__InsurableItem__c",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom146",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom146"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account:InsurableItems:ProductAttachment",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "LIKE",
                                "%vlocity_namespace%__FilterValue__c": "'image%'",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "ContentType",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 4,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Attachment",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom5478",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom5478"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account:InsurableItems:ProductAttachment",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "LIKE",
                                "%vlocity_namespace%__FilterValue__c": "'prodImage_%'",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Name",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 4,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Attachment",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom3256",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom3256"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account:InsurableItems:ProductAttachment",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "Account:InsurableItems:%vlocity_namespace%__SpecProduct2Id__c",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "ParentId",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 4,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Attachment",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom1757",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom1757"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:SpecDescription",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:%vlocity_namespace%__SpecDescription__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom7429",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom7429"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:SpecImageId",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:ProductAttachment:Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom2204",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom2204"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:ItemId",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom1157",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom1157"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:SpecName",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:%vlocity_namespace%__SpecProductName__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom6126",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom6126"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:SpecId",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:%vlocity_namespace%__SpecProduct2Id__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom9060",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom9060"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Item:ItemName",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:InsurableItems:Name",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "getInsurableItemsCustom4405",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "getInsurableItems",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRMapItem__c/getInsurableItemsCustom4405"
                            }
                        ],
                        "%vlocity_namespace%__DRMapName__c": "getInsurableItems",
                        "%vlocity_namespace%__DeleteOnSuccess__c": false,
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "",
                        "%vlocity_namespace%__IgnoreErrors__c": false,
                        "%vlocity_namespace%__InputType__c": "JSON",
                        "%vlocity_namespace%__InputXml__c": "",
                        "%vlocity_namespace%__InterfaceObject__c": "json",
                        "%vlocity_namespace%__IsDefaultForInterface__c": false,
                        "%vlocity_namespace%__IsProcessSuperBulk__c": false,
                        "%vlocity_namespace%__OuboundStagingObjectDataField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationName__c": "",
                        "%vlocity_namespace%__OutboundStagingObjectName__c": "",
                        "%vlocity_namespace%__OutputType__c": "JSON",
                        "%vlocity_namespace%__OverwriteAllNullValues__c": false,
                        "%vlocity_namespace%__PreprocessorClassName__c": "",
                        "%vlocity_namespace%__ProcessNowThreshold__c": 0,
                        "%vlocity_namespace%__RollbackOnError__c": false,
                        "%vlocity_namespace%__SampleInputJSON__c": "{}",
                        "%vlocity_namespace%__SampleInputRows__c": "",
                        "%vlocity_namespace%__SampleInputXML__c": "",
                        "%vlocity_namespace%__TargetOutDocuSignTemplateId__c": "",
                        "%vlocity_namespace%__TargetOutPdfDocName__c": "",
                        "%vlocity_namespace%__TargetOutXml__c": "",
                        "%vlocity_namespace%__Type__c": "Extract",
                        "%vlocity_namespace%__UseAssignmentRules__c": false,
                        "Name": "getInsurableItems",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__DRBundle__c",
                        "VlocityRecordSourceKey": "DataRaptor/getInsurableItems/%vlocity_namespace%__DRBundle__c/getInsurableItems"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "DataRaptor/getInsurableItems",
                "VlocityDataPackType": "DataRaptor"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "DataRaptor/getInsurableItems",
            "VlocityDataPackName": "getInsurableItems",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "DataRaptor"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-in-force-policies": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__DRBundle__c": [
                    {
                        "%vlocity_namespace%__BatchSize__c": 200,
                        "%vlocity_namespace%__CheckFieldLevelSecurity__c": false,
                        "%vlocity_namespace%__DRMapItem__c": [
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "User",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "'$Vlocity.UserId'",
                                "%vlocity_namespace%__FormulaOrder__c": "",
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 1,
                                "%vlocity_namespace%__InterfaceObjectName__c": "User",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": "",
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom3700",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom3700"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Account",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "User:AccountId",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 2,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Account",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom4141",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom4141"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Asset",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "<>",
                                "%vlocity_namespace%__FilterValue__c": "'Cancelled'",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Status",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 3,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Asset",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom7837",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom7837"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Asset",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": 0,
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "Account:Id",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "AccountId",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 3,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Asset",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom7173",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom7173"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 0,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Asset:Product",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "=",
                                "%vlocity_namespace%__FilterValue__c": "Asset:Product2Id",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": 4,
                                "%vlocity_namespace%__InterfaceObjectName__c": "Product2",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom3241",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom3241"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "AccountId",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:AccountId",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom3825",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom3825"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Product2Id",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:Product:Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom6518",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom6518"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "AssetId",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:Id",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom1965",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom1965"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "ProductCode",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:Product:ProductCode",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom4084",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom4084"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "Type",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:%vlocity_namespace%__Type__c",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom6093",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom6093"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "AccountName",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Account:Name",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom6551",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom6551"
                            },
                            {
                                "%vlocity_namespace%__ConfigurationAttribute__c": "",
                                "%vlocity_namespace%__ConfigurationCategory__c": "",
                                "%vlocity_namespace%__ConfigurationGroup__c": "",
                                "%vlocity_namespace%__ConfigurationKey__c": "",
                                "%vlocity_namespace%__ConfigurationPattern__c": "",
                                "%vlocity_namespace%__ConfigurationProcess__c": "",
                                "%vlocity_namespace%__ConfigurationType__c": "",
                                "%vlocity_namespace%__ConfigurationValue__c": "",
                                "%vlocity_namespace%__DefaultValue__c": "",
                                "%vlocity_namespace%__DomainObjectAPIName__c": "json",
                                "%vlocity_namespace%__DomainObjectCreationOrder__c": 1,
                                "%vlocity_namespace%__DomainObjectFieldAPIName__c": "ProductName",
                                "%vlocity_namespace%__DomainObjectFieldType__c": "",
                                "%vlocity_namespace%__FilterGroup__c": "",
                                "%vlocity_namespace%__FilterOperator__c": "",
                                "%vlocity_namespace%__FilterValue__c": "",
                                "%vlocity_namespace%__FormulaOrder__c": 0,
                                "%vlocity_namespace%__FormulaResultPath__c": "",
                                "%vlocity_namespace%__Formula__c": "",
                                "%vlocity_namespace%__GlobalKey__c": "",
                                "%vlocity_namespace%__InterfaceFieldAPIName__c": "Asset:Product:Name",
                                "%vlocity_namespace%__InterfaceObjectLookupOrder__c": "",
                                "%vlocity_namespace%__InterfaceObjectName__c": "",
                                "%vlocity_namespace%__IsDisabled__c": false,
                                "%vlocity_namespace%__IsRequiredForUpsert__c": false,
                                "%vlocity_namespace%__LinkCreatedField__c": "",
                                "%vlocity_namespace%__LinkCreatedIndex__c": 0,
                                "%vlocity_namespace%__LookupDomainObjectFieldName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectName__c": "",
                                "%vlocity_namespace%__LookupDomainObjectRequestedFieldName__c": "",
                                "%vlocity_namespace%__MapId__c": "vella_GetPoliciesCustom2495",
                                "%vlocity_namespace%__TransformValuesMap__c": "",
                                "%vlocity_namespace%__UpsertKey__c": false,
                                "Name": "vella_GetPolicies",
                                "VlocityDataPackIsIncluded": true,
                                "VlocityDataPackType": "SObject",
                                "VlocityRecordSObjectType": "%vlocity_namespace%__DRMapItem__c",
                                "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRMapItem__c/vella_GetPoliciesCustom2495"
                            }
                        ],
                        "%vlocity_namespace%__DRMapName__c": "vella_GetPolicies",
                        "%vlocity_namespace%__DeleteOnSuccess__c": false,
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "",
                        "%vlocity_namespace%__IgnoreErrors__c": false,
                        "%vlocity_namespace%__InputType__c": "JSON",
                        "%vlocity_namespace%__InputXml__c": "",
                        "%vlocity_namespace%__InterfaceObject__c": "json",
                        "%vlocity_namespace%__IsDefaultForInterface__c": false,
                        "%vlocity_namespace%__IsProcessSuperBulk__c": false,
                        "%vlocity_namespace%__OuboundStagingObjectDataField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationField__c": "",
                        "%vlocity_namespace%__OutboundConfigurationName__c": "",
                        "%vlocity_namespace%__OutboundStagingObjectName__c": "",
                        "%vlocity_namespace%__OutputType__c": "JSON",
                        "%vlocity_namespace%__OverwriteAllNullValues__c": false,
                        "%vlocity_namespace%__PreprocessorClassName__c": "",
                        "%vlocity_namespace%__ProcessNowThreshold__c": 0,
                        "%vlocity_namespace%__RollbackOnError__c": false,
                        "%vlocity_namespace%__SampleInputJSON__c": "{}",
                        "%vlocity_namespace%__SampleInputRows__c": "",
                        "%vlocity_namespace%__SampleInputXML__c": "",
                        "%vlocity_namespace%__TargetOutDocuSignTemplateId__c": "",
                        "%vlocity_namespace%__TargetOutPdfDocName__c": "",
                        "%vlocity_namespace%__TargetOutXml__c": "",
                        "%vlocity_namespace%__Type__c": "Extract",
                        "%vlocity_namespace%__UseAssignmentRules__c": false,
                        "Name": "vella_GetPolicies",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__DRBundle__c",
                        "VlocityRecordSourceKey": "DataRaptor/vella_GetPolicies/%vlocity_namespace%__DRBundle__c/vella_GetPolicies"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "DataRaptor/vella_GetPolicies",
                "VlocityDataPackType": "DataRaptor"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "DataRaptor/vella_GetPolicies",
            "VlocityDataPackName": "vella_GetPolicies",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "DataRaptor"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-home": "Reference by Name",
                "VlocityUITemplate/vella-discovery-questions-intelligent": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"id\",\n                \"val\": \"0016A000003MGzIQAW\"\n            }\n        ],\n        \"type\": \"ApexRest\",\n        \"value\": {\n            \"body\": \"{}\",\n            \"endpoint\": \"/services/apexrest/%vlocity_namespace%/v1/intelligence/vellaInterviews?contextId={{$root.accountId}}&pageSize=6\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"blankStateCheck\": true,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n                {\n                    \"collapse\": true,\n                    \"displayLabel\": \"['resource']['%vlocity_namespace%__Headline__c']\",\n                    \"editing\": false,\n                    \"group\": \"Custom Properties\",\n                    \"label\": \"Headline\",\n                    \"name\": \"['resource']['%vlocity_namespace%__Headline__c']\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"collapse\": true,\n                    \"displayLabel\": \"['resource']['%vlocity_namespace%__SubTitle__c']\",\n                    \"editing\": false,\n                    \"group\": \"Custom Properties\",\n                    \"label\": \"SubTitle\",\n                    \"name\": \"['resource']['%vlocity_namespace%__SubTitle__c']\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"vella-discovery-questions-intelligent\",\n            \"sObjectType\": null,\n            \"templateUrl\": \"vella-discovery-questions-intelligent\"\n        }\n    ],\n    \"title\": \"Vella Discovery Questions\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "VlocityIntelligentInterviews/Vlocity/1511243136242",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "VlocityIntelligentInterviews",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/VlocityIntelligentInterviews/%vlocity_namespace%__VlocityCard__c/VlocityIntelligentInterviews"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/VlocityIntelligentInterviews",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/VlocityIntelligentInterviews",
            "VlocityDataPackName": "VlocityIntelligentInterviews",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "DataRaptor/getAutoTransactions": "Reference by Name",
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-policy-auto-safety": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i6A0000009Wa7QAE\"\n            }\n        ],\n        \"type\": \"DataRaptor\",\n        \"value\": {\n            \"bundle\": \"getAutoTransactions\",\n            \"inputMap\": {\n                \"Id\": \"{{params.id}}\"\n            },\n            \"query\": \"\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"conditions\": [\n                {\n                    \"field\": \"$scope.data.status\",\n                    \"operator\": \"===\",\n                    \"type\": \"system\",\n                    \"value\": \"'active'\"\n                }\n            ],\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"Vella Auto Safety & Use\",\n            \"templateUrl\": \"vella-policy-auto-safety\"\n        }\n    ],\n    \"title\": \"Vella Auto Safety & Use\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-auto-safety-use/Vlocity/1506453320162",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-auto-safety-use",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-auto-safety-use/%vlocity_namespace%__VlocityCard__c/vella-auto-safety-use"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-auto-safety-use",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-auto-safety-use",
            "VlocityDataPackName": "vella-auto-safety-use",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-home": "Reference by Name",
                "VlocityUITemplate/vella-discovery-questions": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"type\": \"Custom\",\n        \"value\": {\n            \"body\": \"{}\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": true,\n            \"blankStateCheck\": true,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'non-existent'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Check to see if your family is already covered.\",\n                        \"displayName\": \"Add Family\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_family\",\n                        \"isCustomAction\": true,\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Protect your financial assets from lawsuits and major claims.\",\n                        \"displayName\": \"Risk Assessment\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_personLiab\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id=0014100000ruHw6&OmniScriptType=Assess&OmniScriptSubType=Personal%20Liability&OmniScriptLang=English&scriptMode=vertical&ContextId=0014100000ruHw6\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Guard against financial hardships of pet injuries and illness.\",\n                        \"displayName\": \"Add Pets\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_pets\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id=0014100000ruHw6AAE&layout=lightning#/OmniScriptType/Vella_Pet/OmniScriptSubType/CreateInsurableItem/OmniScriptLang/English/ContextId/{0}/PrefillDataRaptorBundle//true\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Property and liability coverage for home-based businesses.\",\n                        \"displayName\": \"Add Business Pursuits\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_BusPursuits\",\n                        \"isCustomAction\": true,\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Protect yourself and your family while traveling.\",\n                        \"displayName\": \"Add Vacations\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_vacations\",\n                        \"isCustomAction\": true,\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"description\": \"Volunteer work may leave you open to lawsuits.\",\n                        \"displayName\": \"Add Volunteer Work\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_volunteer_work\",\n                        \"isCustomAction\": true,\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/\"\n                    }\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'non-existent'\",\n            \"name\": \"vella-discovery-questions\",\n            \"sObjectType\": null,\n            \"templateUrl\": \"vella-discovery-questions\"\n        }\n    ],\n    \"title\": \"Vella Discovery Questions\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-discovery-questions/Vlocity/1504289498490",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-discovery-questions",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-discovery-questions/%vlocity_namespace%__VlocityCard__c/vella-discovery-questions"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-discovery-questions",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-discovery-questions",
            "VlocityDataPackName": "vella-discovery-questions",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-home-protection": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i1I000000sdGDQAY\"\n            }\n        ],\n        \"type\": \"Query\",\n        \"value\": {\n            \"body\": \"\",\n            \"interval\": 5000,\n            \"query\": \"SELECT Id, Name, Status, Device_State__c, Device_Message__c FROM Asset WHERE %vlocity_namespace%__PolicyAssetId__c = '{{params.id}}'\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"conditions\": [\n                {\n                    \"field\": \"$scope.data.status\",\n                    \"operator\": \"===\",\n                    \"type\": \"system\",\n                    \"value\": \"'active'\"\n                }\n            ],\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"Vella Home Protection\",\n            \"placeholderExpand\": true,\n            \"placeholders\": [\n                {\n                    \"collapse\": true,\n                    \"editing\": false,\n                    \"label\": \"\",\n                    \"name\": \"DeviceName\",\n                    \"type\": \"string\",\n                    \"value\": \"['Name']\"\n                },\n                {\n                    \"collapse\": true,\n                    \"editing\": false,\n                    \"label\": \"\",\n                    \"name\": \"DeviceState\",\n                    \"type\": \"string\",\n                    \"value\": \"['Device_State__c']\"\n                },\n                {\n                    \"collapse\": true,\n                    \"editing\": false,\n                    \"label\": \"\",\n                    \"name\": \"DeviceMessage\",\n                    \"type\": \"string\",\n                    \"value\": \"['Device_Message__c']\"\n                }\n            ],\n            \"templateUrl\": \"vella-home-protection\"\n        }\n    ],\n    \"title\": \"Vella Home Protection\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-home-protection/Vlocity/1506560829449",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-home-protection",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-home-protection/%vlocity_namespace%__VlocityCard__c/vella-home-protection"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-home-protection",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-home-protection",
            "VlocityDataPackName": "vella-home-protection",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "DataRaptor/vella_GetPolicies": "Reference by Name",
                "VlocityUILayout/vella-home": "Reference by Name",
                "VlocityUITemplate/vella-home-circle": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"type\": \"DataRaptor\",\n        \"value\": {\n            \"bundle\": \"vella_GetPolicies\",\n            \"ctxId\": \"\",\n            \"inputMap\": {\n                \"Id\": \"$root.vlocity.userId\"\n            }\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"blankStateCheck\": false,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"vella-in-force-policy\",\n            \"templateUrl\": \"vella-home-circle\"\n        }\n    ],\n    \"title\": \"Vella In-Force Policies\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-in-force-policies/Vlocity/1503958122994",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-in-force-policies",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-in-force-policies/%vlocity_namespace%__VlocityCard__c/vella-in-force-policies"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-in-force-policies",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-in-force-policies",
            "VlocityDataPackName": "vella-in-force-policies",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "DataRaptor/getInsurableItems": "Reference by Name",
                "VlocityUILayout/vella-home": "Reference by Name",
                "VlocityUITemplate/vella-home-circle": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"type\": \"DataRaptor\",\n        \"value\": {\n            \"bundle\": \"getInsurableItems\",\n            \"ctxId\": \"\",\n            \"inputMap\": {\n                \"Id\": \"$root.vlocity.userId\"\n            }\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"conditions\": [\n                {\n                    \"field\": \"$scope.data.status\",\n                    \"operator\": \"===\",\n                    \"type\": \"system\",\n                    \"value\": \"'active'\"\n                }\n            ],\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"name\": \"vella-insurable-item\",\n            \"templateUrl\": \"vella-home-circle\"\n        }\n    ],\n    \"title\": \"Vella Insurable Items\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-insurable-items/Vlocity/1505328742531",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-insurable-items",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-insurable-items/%vlocity_namespace%__VlocityCard__c/vella-insurable-items"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-insurable-items",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-insurable-items",
            "VlocityDataPackName": "vella-insurable-items",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-more-detail": "Reference by Name",
                "VlocityUITemplate/vella-more-detail": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i6A0000009XL6QAM\"\n            }\n        ],\n        \"type\": \"Query\",\n        \"value\": {\n            \"query\": \"SELECT Name, %vlocity_namespace%__Description__c FROM %vlocity_namespace%__AssetCoverage__c WHERE %vlocity_namespace%__PolicyAssetId__c = '{{params.id}}'\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankStateCheck\": false,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"name\": \"Vella More Detail Card\",\n            \"templateUrl\": \"vella-more-detail\"\n        }\n    ],\n    \"title\": \"Vella More Detail Card\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-more-detail-card/Vlocity/1504828321329",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-more-detail-card",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-more-detail-card/%vlocity_namespace%__VlocityCard__c/vella-more-detail-card"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-more-detail-card",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-more-detail-card",
            "VlocityDataPackName": "vella-more-detail-card",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-insurable": "Reference by Name",
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-swipe": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"type\": \"Inherit\",\n        \"value\": {\n        }\n    },\n    \"filter\": {\n        \"id\": \"123\"\n    },\n    \"states\": [\n        {\n            \"blankCardState\": true,\n            \"blankStateCheck\": true,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'non-existent'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"Add Item\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_valuable_item_from_policy\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id={0}#/OmniScriptType/Vella-Valuables/OmniScriptSubType/AddInsuredItem/OmniScriptLang/English/ContextId/{0}/PrefillDataRaptorBundle//true\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"Add Item\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_pet_item_from_policy\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"Add Item\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_valuable_item_from_insurable\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id={0}#/OmniScriptType/Vella_Valuables/OmniScriptSubType/CreateInsurableItem/OmniScriptLang/English/ContextId/{0}/PrefillDataRaptorBundle//true\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"Add Item\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"add_pet_item_from_insurable\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"New Tab / Window\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id={0}#/OmniScriptType/Vella_Pet/OmniScriptSubType/CreateInsurableItem/OmniScriptLang/English/ContextId/{0}/PrefillDataRaptorBundle//true\"\n                    }\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'non-existent'\",\n            \"name\": \"Vella Policy Add Insured Item\",\n            \"templateUrl\": \"vella-swipe\"\n        }\n    ],\n    \"title\": \"Vella Policy Add Insured Item\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-policy-add-insured-item/Vlocity/1506707737583",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-policy-add-insured-item",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-policy-add-insured-item/%vlocity_namespace%__VlocityCard__c/vella-policy-add-insured-item"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-policy-add-insured-item",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-policy-add-insured-item",
            "VlocityDataPackName": "vella-policy-add-insured-item",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-policy-coverages": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i6A0000009XL6QAM\"\n            }\n        ],\n        \"type\": \"ApexRemote\",\n        \"value\": {\n            \"inputMap\": {\n                \"assetId\": \"{{params.id}}\"\n            },\n            \"optionsMap\": {\n                \"vlcClass\": \"%vlocity_namespace%.InsuranceAssetHandler\"\n            },\n            \"remoteClass\": \"InsuranceAssetHandler\",\n            \"remoteMethod\": \"getCoverages\",\n            \"remoteNSPrefix\": \"%vlocity_namespace%\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankStateCheck\": false,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"name\": \"vella-policy-coverages\",\n            \"templateUrl\": \"vella-policy-coverages\"\n        }\n    ],\n    \"title\": \"Vella Policy Coverages Card\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-policy-coverages-card/Vlocity/1504304067050",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-policy-coverages-card",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-policy-coverages-card/%vlocity_namespace%__VlocityCard__c/vella-policy-coverages-card"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-policy-coverages-card",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-policy-coverages-card",
            "VlocityDataPackName": "vella-policy-coverages-card",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-policy-detail": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i6A0000009Wa7QAE\"\n            }\n        ],\n        \"type\": \"Query\",\n        \"value\": {\n            \"optionsMap\": {\n                \"vlcClass\": \"%vlocity_namespace%.InsuranceAssetHandler\"\n            },\n            \"query\": \"SELECT %vlocity_namespace%__Image__c,\\n%vlocity_namespace%__Product2Id__r.Description, \\n%vlocity_namespace%__PolicyAssetId__r.Name, %vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__Type__c, \\n%vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__EffectiveDate__c,\\n%vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__ExpirationDate__c,\\n%vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__AnnualPremium__c, %vlocity_namespace%__AttributeSelectedValues__c, %vlocity_namespace%__PolicyAssetId__r.AssetAutoNumber__c, %vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__PrimaryProducerId__r.LastName, %vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__PrimaryProducerId__r.FirstName, %vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__PrimaryProducerId__r.Phone, %vlocity_namespace%__PolicyAssetId__r.%vlocity_namespace%__PrimaryProducerId__r.email FROM %vlocity_namespace%__AssetInsuredItem__c WHERE Name != 'Personal Dwelling' AND %vlocity_namespace%__PolicyAssetId__c = '{{params.id}}'\",\n            \"remoteClass\": \"\",\n            \"remoteMethod\": \"\",\n            \"remoteNSPrefix\": \"%vlocity_namespace%\",\n            \"resultVar\": \"\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"actionCtxId\": \"\",\n            \"blankStateCheck\": false,\n            \"collapse\": false,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"Change Coverage\",\n                        \"extraParams\": {\n                        },\n                        \"hasExtraParams\": false,\n                        \"id\": \"change_coverage\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"_self\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/apex/%vlocity_namespace%__OmniScriptUniversalPage?id={0}#/OmniScriptType/Policy/OmniScriptSubType/ModifyCoverage/OmniScriptLang/English/ContextId/{0}/PrefillDataRaptorBundle//true\"\n                    },\n                    {\n                        \"collapse\": true,\n                        \"displayName\": \"File A Claim\",\n                        \"hasExtraParams\": false,\n                        \"id\": \"file_a_claim\",\n                        \"isCustomAction\": true,\n                        \"openUrlIn\": \"_self\",\n                        \"type\": \"Custom\",\n                        \"url\": \"/app/chatbot/Your Agent/?botName=Vella_FNOL&AccountId={{accountId}}&AssetId={{assetId}}\"\n                    }\n                ]\n            },\n            \"fields\": [\n                {\n                    \"collapse\": true,\n                    \"displayLabel\": \"['%vlocity_namespace%__PolicyAssetId__r']['%vlocity_namespace%__ExpirationDate__c']\",\n                    \"editing\": false,\n                    \"group\": \"Custom Properties\",\n                    \"label\": \"Expires\",\n                    \"name\": \"['%vlocity_namespace%__PolicyAssetId__r']['%vlocity_namespace%__ExpirationDate__c']\",\n                    \"type\": \"date\"\n                },\n                {\n                    \"collapse\": true,\n                    \"displayLabel\": \"['%vlocity_namespace%__PolicyAssetId__r']['AssetAutoNumber__c']\",\n                    \"editing\": false,\n                    \"group\": \"Custom Properties\",\n                    \"label\": \"Policy Number\",\n                    \"name\": \"['%vlocity_namespace%__PolicyAssetId__r']['AssetAutoNumber__c']\",\n                    \"type\": \"string\"\n                },\n                {\n                    \"collapse\": true,\n                    \"displayLabel\": \"['%vlocity_namespace%__PolicyAssetId__r']['%vlocity_namespace%__AnnualPremium__c']\",\n                    \"editing\": false,\n                    \"group\": \"Custom Properties\",\n                    \"label\": \"Per Month\",\n                    \"name\": \"['%vlocity_namespace%__PolicyAssetId__r']['%vlocity_namespace%__AnnualPremium__c']\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"name\": \"vella-policy-detail\",\n            \"placeholderExpand\": true,\n            \"placeholders\": [\n                {\n                    \"collapse\": true,\n                    \"editing\": false,\n                    \"label\": \"Per Month\",\n                    \"name\": \"PolicyPremium\",\n                    \"type\": \"string\",\n                    \"value\": \"['%vlocity_namespace%__PolicyAssetId__r']['%vlocity_namespace%__AnnualPremium__c']\"\n                },\n                {\n                    \"collapse\": true,\n                    \"editing\": false,\n                    \"label\": \"\",\n                    \"name\": \"PolicyName\",\n                    \"type\": \"string\",\n                    \"value\": \"['%vlocity_namespace%__PolicyAssetId__r']['Name']\"\n                }\n            ],\n            \"templateUrl\": \"vella-policy-detail\"\n        }\n    ],\n    \"title\": \"Vella Policy Detail Card\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-policy-detail-card/Vlocity/1504212259815",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-policy-detail-card",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-policy-detail-card/%vlocity_namespace%__VlocityCard__c/vella-policy-detail-card"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-policy-detail-card",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-policy-detail-card",
            "VlocityDataPackName": "vella-policy-detail-card",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-swipe": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i1I000000U8v6QAC\"\n            }\n        ],\n        \"type\": \"ApexRemote\",\n        \"value\": {\n            \"body\": \"{}\",\n            \"inputMap\": {\n                \"assetId\": \"{{params.id}}\"\n            },\n            \"optionsMap\": {\n                \"vlcClass\": \"%vlocity_namespace%.InsuranceAssetHandler\"\n            },\n            \"remoteClass\": \"InsuranceAssetHandler\",\n            \"remoteMethod\": \"getInsuredItems\",\n            \"remoteNSPrefix\": \"%vlocity_namespace%\",\n            \"resultVar\": \"records\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"conditions\": [\n                {\n                    \"field\": \"$scope.data.status\",\n                    \"operator\": \"===\",\n                    \"type\": \"system\",\n                    \"value\": \"'active'\"\n                }\n            ],\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"vella-swipe-item\",\n            \"templateUrl\": \"vella-swipe\"\n        }\n    ],\n    \"title\": \"Vella Swipe Insured Items\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-swipe-insured-items/Vlocity/1506383177658",
                        "%vlocity_namespace%__ParentID__c": "vella-swipe-items-policy/Vlocity/1506366127608",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-swipe-insured-items",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-swipe-insured-items/%vlocity_namespace%__VlocityCard__c/vella-swipe-insured-items"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-swipe-insured-items",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-swipe-insured-items",
            "VlocityDataPackName": "vella-swipe-insured-items",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-insurable": "Reference by Name",
                "VlocityUITemplate/vella-swipe": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"$root.ItemIds\",\n                \"val\": \"a4e6A000000L3Po,a4e6A000000L3Pt,a4e6A000000L3Py\"\n            },\n            {\n                \"name\": \"$root.rootProductCode\",\n                \"val\": \"autoComm\"\n            }\n        ],\n        \"type\": \"ApexRemote\",\n        \"value\": {\n            \"body\": \"{}\",\n            \"inputMap\": {\n            },\n            \"optionsMap\": {\n                \"ItemIds\": \"{{$root.ItemIds}}\",\n                \"ProductCode\": \"{{$root.rootProductCode}}\",\n                \"vlcClass\": \"%vlocity_namespace%.UnboundInsuredItemHandler\"\n            },\n            \"remoteClass\": \"UnboundInsuredItemHandler\",\n            \"remoteMethod\": \"getUnboundInsuredItemsDetail\",\n            \"remoteNSPrefix\": \"%vlocity_namespace%\",\n            \"resultVar\": \"records\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"blankStateCheck\": false,\n            \"conditions\": {\n                \"group\": [\n                    {\n                        \"field\": \"$scope.data.status\",\n                        \"operator\": \"===\",\n                        \"type\": \"system\",\n                        \"value\": \"'active'\"\n                    }\n                ]\n            },\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"vella-swipe-item\",\n            \"templateUrl\": \"vella-swipe\"\n        }\n    ],\n    \"title\": \"Vella Swipe Items\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-swipe-items/Vlocity/1505404165292",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-swipe-items",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-swipe-items/%vlocity_namespace%__VlocityCard__c/vella-swipe-items"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-swipe-items",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-swipe-items",
            "VlocityDataPackName": "vella-swipe-items",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityUILayout/vella-policy": "Reference by Name",
                "VlocityUITemplate/vella-swipe": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityCard__c": [
                    {
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"dataSource\": {\n        \"contextVariables\": [\n            {\n                \"name\": \"params.id\",\n                \"val\": \"02i41000004S9v7AAC\"\n            }\n        ],\n        \"type\": \"ApexRemote\",\n        \"value\": {\n            \"body\": \"{}\",\n            \"inputMap\": {\n            },\n            \"optionsMap\": {\n                \"PolicyId\": \"{{params.id}}\",\n                \"vlcClass\": \"%vlocity_namespace%.UnboundInsuredItemHandler\"\n            },\n            \"remoteClass\": \"UnboundInsuredItemHandler\",\n            \"remoteMethod\": \"getUnboundInsuredItemForPolicy\",\n            \"remoteNSPrefix\": \"%vlocity_namespace%\",\n            \"resultVar\": \"records\"\n        }\n    },\n    \"filter\": {\n    },\n    \"states\": [\n        {\n            \"blankCardState\": false,\n            \"conditions\": [\n                {\n                    \"field\": \"$scope.data.status\",\n                    \"operator\": \"===\",\n                    \"type\": \"system\",\n                    \"value\": \"'active'\"\n                }\n            ],\n            \"definedActions\": {\n                \"actions\": [\n                ]\n            },\n            \"fields\": [\n            ],\n            \"filter\": \"$scope.data.status === 'active'\",\n            \"name\": \"vella-swipe-item\",\n            \"templateUrl\": \"vella-swipe\"\n        }\n    ],\n    \"title\": \"Vella Swipe Items Policy\"\n}",
                        "%vlocity_namespace%__GlobalKey__c": "vella-swipe-items-policy/Vlocity/1506366127608",
                        "%vlocity_namespace%__ParentID__c": "vella-swipe-items/Vlocity/1505404165292",
                        "%vlocity_namespace%__Type__c": "",
                        "Name": "vella-swipe-items-policy",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityCard__c",
                        "VlocityRecordSourceKey": "VlocityCard/vella-swipe-items-policy/%vlocity_namespace%__VlocityCard__c/vella-swipe-items-policy"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityCard/vella-swipe-items-policy",
                "VlocityDataPackType": "VlocityCard"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityCard/vella-swipe-items-policy",
            "VlocityDataPackName": "vella-swipe-items-policy",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityCard"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/VlocityIntelligentInterviews": "Reference by Name",
                "VlocityCard/vella-discovery-questions": "Reference by Name",
                "VlocityCard/vella-in-force-policies": "Reference by Name",
                "VlocityCard/vella-insurable-items": "Reference by Name",
                "VlocityUITemplate/vella-home-container": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUILayout__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"Cards\": [\n        \"vella-in-force-policies\",\n        \"vella-insurable-items\",\n        \"vella-discovery-questions\",\n        \"VlocityIntelligentInterviews\"\n    ],\n    \"dataSource\": {\n        \"contextVariables\": [\n        ],\n        \"type\": null,\n        \"value\": {\n            \"query\": \"\"\n        }\n    },\n    \"sessionVars\": [\n    ],\n    \"templates\": {\n        \"0\": {\n            \"templateUrl\": \"vella-home-container\"\n        }\n    },\n    \"zones\": {\n        \"bottom\": {\n            \"cardNames\": [\n                \"VlocityIntelligentInterviews\"\n            ],\n            \"label\": \"Bottom\",\n            \"layouts\": [\n            ],\n            \"name\": \"bottom\"\n        },\n        \"middle\": {\n            \"cardNames\": [\n                \"vella-insurable-items\"\n            ],\n            \"label\": \"Middle\",\n            \"layouts\": [\n            ],\n            \"name\": \"middle\"\n        },\n        \"top\": {\n            \"cardNames\": [\n                \"vella-in-force-policies\"\n            ],\n            \"label\": \"Top\",\n            \"layouts\": [\n            ],\n            \"name\": \"top\"\n        }\n    }\n}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "vella-home/1/Vlocity/1503945875696",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "Layout",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-home",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUILayout__c",
                        "VlocityRecordSourceKey": "VlocityUILayout/vella-home/%vlocity_namespace%__VlocityUILayout__c/vella-home"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUILayout/vella-home",
                "VlocityDataPackType": "VlocityUILayout"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUILayout/vella-home",
            "VlocityDataPackName": "vella-home",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUILayout"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-policy-add-insured-item": "Reference by Name",
                "VlocityCard/vella-swipe-items": "Reference by Name",
                "VlocityUITemplate/vella-container": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUILayout__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"Cards\": [\n        \"vella-swipe-items\",\n        \"vella-policy-add-insured-item\"\n    ],\n    \"bypassSave\": true,\n    \"dataSource\": {\n        \"type\": \"Inherit\"\n    },\n    \"templates\": {\n        \"0\": {\n            \"templateUrl\": \"vella-container\"\n        }\n    }\n}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "vella-insurable/1/Vlocity/1505343322331",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "Layout",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-insurable",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUILayout__c",
                        "VlocityRecordSourceKey": "VlocityUILayout/vella-insurable/%vlocity_namespace%__VlocityUILayout__c/vella-insurable"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUILayout/vella-insurable",
                "VlocityDataPackType": "VlocityUILayout"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUILayout/vella-insurable",
            "VlocityDataPackName": "vella-insurable",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUILayout"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-more-detail-card": "Reference by Name",
                "VlocityUITemplate/vella-container": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUILayout__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"Cards\": [\n        \"vella-more-detail-card\"\n    ],\n    \"bypassSave\": true,\n    \"dataSource\": {\n        \"type\": \"Inherit\"\n    },\n    \"templates\": {\n        \"0\": {\n            \"templateUrl\": \"vella-container\"\n        }\n    }\n}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "vella-more-detail/1/Vlocity/1504828080990",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "Layout",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-more-detail",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUILayout__c",
                        "VlocityRecordSourceKey": "VlocityUILayout/vella-more-detail/%vlocity_namespace%__VlocityUILayout__c/vella-more-detail"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUILayout/vella-more-detail",
                "VlocityDataPackType": "VlocityUILayout"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUILayout/vella-more-detail",
            "VlocityDataPackName": "vella-more-detail",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUILayout"
        },
        {
            "VlocityDataPackAllRelationships": {
                "VlocityCard/vella-auto-safety-use": "Reference by Name",
                "VlocityCard/vella-home-protection": "Reference by Name",
                "VlocityCard/vella-policy-add-insured-item": "Reference by Name",
                "VlocityCard/vella-policy-coverages-card": "Reference by Name",
                "VlocityCard/vella-policy-detail-card": "Reference by Name",
                "VlocityCard/vella-swipe-insured-items": "Reference by Name",
                "VlocityCard/vella-swipe-items-policy": "Reference by Name",
                "VlocityUITemplate/vella-policy-container": "Reference by Name"
            },
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUILayout__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__Definition__c": "{\n    \"Cards\": [\n        \"vella-policy-detail-card\",\n        \"vella-swipe-insured-items\",\n        \"vella-swipe-items-policy\",\n        \"vella-policy-add-insured-item\",\n        \"vella-auto-safety-use\",\n        \"vella-home-protection\",\n        \"vella-policy-coverages-card\"\n    ],\n    \"templates\": {\n        \"0\": {\n            \"templateUrl\": \"vella-policy-container\"\n        }\n    },\n    \"zones\": {\n        \"policyAutoSafety\": {\n            \"cardNames\": [\n                \"vella-auto-safety-use\"\n            ],\n            \"label\": \"Policy Auto Safety\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyAutoSafety\"\n        },\n        \"policyCoverages\": {\n            \"cardNames\": [\n                \"vella-policy-coverages-card\"\n            ],\n            \"label\": \"Policy Coverages\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyCoverages\"\n        },\n        \"policyDetail\": {\n            \"cardNames\": [\n                \"vella-policy-detail-card\"\n            ],\n            \"label\": \"Policy Detail\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyDetail\"\n        },\n        \"policyHomeProtection\": {\n            \"cardNames\": [\n                \"vella-home-protection\"\n            ],\n            \"label\": \"Policy Home Protection\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyHomeProtection\"\n        },\n        \"policyInsured\": {\n            \"cardNames\": [\n                \"vella-swipe-insured-items\"\n            ],\n            \"label\": \"Policy Insured Items\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyInsured\"\n        },\n        \"policyUnbound\": {\n            \"cardNames\": [\n                \"vella-swipe-items-policy\",\n                \"vella-policy-add-insured-item\"\n            ],\n            \"label\": \"Policy Unbound Insurable Items\",\n            \"layouts\": [\n            ],\n            \"name\": \"policyUnbound\"\n        }\n    }\n}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__GlobalKey__c": "vella-policy/1/Vlocity/1504127303507",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Type__c": "Layout",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUILayout__c",
                        "VlocityRecordSourceKey": "VlocityUILayout/vella-policy/%vlocity_namespace%__VlocityUILayout__c/vella-policy"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUILayout/vella-policy",
                "VlocityDataPackType": "VlocityUILayout"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUILayout/vella-policy",
            "VlocityDataPackName": "vella-policy",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUILayout"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".collision-center {\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  width: 100%; }\n\n.collision-center .header {\n  background-color: #00CEFF;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  color: white;\n  padding: 10px;\n  font-weight: 400;\n  display: flex;\n  align-items: center; }\n\n.collision-center .center {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-bottom: 15px;\n  border: 1px solid #EDEDED;\n  border-top: unset;\n  padding: 10px;\n  padding-top: 15px; }\n\n.collision-center .center .info {\n  display: flex;\n  flex-direction: column;\n  margin-left: 15px;\n  color: #4C4C4C; }\n\n.collision-center .center .select {\n  width: 35px;\n  height: 35px;\n  border-radius: 100%;\n  border: 1px solid #9B9B9B;\n  overflow: hidden;\n  position: relative;\n  background-color: #FFFFFF;\n  cursor: pointer;\n  cursor: hand;\n  margin: 10px; }\n\n.collision-center .center .select .check {\n  width: 100%;\n  height: 100%;\n  background-color: #00CEFF; }\n\n.collision-center .center .select .check::after,\n.collision-center .center .select .check::before {\n  width: 100%;\n  position: absolute;\n  content: '';\n  padding: 0;\n  width: 60%;\n  height: 35%;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%) rotate(-45deg);\n  border-radius: 3px; }\n\n.collision-center .center .select .check::before {\n  border-left: 4px solid white; }\n\n.collision-center .center .select .check::after {\n  border-bottom: 4px solid white; }\n\n.collision-center .center .info .email {\n  color: #468EE5;\n  text-decoration: none; }\n",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-claims-collision-center-100/1/VlocityIBO/1509727212858",
                        "%vlocity_namespace%__HTML__c": "<div class='collision-center'>\n\t<div class='header'>\n\t  Select a Collision Center\n\t</div>\n\t<div class='center' ng-repeat='center in control.vlcSI[control.itemsKey]' ng-model='center.vlcSelected' ng-click='onSelectItem(control, center, $index, this, true)' >\n\t  <div class='select'>\n\t\t<div class='check' ng-if='center.vlcSelected'></div>\n\t  </div>\n\t  <div class='info'>\n\t\t<div class='title'>\n\t\t  {{::center.centerName}}\n\t\t</div>\n\t\t<div class='street'>\n\t\t  {{::center.centerStreet}}\n\t\t</div>\n\t\t<div class='city'>\n\t\t  {{::center.centerCity}} , {{::center.centerState}} {{center.centerPostalCode}}\n\t\t</div>\n\t\t<div class='phone'>\n\t\t  {{::center.centerPhone}}\n\t\t</div>\n\t\t<a ng-href='center.centerEmail' class='email'>\n\t\t  {{::center.centerEmail}}\n\t\t</a>\n\t  </div>\n\t</div>\n  </div>",
                        "%vlocity_namespace%__ParentID__c": "vella-claims-collision-center/1/VlocityIBO/1509669486411",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"AddToCart\": \"Add to Cart\",\n    \"OmniMonthly\": \"Monthly Cost\",\n    \"OmniOneTime\": \"One Time Cost\",\n    \"control\": {\n        \"itemsKey\": \"results\",\n        \"propSetMap\": {\n            \"label\": \"Property Label\"\n        },\n        \"vlcSI\": {\n            \"results\": [\n                {\n                    \"Description\": \"Product Description\",\n                    \"MonthlyCost\": 20,\n                    \"Name\": \"Product Name\",\n                    \"OneTimeCost\": 100,\n                    \"added\": false\n                }\n            ]\n        }\n    }\n}",
                        "%vlocity_namespace%__Sass__c": ".collision-center {\n\tdisplay: flex;\n\tflex-direction: column;\n\tfont-size: 16px;\n\twidth: 100%;\n\t}\n\t.collision-center .header {\n\tbackground-color: #00CEFF;\n\tborder-top-left-radius: 10px;\n\tborder-top-right-radius: 10px;\n\tcolor: white;\n\tpadding: 10px;\n\tfont-weight: 400;\n\tdisplay: flex;\n\talign-items: center;\n\t}\n\t.collision-center .center {\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tpadding-bottom: 15px;\n\tborder: 1px solid #EDEDED;\n\tborder-top: unset;\n\tpadding: 10px;\n\tpadding-top: 15px;\t\n\t}\n\n\t.collision-center .center .info {\n\tdisplay:flex;\n\tflex-direction: column;\n\tmargin-left: 15px;\n\tcolor: #4C4C4C;\n\t}\n\t.collision-center .center .select {\n\twidth: 35px;\n\theight: 35px;\n\tborder-radius: 100%;\n\tborder: 1px solid #9B9B9B;\n\toverflow: hidden;\n\tposition: relative;\n\tbackground-color: #FFFFFF;\n\tcursor: pointer;\n\tcursor: hand;\t \n\tmargin: 10px;\n\t}\n\t.collision-center .center .select .check {\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #00CEFF;\t\n\t}\n\t.collision-center .center .select .check::after,\n\t.collision-center .center .select .check::before {\n\twidth: 100%;\n\tposition: absolute;\n\tcontent:'';\n\tpadding: 0;\n\twidth: 60%;\n\theight: 35%;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%,-50%) rotate(-45deg);\n\tborder-radius: 3px;\n\t}\n\t.collision-center .center .select .check::before {\n\tborder-left: 4px solid white;\n\t}\n\t.collision-center .center .select .check::after {\n\tborder-bottom: 4px solid white;\t\n\t}\n\t.collision-center .center .info .email{\n\tcolor: #468EE5;\n\ttext-decoration: none;\n\t}",
                        "%vlocity_namespace%__Type__c": "OmniScript",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-claims-collision-center-100",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-claims-collision-center-100/%vlocity_namespace%__VlocityUITemplate__c/vella-claims-collision-center-100"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-claims-collision-center-100",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-claims-collision-center-100",
            "VlocityDataPackName": "vella-claims-collision-center-100",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-container-page-wrapper {\n  background-color: #00CEFF;\n  padding: 0.75rem;\n  color: #4C4C4C;\n  min-height: 32.5rem; }\n  .vella-container-page-wrapper.vella-spinner-active {\n    overflow: hidden;\n    height: calc(100vh - 44px); }\n  .vella-container-page-wrapper .vella-container-page-main-wrapper {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n    margin-bottom: 0.75rem;\n    padding: 1.5rem 0 0.5rem 0;\n    background-color: white; }\n    .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top {\n      padding: 0 1.5rem; }\n      .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top .vella-more-detail-circle {\n        position: relative;\n        width: 5.5rem;\n        height: 5.5rem;\n        margin: 0 auto 1rem auto;\n        background-color: #F5FBFF;\n        border-radius: 50%;\n        transform: translate3d(0, 0, 0); }\n        .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top .vella-more-detail-circle .vella-more-detail-img {\n          display: block;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translateX(-50%) translateY(-50%);\n          width: 55px; }\n      .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top .vella-more-detail-name {\n        display: inline-block;\n        width: 100%;\n        text-align: center;\n        font-size: 0.8125rem;\n        line-height: 1.2;\n        color: #4C4C4C;\n        text-transform: uppercase;\n        margin-bottom: 0.75rem; }\n      .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top .vella-more-detail-description {\n        text-align: center;\n        margin-bottom: 0.75rem;\n        font-weight: 300;\n        line-height: 1.4; }\n      .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-top .vella-more-detail-learn-more-btn {\n        display: block;\n        margin: 0.5rem auto;\n        color: #0090B9; }\n    .vella-container-page-wrapper .vella-container-page-main-wrapper .vella-more-detail-bottom .vella-more-detail-bottom-title {\n      border-top: 1px solid #EDEDED;\n      width: 92%;\n      margin: 1rem auto;\n      padding: 1.25rem 0 0;\n      display: block;\n      text-align: center;\n      font-size: 0.8125rem;\n      line-height: 1.2;\n      color: #4C4C4C;\n      text-transform: uppercase; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaContainerController', ['$scope', '$rootScope', '$state', function($scope, $rootScope, $state) {\n    'use strict';\n    $scope.init = function() {\n        console.log('inside vellaContainerController init');\n        $scope.currentType = $state.params.type;\n        if ($scope.currentType === 'MoreDetail') {\n            $rootScope.isLoaded = true;\n        }\n    };\n    $scope.goToMoreDetail = function() {\n        $rootScope.isLoaded = false;\n        $rootScope.cardData.InsurablePage = false;\n        $state.go('app.univ', {type: 'MoreDetail', objectId: $scope.params.id});\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-container/1/Vlocity/1504896141399",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-container-page-wrapper vella-page-wrapper\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\" ng-controller=\"vellaContainerController\" ng-init=\"init()\">\n    <div class=\"slds-spinner_container vella-spinner\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\">\n        <div role=\"status\" class=\"slds-spinner slds-spinner--medium slds-spinner--inverse\">\n            <span class=\"slds-assistive-text\">Loading</span>\n            <div class=\"slds-spinner__dot-a\"></div>\n            <div class=\"slds-spinner__dot-b\"></div>\n        </div>\n    </div>\n    <div class=\"vella-container-page-main-wrapper\">\n        <div class=\"vella-more-detail-top\">\n            <div class=\"vella-more-detail-circle\" ng-if=\"$root.cardData.Image\">\n                <img ng-src=\"{{$root.cardData.Image}}\" class=\"vella-more-detail-img\"/>\n            </div>\n            <h2 class=\"vella-more-detail-name\">{{$root.cardData.SpecName}} Coverage</h2>\n            <p class=\"vella-more-detail-description\">{{$root.cardData.Description}}</p>\n            <button class=\"slds-button vella-more-detail-learn-more-btn\" ng-if=\"currentType === 'Insurable'\" ng-click=\"goToMoreDetail()\">Learn More</button>\n        </div>\n        <div class=\"vella-more-detail-bottom\">\n            <h3 class=\"vella-more-detail-bottom-title\" ng-if=\"currentType === 'MoreDetail' && $root.coverages.coveragesMap.length\">Coverages</h3>\n            <!-- <h3 class=\"vella-more-detail-bottom-title\" ng-if=\"currentType === 'Insurable'\">{{$root.cardData.SpecName}}s Covered (0)</h3> -->\n            <div class=\"vella-more-detail-coverages-accordion\" ng-if=\"currentType === 'MoreDetail'\" bs-collapse>\n                <vloc-card ng-repeat=\"card in cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-container-card\"></vloc-card>\n            </div>\n            <div class=\"vella-insurable-items\" ng-if=\"currentType === 'Insurable'\">\n                <vloc-card ng-repeat=\"card in cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-swipe-item-card\"></vloc-card>\n            </div>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-container-page-wrapper {\n    background-color: $vella-sky;\n    padding: 0.75rem;\n    color: $vella-dark-gray;\n    min-height: 32.5rem;\n\n    &.vella-spinner-active {\n        overflow: hidden;\n        height: calc(100vh - 44px);\n    }\n\n    .vella-container-page-main-wrapper {\n        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n        margin-bottom: 0.75rem;\n        padding: 1.5rem 0 0.5rem 0;\n        background-color: white;\n\n        .vella-more-detail-top {\n            padding: 0 1.5rem;\n\n            .vella-more-detail-circle {\n                @include policyCircle(0 auto 1rem auto, $vella-light-gray-bg, '.vella-more-detail-img');\n            }\n\n            .vella-more-detail-name {\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 0.8125rem;\n                line-height: 1.2;\n                color: $vella-dark-gray;\n                text-transform: uppercase;\n                margin-bottom: 0.75rem;\n            }\n\n            .vella-more-detail-description {\n                text-align: center;\n                margin-bottom: 0.75rem;\n                font-weight: 300;\n                line-height: 1.4;\n            }\n\n            .vella-more-detail-learn-more-btn {\n                display: block;\n                margin: 0.5rem auto;\n                color: $vella-sky-text;\n            }\n        }\n\n        .vella-more-detail-bottom {\n            .vella-more-detail-bottom-title {\n                border-top: 1px solid $vella-gray-border;\n                width: 92%;\n                margin: 1rem auto;\n                padding: 1.25rem 0 0;\n                display: block;\n                text-align: center;\n                font-size: 0.8125rem;\n                line-height: 1.2;\n                color: $vella-dark-gray;\n                text-transform: uppercase;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "containers",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-container",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-container/%vlocity_namespace%__VlocityUITemplate__c/vella-container"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-container",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-container",
            "VlocityDataPackName": "vella-container",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-discovery-questions-main-wrapper {\n  background-color: white;\n  padding: 2.25rem 1.5rem 0.5rem 1.5rem; }\n  .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action {\n    border: none;\n    background-color: transparent;\n    margin: 0 0 2rem 0;\n    padding: 0; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action:nth-of-type(odd) {\n      padding-right: 0.5rem; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action:nth-of-type(even) {\n      padding-left: 0.5rem; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action .vella-discovery-questions-action-display-name {\n      color: #C1C1C1;\n      display: block;\n      margin-bottom: 0.35rem; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action .vella-discovery-questions-action-description {\n      display: block;\n      line-height: 1.2;\n      font-weight: 300;\n      font-style: italic; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaDiscoveryQuestionsController', ['$scope', '$location', 'IonicService', function($scope, $location, IonicService) {\n    'use strict';\n    $scope.launchAction = function(action) {\n        if (action.url) {\n            $location.path(action.url);\n        } else {\n            IonicService.popup.confirm({\n                title: 'Launch Action',\n                template: 'There is no URL set for this action.'\n            });\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-discovery-questions/1/Vlocity/1504290423030",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-discovery-questions\" ng-controller=\"vellaDiscoveryQuestionsController\">\n    <div class=\"slds-clearfix vella-discovery-questions-actions\">\n        <button class=\"slds-float--left slds-size--1-of-2 vella-discovery-questions-action\" ng-repeat=\"action in data.actions\" ng-click=\"performAction(action)\">\n            <span class=\"vella-discovery-questions-action-display-name\">+ {{action.displayName}}</span>\n            <span class=\"vella-discovery-questions-action-description\">{{action.description}}</span>\n        </button>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-01T18:27:03.875Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-discovery-questions-main-wrapper {\n    background-color: white;\n    padding: 2.25rem 1.5rem 0.5rem 1.5rem;\n\n    .vella-discovery-questions-card {\n        .vella-discovery-questions-actions {\n            .vella-discovery-questions-action {\n                border: none;\n                background-color: transparent;\n                margin: 0 0 2rem 0;\n                padding: 0;\n\n                &:nth-of-type(odd) {\n                    padding-right: 0.5rem;\n                }\n\n                &:nth-of-type(even) {\n                    padding-left: 0.5rem;\n                }\n\n                .vella-discovery-questions-action-display-name {\n                    color: $vella-light-gray;\n                    display: block;\n                    margin-bottom: 0.35rem;\n                }\n\n                .vella-discovery-questions-action-description {\n                    display: block;\n                    line-height: 1.2;\n                    font-weight: 300;\n                    font-style: italic;\n                }\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-discovery-questions",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-discovery-questions/%vlocity_namespace%__VlocityUITemplate__c/vella-discovery-questions"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-discovery-questions",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-discovery-questions",
            "VlocityDataPackName": "vella-discovery-questions",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-discovery-questions-main-wrapper {\n  background-color: white;\n  padding: 2.25rem 1.5rem 0.5rem 1.5rem; }\n  .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action {\n    border: none;\n    background-color: transparent;\n    margin: 0 0 2rem 0;\n    padding: 0; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action:nth-of-type(odd) {\n      padding-right: 0.5rem; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action:nth-of-type(even) {\n      padding-left: 0.5rem; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action .vella-discovery-questions-action-display-name {\n      color: #C1C1C1;\n      display: block;\n      margin-bottom: 0.35rem;\n      line-height: 1.2; }\n    .vella-discovery-questions-main-wrapper .vella-discovery-questions-card .vella-discovery-questions-actions .vella-discovery-questions-action .vella-discovery-questions-action-description {\n      display: block;\n      line-height: 1.2;\n      font-weight: 300;\n      font-style: italic; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaDiscoveryQuestionsController', ['$scope', '$rootScope', '$location', 'IonicService', function($scope, $rootScope, $location, IonicService) {\n    'use strict';\n    $scope.initData = function(obj) {\n        $scope.question = obj;\n        $scope.intelAction = {\n            url: obj.info[$rootScope.nsPrefix + 'Url__c']\n        };\n    };\n\n    $scope.launchAction = function(url) {\n        if (url) {\n            $location.path(url);\n        } else {\n            IonicService.popup.confirm({\n                title: 'Launch Action',\n                template: 'There is no URL set for this action.'\n            });\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-discovery-questions-intelligent/1/Vlocity/1511290401735",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-discovery-questions\" ng-controller=\"vellaDiscoveryQuestionsController\" ng-init=\"initData(obj)\">\n    <div class=\"slds-clearfix vella-discovery-questions-actions\">\n        <button class=\"vella-discovery-questions-action\" ng-click=\"performAction(intelAction)\">\n            <span class=\"vella-discovery-questions-action-display-name\">+ {{obj.resource[$root.nsPrefix + 'Headline__c']}}</span>\n            <span class=\"vella-discovery-questions-action-description\">{{obj.resource[$root.nsPrefix + 'SubTitle__c']}}</span>\n        </button>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-01T18:27:03.875Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-discovery-questions-main-wrapper {\n    background-color: white;\n    padding: 2.25rem 1.5rem 0.5rem 1.5rem;\n\n    .vella-discovery-questions-card {\n        .vella-discovery-questions-actions {\n            .vella-discovery-questions-action {\n                border: none;\n                background-color: transparent;\n                margin: 0 0 2rem 0;\n                padding: 0;\n\n                &:nth-of-type(odd) {\n                    padding-right: 0.5rem;\n                }\n\n                &:nth-of-type(even) {\n                    padding-left: 0.5rem;\n                }\n\n                .vella-discovery-questions-action-display-name {\n                    color: $vella-light-gray;\n                    display: block;\n                    margin-bottom: 0.35rem;\n                    line-height: 1.2;\n                }\n\n                .vella-discovery-questions-action-description {\n                    display: block;\n                    line-height: 1.2;\n                    font-weight: 300;\n                    font-style: italic;\n                }\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-discovery-questions-intelligent",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-discovery-questions-intelligent/%vlocity_namespace%__VlocityUITemplate__c/vella-discovery-questions-intelligent"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-discovery-questions-intelligent",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-discovery-questions-intelligent",
            "VlocityDataPackName": "vella-discovery-questions-intelligent",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-home-circle-main-wrapper {\n  margin: 0 0 0.5rem 0;\n  padding: 0 1.5rem; }\n  .vella-home-circle-main-wrapper.vella-zone-middle {\n    background-color: #00CEFF;\n    margin: 0;\n    padding: 1.5rem 1.5rem 0.5rem; }\n  .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper {\n    padding-bottom: 1.5rem; }\n    .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-circle {\n      position: relative;\n      width: 5.5rem;\n      height: 5.5rem;\n      margin: 0 auto;\n      background-color: white;\n      border-radius: 50%;\n      transform: translate3d(0, 0, 0); }\n      .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-circle .vella-home-circle-img {\n        display: block;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: 55px; }\n      .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-circle:before {\n        content: \"1\";\n        display: block;\n        position: absolute;\n        z-index: 10;\n        top: 0;\n        right: 0;\n        width: 1.375rem;\n        height: 1.375rem;\n        background-color: #FF6D00;\n        border-radius: 50%;\n        color: white;\n        font-weight: bold;\n        text-align: center;\n        line-height: 1.6rem;\n        letter-spacing: 1px;\n        opacity: 0;\n        transition: opacity 100ms ease-in; }\n      .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-circle.vella-policy-notification {\n        position: relative; }\n        .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-circle.vella-policy-notification:before {\n          opacity: 1; }\n    .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-home-circle-name {\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n      color: white;\n      margin-top: 0.75rem;\n      font-size: 0.8125rem;\n      font-weight: bold;\n      line-height: 1.2; }\n    .vella-home-circle-main-wrapper .vella-home-circle-card .vella-home-circle-inner-wrapper .vella-add-insurable {\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n      color: #0090B9;\n      margin-top: 0.25rem;\n      font-size: 0.8125rem;\n      line-height: 1.2; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaHomeCircleController', ['$scope', '$rootScope', '$state', 'vellaHomeCircleService', function($scope, $rootScope, $state, vellaHomeCircleService) {\n    'use strict';\n    function parseImageResponse(img) {\n        var imgParts, url;\n        if (!img) {\n            return '';\n        } else {\n            imgParts = img.split('\"');\n            angular.forEach(imgParts, function(part, i) {\n                if (part.indexOf('http') > -1) {\n                    url = part.replace(/&amp;/g, '&');\n                }\n            });\n            return url;\n        }\n    }\n\n    function makeInsurableName(items) {\n        var insurableName;\n        angular.forEach(items, function(item, i) {\n            if (i === 0) {\n                insurableName = item.ItemName;\n                if (items.length > 1) {\n                    insurableName += ' and ';\n                }\n            } else if (i === 1) {\n                insurableName += item.ItemName;\n            } else if (i === 2) {\n                insurableName += ' + ' + (items.length - 2) + ' more';\n                return insurableName;\n            }\n        });\n        return insurableName;\n    }\n\n    function combineItems(items) {\n        var returnArray = [];\n        var tempObj = {};\n        var divideObj = {};\n        angular.forEach(items, function(item, i) {\n            if (!divideObj[item.SpecId]) {\n                divideObj[item.SpecId] = [];\n                divideObj[item.SpecId].push(item);\n            } else {\n                divideObj[item.SpecId].push(item);\n            }\n        });\n        console.log('divideObj', divideObj);\n        // Loop through division obj and create final array\n        angular.forEach(divideObj, function(obj, i) {\n            tempObj = {};\n            tempObj.Name = makeInsurableName(obj);\n            tempObj.Image = $rootScope.instanceUrl + '/servlet/servlet.FileDownload?file=' + obj[0].SpecImageId;\n            tempObj.Description = obj[0].SpecDescription;\n            tempObj.SpecName = obj[0].SpecName;\n            tempObj.Count = obj.length;\n            returnArray.push(tempObj);\n        });\n        return returnArray;\n    }\n\n    function getItemIds(SpecName) {\n        var returnStr = '';\n        angular.forEach($scope.circleObj.Item, function(item, i) {\n            if (item.SpecName === SpecName) {\n                if (returnStr.length) {\n                    returnStr = returnStr + ',' + item.ItemId;\n                } else {\n                    returnStr = item.ItemId;\n                }\n            }\n        });\n        // return angular.toJson(returnArray);\n        return returnStr;\n    }\n\n    $rootScope.vlocityMobileNotificationSensor = {\n        active: false,\n        message: ''\n    };\n    if (localStorage.vlocityMobileNotificationSensor) {\n        $rootScope.vlocityMobileNotificationSensor = angular.fromJson(localStorage.getItem('vlocityMobileNotificationSensor'));\n        console.log('after retrieval from localStorage:', $rootScope.vlocityMobileNotificationSensor);\n    }\n    $rootScope.$on('VlocityMobileNotification', function(event, data) {\n        console.log('VlocityMobileNotification', event, data);\n        if ($scope.circleObj[$rootScope.nsPrefix + 'Type__c'] === 'Renters' || $scope.circleObj[$rootScope.nsPrefix + 'Type__c'] === 'Property' || $scope.circleObj[$rootScope.nsPrefix + 'Type__c'] === 'Homeowners') {\n            $rootScope.vlocityMobileNotificationSensor.active = true;\n            $rootScope.vlocityMobileNotificationSensor.message = data.message;\n            if (localStorage) {\n                localStorage.setItem('vlocityMobileNotificationSensor', angular.toJson($rootScope.vlocityMobileNotificationSensor));\n            }\n            $scope.$apply();\n        }\n    });\n\n    $scope.getObj = function(obj) {\n        var items;\n        console.log('in getObj', obj);\n        $scope.circleObj = obj;\n        if ($scope.circleObj.Item) {\n            $scope.circleObj.items = combineItems($scope.circleObj.Item);\n            console.log('$scope.circleObj.items', $scope.circleObj.items);\n            $scope.circleObj.mobileType = 'Insurable';\n        } else if ($scope.circleObj.AccountId && $scope.circleObj.Type && $scope.circleObj.Type !== 'Device') {\n            if (!$rootScope.accountId) {\n                $rootScope.accountId = $scope.circleObj.AccountId;\n            }\n            if (!$rootScope.accountName) {\n                $rootScope.accountName = $scope.circleObj.AccountName;\n                $rootScope.accountFirstName = $rootScope.accountName.split(' ')[0];\n                $rootScope.accountLastName = $rootScope.accountName.split(' ')[1];\n            }\n            $scope.circleObj.mobileType = 'Policy';\n            vellaHomeCircleService.getImage($scope, $scope.circleObj.AssetId).then(function(result) {\n                if (result.length && result[0][$rootScope.nsPrefix + 'Image__c']) {\n                    $scope.imageUrl = parseImageResponse(result[0][$rootScope.nsPrefix + 'Image__c']);\n                    console.log($scope.imageUrl);\n                } else {\n                    vellaHomeCircleService.getImageFromProduct2($scope, $scope.circleObj.Product2Id).then(function(result2) {\n                        if (result2.length) {\n                            $scope.imageUrl = $rootScope.instanceUrl + '/servlet/servlet.FileDownload?file=' + result2[0].Id;\n                            console.log($scope.imageUrl);\n                        } else {\n                            $scope.imageUrl = '';\n                        }\n                    }, function(error) {\n                        $rootScope.vellaNotificationService.throwNotification(error);\n                    });\n                }\n                $rootScope.isLoaded = true;\n            }, function(error) {\n                $rootScope.vellaNotificationService.throwNotification(error);\n            });\n        }\n    };\n    $scope.goToItem = function(layoutType, item, imageUrl) {\n        $rootScope.isLoaded = false;\n        console.log('goToItem', layoutType, item);\n        $rootScope.cardData = {};\n        if (layoutType === 'Insurable') {\n            $rootScope.cardData.imageUrl = item.Image;\n            $rootScope.cardData.Image = imageUrl;\n            $rootScope.cardData.Name = item.Name;\n            $rootScope.cardData.Description = item.Description;\n            $rootScope.cardData.SpecName = item.SpecName;\n            $rootScope.cardData.Count = item.Count;\n            $rootScope.cardData.InsurablePage = true;\n            $rootScope.ItemIds = getItemIds(item.SpecName);\n            // STATIC FOR DEMO:\n            if (item.SpecName === 'Pet') {\n                $rootScope.rootProductCode = 'PET-INJ-ILL';\n            } else if (item.SpecName === 'Valuable') {\n                $rootScope.rootProductCode = 'Valuables';\n            } else if (item.SpecName === 'Auto') {\n                $rootScope.rootProductCode = 'autoComm';\n            }\n            console.log('$rootScope.ItemIds', $rootScope.ItemIds);\n        } else {\n            $rootScope.cardData.Type = item.Type;\n            $rootScope.cardData.Image = imageUrl;\n            if (item.Product2Id) {\n                $rootScope.cardData.SpecCode = item.ProductCode;\n                $rootScope.cardData.SpecName = item.ProductName;\n                if (item.ProductCode && item.ProductCode.toLowerCase().indexOf('pet') > -1) {\n                    $rootScope.cardData.showSwipe = 'Pet';\n                } else if (item.ProductCode && item.ProductCode.toLowerCase().indexOf('valuable') > -1) {\n                    $rootScope.cardData.showSwipe = 'Valuable';\n                } else if (item.ProductCode && item.ProductCode.toLowerCase().indexOf('auto') > -1) {\n                    $rootScope.cardData.showSwipe = 'Auto';\n                } else {\n                    $rootScope.cardData.showSwipe = false;\n                }\n                if (item.ProductCode && item.ProductCode.toLowerCase().indexOf('auto') > -1) {\n                    $rootScope.cardData.autoUsage = 'Auto';\n                } else {\n                    $rootScope.cardData.autoUsage = false;\n                }\n            }\n        }\n        console.log('$rootScope.cardData', $rootScope.cardData);\n        $state.go('app.univ', {type: layoutType, objectId: $scope.circleObj.AssetId});\n    };\n}]);\nvlocity.cardframework.registerModule.factory('vellaHomeCircleService', ['$rootScope', '$q', 'dataSourceService', function($rootScope, $q, dataSourceService) {\n    'use strict';\n    return {\n        getImage: function(scope, assetId) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'Query';\n            datasource.value = {\n                query: 'SELECT ' + $rootScope.nsPrefix + 'Image__c FROM ' + $rootScope.nsPrefix + 'AssetInsuredItem__c WHERE ' + $rootScope.nsPrefix + 'PolicyAssetId__c = \\'' + assetId + '\\'',\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: '',\n                remoteMethod: '',\n                inputMap: {}\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        },\n        getImageFromProduct2: function(scope, product2Id) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'Query';\n            datasource.value = {\n                query: 'SELECT Id FROM Attachment WHERE ParentId = \\'' + product2Id + '\\' AND Name like \\'prodImage_%\\' AND ContentType like \\'image%\\'',\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: '',\n                remoteMethod: '',\n                inputMap: {}\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-home-circle/1/Vlocity/1503958217702",
                        "%vlocity_namespace%__HTML__c": "<div ng-controller=\"vellaHomeCircleController\" ng-init=\"getObj(obj)\">\n    <div class=\"vella-home-circle-policies vella-home-circle-inner-wrapper\" ng-if=\"circleObj.mobileType === 'Policy'\">\n        <div class=\"vella-home-circle-circle\" ng-click=\"goToItem(circleObj.mobileType, circleObj, imageUrl)\" ng-class=\"{'vella-policy-notification': ($root.vlocityMobileNotification && circleObj.Type === 'Auto') || ($root.vlocityMobileNotificationSensor.active && (circleObj.Type === 'Renters' || circleObj.Type === 'Homeowners' || circleObj.Type === 'Property'))}\">\n            <img ng-src=\"{{imageUrl}}\" class=\"vella-home-circle-img\"/>\n        </div>\n        <span class=\"vella-home-circle-name\" ng-click=\"goToItem(circleObj.mobileType, circleObj, imageUrl)\">{{circleObj.ProductName}}</span>\n    </div>\n    <div class=\"slds-grid slds-wrap\" ng-if=\"circleObj.mobileType === 'Insurable'\">\n        <div class=\"slds-size--1-of-2 vella-home-circle-insurables vella-home-circle-inner-wrapper\" ng-repeat=\"item in circleObj.items\">\n            <div class=\"vella-home-circle-circle\" ng-click=\"goToItem(circleObj.mobileType, item, item.Image)\">\n                <img ng-src=\"{{item.Image}}\" class=\"vella-home-circle-img\"/>\n            </div>\n            <span class=\"vella-home-circle-name\" ng-click=\"goToItem(circleObj.mobileType, item, item.Image)\">{{item.Name}}</span>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-08-28T22:10:18.533Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-home-circle-main-wrapper {\n    margin: 0 0 0.5rem 0;\n    padding: 0 1.5rem;\n\n    &.vella-zone-middle {\n        background-color: $vella-sky;\n        margin: 0;\n        padding: 1.5rem 1.5rem 0.5rem;\n    }\n\n    .vella-home-circle-card {\n        .vella-home-circle-inner-wrapper {\n            padding-bottom: 1.5rem;\n\n            .vella-home-circle-circle {\n                @include policyCircle(0 auto, white, '.vella-home-circle-img');\n\n                &:before {\n                    content: \"1\";\n                    display: block;\n                    position: absolute;\n                    z-index: 10;\n                    top: 0;\n                    right: 0;\n                    width: 1.375rem;\n                    height: 1.375rem;\n                    background-color: $vella-orange;\n                    border-radius: 50%;\n                    color: white;\n                    font-weight: bold;\n                    text-align: center;\n                    line-height: 1.6rem;\n                    letter-spacing: 1px;\n                    opacity: 0;\n                    transition: opacity 100ms ease-in;\n                }\n\n                &.vella-policy-notification {\n                    position: relative;\n\n                    &:before {\n                        opacity: 1;\n                    }\n                }\n            }\n            .vella-home-circle-name {\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                color: white;\n                margin-top: 0.75rem;\n                font-size: 0.8125rem;\n                font-weight: bold;\n                line-height: 1.2;\n            }\n\n            .vella-add-insurable {\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                color: $vella-sky-text;\n                margin-top: 0.25rem;\n                font-size: 0.8125rem;\n                line-height: 1.2;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-home-circle",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-home-circle/%vlocity_namespace%__VlocityUITemplate__c/vella-home-circle"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-home-circle",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-home-circle",
            "VlocityDataPackName": "vella-home-circle",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": "html {\n  font-size: 16px;\n  height: 100%; }\n\nbody.via-slds {\n  height: 100%; }\n  body.via-slds > span {\n    height: 100%;\n    display: block; }\n  body.via-slds.via-slds {\n    height: 100%;\n    font-family: \"Brown\", \"Salesforce Sans\", Arial, sans-serif; }\n    body.via-slds.via-slds h1,\n    body.via-slds.via-slds h2,\n    body.via-slds.via-slds h3,\n    body.via-slds.via-slds h4,\n    body.via-slds.via-slds h5,\n    body.via-slds.via-slds h6,\n    body.via-slds.via-slds th,\n    body.via-slds.via-slds td {\n      font-family: \"Brown\", \"Salesforce Sans\", Arial, sans-serif; }\n    body.via-slds.via-slds vloc-mobile {\n      height: 100%;\n      display: block; }\n      body.via-slds.via-slds vloc-mobile div[layout-name] {\n        height: 100%; }\n        body.via-slds.via-slds vloc-mobile div[layout-name] ng-include[src] {\n          height: 100%;\n          display: block; }\n    body.via-slds.via-slds div[layout-id] {\n      height: 100%; }\n      body.via-slds.via-slds div[layout-id] ng-include[src=\"'vella-home-container'\"] {\n        height: 100%;\n        display: block; }\n\n@media screen and (min-width: 410px) {\n  html {\n    font-size: 18px; } }\n\n.via-slds .slds-spinner_container {\n  z-index: -1; }\n  .via-slds .slds-spinner_container.vlocity-start-loading {\n    height: calc(100vh + 44px); }\n\n.via-slds .vella-spinner {\n  z-index: calc(9000 + 2);\n  background-color: rgba(0, 128, 249, 0.85);\n  position: fixed;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0ms linear 150ms, position 0ms linear 150ms, opacity 150ms ease-in;\n  height: calc(100vh - 44px); }\n  .via-slds .vella-spinner.vella-spinner-active {\n    opacity: 1;\n    visibility: visible;\n    transition: visibility 0ms linear 0ms, position 0ms linear 0ms, opacity 150ms ease-in;\n    height: calc(100vh + 44px); }\n  .via-slds .vella-spinner .slds-spinner {\n    top: 44%; }\n\n.via-slds .vella-notification {\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0ms linear 150ms, position 0ms linear 150ms, opacity 150ms ease-in; }\n  .via-slds .vella-notification.vella-notification-active {\n    opacity: 1;\n    visibility: visible;\n    transition: visibility 0ms linear 0ms, position 0ms linear 0ms, opacity 150ms ease-in; }\n\n.via-slds.vella-insurable .vella-spinner, .via-slds.vella-more-detail .vella-spinner {\n  background-color: rgba(0, 206, 255, 0.85); }\n\n.vella-page-wrapper.vella-spinner-active {\n  overflow: hidden;\n  height: calc(100vh - 44px); }\n\n.vella-main-wrapper {\n  height: auto;\n  background-color: #0080F9;\n  color: #4C4C4C;\n  position: relative; }\n  .vella-main-wrapper .vella-name {\n    color: #00CEFF;\n    font-size: 2.25rem;\n    font-weight: bold;\n    text-align: center;\n    width: 100%;\n    line-height: 1.4;\n    padding-top: 0.75rem; }\n  .vella-main-wrapper .vella-intelligence-help-form {\n    position: relative;\n    margin: 0.75rem auto 0.5rem;\n    width: 80%; }\n    .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-input {\n      background-color: rgba(0, 206, 255, 0.6);\n      width: 100%;\n      height: 2.75rem;\n      margin: 0;\n      padding: 0 2rem;\n      border-radius: 2rem;\n      display: block;\n      border: none;\n      text-align: center;\n      color: white;\n      font-size: 1rem;\n      line-height: 2.85rem;\n      transition: background-color 100ms ease-in; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-input::placeholder {\n        font-weight: 300;\n        font-size: 0.875rem;\n        color: white;\n        font-style: italic;\n        transition: color 100ms ease-in; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-input:placeholder-shown {\n        background-color: rgba(0, 206, 255, 0.2);\n        color: white;\n        font-size: 0.875rem; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-input:focus {\n        background-color: rgba(0, 206, 255, 0.4); }\n        .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-input:focus::placeholder {\n          color: transparent; }\n    .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-clear {\n      position: absolute;\n      z-index: 10;\n      top: 50%;\n      transform: translateY(-50%);\n      right: 1rem;\n      visibility: hidden;\n      opacity: 0;\n      transition: visibility 0ms linear 150ms, position 0ms linear 150ms, opacity 150ms ease-in; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-clear.vella-intelligence-help-clear-active {\n        opacity: 0.5;\n        visibility: visible;\n        transition: visibility 0ms linear 0ms, position 0ms linear 0ms, opacity 150ms ease-in; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-clear .slds-button__icon {\n        fill: white;\n        width: 1.15rem;\n        height: 1.15rem; }\n      .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-clear:focus, .vella-main-wrapper .vella-intelligence-help-form .vella-intelligence-help-clear:active {\n        opacity: 0.75rem; }\n  .vella-main-wrapper .vella-welcome {\n    color: white;\n    text-align: center;\n    width: 100%;\n    font-size: 0.875rem;\n    margin-bottom: 1.25rem; }\n  .vella-main-wrapper .vella-whats-not-covered {\n    color: #0090B9;\n    text-align: center;\n    width: 100%;\n    font-size: 0.875rem;\n    margin-bottom: 1.25rem; }\n  .vella-main-wrapper .vella-inner-block-container {\n    padding: 1.25rem 0 0; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaHomeController', ['$scope', '$rootScope', '$location', '$timeout', '$state', 'vellaNotificationService', 'IonicService', function($scope, $rootScope, $location, $timeout, $state, vellaNotificationService, IonicService) {\n    'use strict';\n    $rootScope.isLoaded = false;\n    $rootScope.vellaNotificationService = vellaNotificationService;\n    $rootScope.accountId = '';\n    $rootScope.accountName = '';\n    $rootScope.accountFirstName = '';\n    $rootScope.accountLastName = '';\n\n    // Watcher to remove the spinner after 15 seconds in case of a freeze error1\n    $rootScope.$watch('isLoaded', function(newValue, oldValue) {\n        if (newValue !== oldValue && !newValue && !$rootScope.spinnerTimeout) {\n            $rootScope.spinnerTimeout = $timeout(function() {\n                // IonicService.popup.confirm({\n                //     title: 'Timeout',\n                //     template: 'The request was taking too long, please try again.'\n                // });\n                $rootScope.isLoaded = true;\n            }, 15000);\n        } else if (newValue !== oldValue && newValue && $rootScope.spinnerTimeout) {\n            $timeout.cancel($rootScope.spinnerTimeout);\n            $rootScope.spinnerTimeout = null;\n        } \n    });\n    // Always turn the spinner off when navigating backwards (in case it is done before spinner is cleared on current view)\n    $rootScope.$on('$ionicView.afterEnter', function() {\n        if ($state.params.type === 'Home') {\n            $timeout(function() {\n                $rootScope.isLoaded = true;\n            }, 500);\n            console.log('entered Home, isLoaded set to true');\n        }\n    });\n\n    $scope.launchVellaIntelligence = function(vellaIntelligenceHelp) {\n        var url = '/app/chatbot/Your Agent/?botName=Vella_ChatBot&AccountId=' + $rootScope.accountId + '&userInput=' + vellaIntelligenceHelp;\n        $location.path(url);\n    };\n}]);\n\n// Services used globally throughout the App (stored in this template JS):\nvlocity.cardframework.registerModule.factory('vellaNotificationService', ['$rootScope', '$timeout', function($rootScope, $timeout) {\n    'use strict';\n    return {\n        throwNotification: function(notification) {\n            if (notification.data) {\n                $rootScope.notification.type = 'Error';\n                if (!notification.message) {\n                    $rootScope.notification.message = 'No error message.';\n                }\n                if (notification.message.indexOf('Logged in?') > -1) {\n                    $rootScope.notification.message = 'You have been logged out of Salesforce. Please back up any changes to your document and refresh your browser window to login again.';\n                }\n            } else {\n                $rootScope.notification.type = notification.type;\n                $rootScope.notification.message = notification.message;\n            }\n            $rootScope.notification.active = true;\n            $rootScope.isLoaded = true;\n            // Autohide notification after 5 seconds:\n            $timeout(function() {\n                $rootScope.notification.active = false;\n            }, 5000);\n        },\n        closeNotification: function() {\n            $rootScope.notification.active = false;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "{\"zones\":[{\"name\":\"top\",\"label\":\"Top\",\"$$hashKey\":\"object:1422\"},{\"name\":\"middle\",\"label\":\"Middle\",\"$$hashKey\":\"object:2185\"},{\"name\":\"bottom\",\"label\":\"Bottom\",\"$$hashKey\":\"object:2947\"}]}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-home-container/1/Vlocity/1503945857107",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-main-wrapper vella-page-wrapper\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\" ng-controller=\"vellaHomeController\">\n    <div class=\"slds-spinner_container vella-spinner\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\">\n        <div role=\"status\" class=\"slds-spinner slds-spinner--medium slds-spinner--inverse\">\n            <span class=\"slds-assistive-text\">Loading</span>\n            <div class=\"slds-spinner__dot-a\"></div>\n            <div class=\"slds-spinner__dot-b\"></div>\n        </div>\n    </div>\n    <div class=\"slds-notify_container vella-notification\" ng-class=\"{'vella-notification-visible': $root.notification.active}\">\n        <div class=\"slds-notify slds-notify--toast\" role=\"alert\" ng-class=\"{'slds-theme--success': $root.notification.type === 'Success', 'slds-theme--warning': $root.notification.type === 'Warning', 'slds-theme--error': $root.notification.type === 'Error'}\">\n            <span class=\"slds-assistive-text\">{{$root.notification.type}}</span>\n            <button class=\"slds-button slds-notify__close slds-button--icon-inverse\" title=\"Close\">\n                <slds-button-svg-icon size=\"'large'\" sprite=\"'utility'\" icon=\"'close'\"></slds-button-svg-icon>\n                <span class=\"slds-assistive-text\">Close</span>\n            </button>\n            <div class=\"slds-notify__content slds-grid\">\n                <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'warning'\" extra-classes=\"'slds-m-right--small slds-col slds-no-flex'\" ng-if=\"$root.notification.type === 'Error'\"></slds-svg-icon>\n                <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'notification'\" extra-classes=\"'slds-m-right--small slds-col slds-no-flex'\" ng-if=\"$root.notification.type === 'Success'\"></slds-svg-icon>\n                <div class=\"slds-col slds-align-middle\">\n                    <h2 class=\"slds-text-heading--small\">{{$root.notification.message}}</h2>\n                </div>\n            </div>\n        </div>\n    </div>\n    <h1 class=\"vella-name\">vella</h1>\n    <form class=\"vella-intelligence-help-form\" ng-submit=\"launchVellaIntelligence(vellaIntelligenceHelp)\">\n        <input type=\"text\" class=\"vella-intelligence-help-input\" placeholder=\"What can I help you with?\" ng-model=\"vellaIntelligenceHelp\"></input>\n        <button type=\"button\" class=\"vella-intelligence-help-clear slds-input__icon slds-input__icon--right slds-button slds-button--icon\" ng-class=\"{'vella-intelligence-help-clear-active': vellaIntelligenceHelp}\" ng-click=\"vellaIntelligenceHelp = ''\">\n            <slds-button-svg-icon size=\"'large'\" sprite=\"'utility'\" icon=\"'clear'\"></slds-button-svg-icon>\n            <span class=\"slds-assistive-text\">Clear</span>\n        </button>\n    </form>\n    <div class=\"vella-inner-block-container\">\n        <h2 class=\"vella-welcome\">Hi {{$root.accountFirstName}}, here's what's covered:</h2>\n        <div class=\"slds-grid slds-wrap vella-zone-top vella-home-circle-main-wrapper vella-in-force-policies-main-wrapper\">\n            <vloc-card ng-repeat=\"card in data.zones.top.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"slds-size--1-of-2 vella-home-circle-card vella-in-force-policy-card\" ng-hide=\"!card.obj.Type || card.obj.Type === 'Device'\">\n            </vloc-card>\n        </div>\n        <div class=\"vella-zone-middle vella-home-circle-main-wrapper\">\n            <h3 class=\"vella-whats-not-covered\">Here is what is not covered:</h3>\n            <vloc-card ng-repeat=\"card in data.zones.middle.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-home-circle-card vella-insurable-items-card\">\n            </vloc-card>\n        </div>\n        <div class=\"vella-zone-bottom vella-discovery-questions-main-wrapper slds-grid slds-wrap\" ng-if=\"$root.accountId\">\n            <vloc-card ng-repeat=\"card in data.zones.bottom.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"slds-size--1-of-2 vella-discovery-questions-card\">\n            </vloc-card>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n@include configureUI;\n\n.via-slds {\n    .slds-spinner_container {\n        z-index: -1;\n\n        &.vlocity-start-loading {\n            height: calc(100vh + 44px);\n        }\n    }\n    .vella-spinner {\n        z-index: calc(9000 + 2);\n        background-color: rgba($vella-royal, 0.85);\n        position: fixed;\n        @include transitionVisibility('vella-spinner', 1, false, true);\n\n        .slds-spinner {\n            top: 44%;\n        }\n    }\n\n    .vella-notification {\n        @include transitionVisibility('vella-notification');\n    }\n\n    &.vella-insurable, &.vella-more-detail {\n        .vella-spinner {\n            background-color: rgba($vella-sky, 0.85);\n        }\n    }\n}\n\n.vella-page-wrapper {\n    &.vella-spinner-active {\n        overflow: hidden;\n        height: calc(100vh - 44px);\n    }\n}\n\n.vella-main-wrapper {\n    height: auto;\n    background-color: $vella-royal;\n    color: $vella-dark-gray;\n    position: relative;\n\n    .vella-name {\n        color: $vella-sky;\n        font-size: 2.25rem;\n        font-weight: bold;\n        text-align: center;\n        width: 100%;\n        line-height: 1.4;\n        padding-top: 0.75rem;\n    }\n\n    .vella-intelligence-help-form {\n        position: relative;\n        margin: 0.75rem auto 0.5rem;\n        width: 80%;\n\n        .vella-intelligence-help-input {\n            background-color: rgba($vella-sky, 0.6);\n            width: 100%;\n            height: 2.75rem;\n            margin: 0;\n            padding: 0 2rem;\n            border-radius: 2rem;\n            display: block;\n            border: none;\n            text-align: center;\n            color: white;\n            font-size: 1rem;\n            line-height: 2.85rem;\n            transition: background-color 100ms ease-in;\n\n            &::placeholder {\n                font-weight: 300;\n                font-size: 0.875rem;\n                color: white;\n                font-style: italic;\n                transition: color 100ms ease-in;\n            }\n\n            &:placeholder-shown {\n                background-color: rgba($vella-sky, 0.2);\n                color: white;\n                font-size: 0.875rem;\n            }\n\n            &:focus {\n                background-color: rgba($vella-sky, 0.4);\n                &::placeholder {\n                    color: transparent;\n                }\n            }\n        }\n\n        .vella-intelligence-help-clear {\n            position: absolute;\n            z-index: 10;\n            top: 50%;\n            transform: translateY(-50%);\n            right: 1rem;\n            @include transitionVisibility('vella-intelligence-help-clear', 0.5);\n\n            .slds-button__icon {\n                fill: white;\n                width: 1.15rem;\n                height: 1.15rem;\n            }\n\n            &:focus, &:active {\n                opacity: 0.75rem;\n            }\n        }\n    }\n\n    .vella-welcome {\n        color: white;\n        text-align: center;\n        width: 100%;\n        font-size: 0.875rem;\n        margin-bottom: 1.25rem;\n    }\n\n    .vella-whats-not-covered {\n        color: $vella-sky-text;\n        text-align: center;\n        width: 100%;\n        font-size: 0.875rem;\n        margin-bottom: 1.25rem;\n    }\n\n    .vella-inner-block-container {\n        padding: 1.25rem 0 0;\n    }\n}",
                        "%vlocity_namespace%__Type__c": "containers",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-home-container",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-home-container/%vlocity_namespace%__VlocityUITemplate__c/vella-home-container"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-home-container",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-home-container",
            "VlocityDataPackName": "vella-home-container",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-home-protection {\n  margin: 0 1rem;\n  border-bottom: 1px solid #EDEDED; }\n\n.vella-policy-home-protection-container {\n  padding: 0 0.5rem 0.5rem 0.5rem;\n  background-color: white;\n  color: #4C4C4C; }\n  .vella-policy-home-protection-container .vella-policy-home-protection-top {\n    margin-bottom: 1.5rem;\n    padding-top: 1.5rem; }\n    .vella-policy-home-protection-container .vella-policy-home-protection-top .vella-policy-home-protection-name {\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n      font-size: 0.8125rem;\n      line-height: 1.2;\n      color: #4C4C4C;\n      text-transform: uppercase;\n      margin-bottom: 0.75rem; }\n    .vella-policy-home-protection-container .vella-policy-home-protection-top .vella-policy-home-protection-description {\n      text-align: center;\n      margin-bottom: 0.5rem;\n      font-weight: 300;\n      line-height: 1.4;\n      padding: 0 0.5rem; }\n  .vella-policy-home-protection-container .vella-policy-home-protection-sensors {\n    padding: 0 0.75rem; }\n    .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor {\n      color: #4C4C4C;\n      font-size: 0.75rem;\n      line-height: 1.25rem;\n      margin-bottom: 1rem; }\n      .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-indicator {\n        width: 1.125rem;\n        height: 1.125rem;\n        border-radius: 50%;\n        box-shadow: 1px 1px 2px 0 #D0D0D0;\n        margin-right: 1.5rem; }\n        .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-indicator.vella-policy-home-protection-indicator-online {\n          background-color: #02E889;\n          animation: pulse-online 1.5s infinite;\n          animation-direction: alternate;\n          animation-timing-function: ease-in;\n          animation-delay: 0.5s; }\n\n@keyframes pulse-online {\n  0% {\n    background-color: #02E889; }\n  100% {\n    background-color: #018d53; } }\n        .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-indicator.vella-policy-home-protection-indicator-offline {\n          background-color: #FACB15;\n          animation: pulse-offline 1.5s infinite;\n          animation-direction: alternate;\n          animation-timing-function: ease-in;\n          animation-delay: 0.5s; }\n\n@keyframes pulse-offline {\n  0% {\n    background-color: #FACB15; }\n  100% {\n    background-color: #af8c04; } }\n        .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-indicator.vella-policy-home-protection-indicator-alert {\n          background-color: #FD5365;\n          animation: pulse-alert 1.5s infinite;\n          animation-direction: alternate;\n          animation-timing-function: ease-in;\n          animation-delay: 0.5s; }\n\n@keyframes pulse-alert {\n  0% {\n    background-color: #FD5365; }\n  100% {\n    background-color: #f1031c; } }\n      .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-label {\n        text-transform: uppercase; }\n        .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-label .device-message {\n          text-transform: none;\n          display: block;\n          font-style: italic;\n          font-weight: 300; }\n      .vella-policy-home-protection-container .vella-policy-home-protection-sensors .vella-policy-home-protection-sensor .vella-policy-home-protection-type {\n        font-style: italic;\n        font-weight: 300;\n        text-align: right; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaHomeProtectionController', ['$scope', '$rootScope', function($scope, $rootScope) {\n    'use strict';\n    function generateRandom(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    $scope.animationDelay = {\n        online: generateRandom(0.25, 0.85),\n        offline: generateRandom(0.25, 0.85),\n        alert: generateRandom(0.25, 0.85)\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "{\"placeholders\":[{\"name\":\"DeviceName\",\"label\":\"\",\"$$hashKey\":\"object:2704\"},{\"name\":\"DeviceState\",\"label\":\"\",\"$$hashKey\":\"object:5066\"},{\"name\":\"DeviceMessage\",\"label\":\"\",\"$$hashKey\":\"object:1760\"}]}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-home-protection/1/Vlocity/1506560878693",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-home-protection-container\" ng-controller=\"vellaHomeProtectionController\">\n    <div class=\"vella-policy-home-protection-top\" ng-if=\"attrs.index === '0'\">\n        <h2 class=\"vella-policy-home-protection-name\">Home Protection</h2>\n        <p class=\"vella-policy-home-protection-description\">You save money by protecting your home and property with real-time monitoring sensors.</p>\n    </div>\n    <div class=\"vella-policy-home-protection-sensors\">\n        <div class=\"slds-grid vella-policy-home-protection-sensor\">\n            <div class=\"slds-size--1-of-8\">\n                <div class=\"vella-policy-home-protection-indicator vella-policy-home-protection-indicator-{{placeholder.DeviceState.value.toLowerCase()}}\" style=\"animation-delay: {{animationDelay[placeholder.DeviceState.value.toLowerCase()]}}s\"></div>\n            </div>\n            <div class=\"slds-size--5-of-8 vella-policy-home-protection-label\">\n                <span class=\"device-name\">{{placeholder.DeviceName.value}}</span>\n                <span class=\"device-message\">{{placeholder.DeviceMessage.value}}</span>\n            </div>\n            <div class=\"slds-size--2-of-8 vella-policy-home-protection-type\">{{placeholder.DeviceState.value}}</div>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-28T01:07:39.916Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-home-protection {\n    margin: 0 1rem;\n    border-bottom: 1px solid $vella-gray-border;\n}\n\n.vella-policy-home-protection-container {\n    padding: 0 0.5rem 0.5rem 0.5rem;\n    background-color: white;\n    color: $vella-dark-gray;\n\n    .vella-policy-home-protection-top {\n        margin-bottom: 1.5rem;\n        padding-top: 1.5rem;\n\n        .vella-policy-home-protection-name {\n            display: inline-block;\n            width: 100%;\n            text-align: center;\n            font-size: 0.8125rem;\n            line-height: 1.2;\n            color: $vella-dark-gray;\n            text-transform: uppercase;\n            margin-bottom: 0.75rem;\n        }\n\n        .vella-policy-home-protection-description {\n            text-align: center;\n            margin-bottom: 0.5rem;\n            font-weight: 300;\n            line-height: 1.4;\n            padding: 0 0.5rem;\n        }\n    }\n\n    .vella-policy-home-protection-sensors {\n        padding: 0 0.75rem;\n\n        .vella-policy-home-protection-sensor {\n            color: $vella-dark-gray;\n            font-size: 0.75rem;\n            line-height: 1.25rem;\n            margin-bottom: 1rem;\n\n            .vella-policy-home-protection-indicator {\n                width: 1.125rem;\n                height: 1.125rem;\n                border-radius: 50%;\n                box-shadow: 1px 1px 2px 0 #D0D0D0;\n                margin-right: 1.5rem;\n\n                &.vella-policy-home-protection-indicator-online {\n                    @include pulseIndicator($vella-green, pulse-online);\n                    @include keyframes(pulse-online, $vella-green);\n                }\n\n                &.vella-policy-home-protection-indicator-offline {\n                    @include pulseIndicator($vella-yellow, pulse-offline);\n                    @include keyframes(pulse-offline, $vella-yellow);\n                }\n\n                &.vella-policy-home-protection-indicator-alert {\n                    @include pulseIndicator($vella-red, pulse-alert);\n                    @include keyframes(pulse-alert, $vella-red);\n                }\n            }\n\n            .vella-policy-home-protection-label {\n                text-transform: uppercase;\n\n                .device-message {\n                    text-transform: none;\n                    display: block;\n                    font-style: italic;\n                    font-weight: 300;\n                }\n            }\n\n            .vella-policy-home-protection-type {\n                font-style: italic;\n                font-weight: 300;\n                text-align: right;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-home-protection",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-home-protection/%vlocity_namespace%__VlocityUITemplate__c/vella-home-protection"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-home-protection",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-home-protection",
            "VlocityDataPackName": "vella-home-protection",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": "",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-mixins-variables/1/Vlocity/1504027389065",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Sass__c": "// COLORS\n// Non-Text Colors:\n$vella-royal: #0080F9;\n$vella-sky: #00CEFF;\n$vella-orange: #FF6D00;\n$vella-red: #FD5365;\n$vella-yellow: #FACB15;\n$vella-green: #02E889;\n$vella-extra-light-gray: #F9F9F9;\n$vella-sky-border: #37BDE3;\n$vella-gray-border: #EDEDED;\n$vella-light-gray-bg: #F5FBFF;\n$vella-insured-item-bg: #F3FBFF;\n$vella-insurable-item-bg: #FBFBFB;\n\n// Text Colors:\n$vella-dark-gray: #4C4C4C;\n$vella-light-gray: #C1C1C1;\n$vella-sky-text: #0090B9;\n\n// Mixins:\n// Reset UI to 100% height (only used once at the top of vella-home-container.scss)\n@mixin configureUI {\n    html {\n        font-size: 16px;\n        height: 100%;\n    }\n    body.via-slds {\n        height: 100%;\n\n        >span {\n            height: 100%;\n            display: block;\n        }\n\n        &.via-slds {\n            height: 100%;\n            font-family: \"Brown\", \"Salesforce Sans\", Arial, sans-serif;\n\n            h1,\n            h2,\n            h3,\n            h4,\n            h5,\n            h6,\n            th,\n            td {\n                font-family: \"Brown\", \"Salesforce Sans\", Arial, sans-serif;\n            }\n\n            vloc-mobile {\n                height: 100%;\n                display: block;\n\n                div[layout-name] {\n                    height: 100%;\n\n                    ng-include[src] {\n                        height: 100%;\n                        display: block;\n                    }\n                }\n            }\n\n            div[layout-id] {\n                height: 100%;\n\n                ng-include[src=\"'vella-home-container'\"] {\n                    height: 100%;\n                    display: block;\n                }\n            }\n        }\n    }\n    @media screen and (min-width: 410px) {\n        html {\n            font-size: 18px;\n        }\n    }\n}\n\n@mixin policyCircle($margin, $bgColor, $imgSelector) {\n    position: relative;\n    width: 5.5rem;\n    height: 5.5rem;\n    margin: $margin;\n    background-color: $bgColor;\n    border-radius: 50%;\n    transform: translate3d(0, 0, 0);\n\n    #{$imgSelector} {\n        display: block;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: 55px;\n    }\n}\n\n// Sets visibility with a fade in/out transition (used for spinner and notification mainly)\n@mixin transitionVisibility($prefix, $opacity: 1, $absolute: false, $height: false) {\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0ms linear 150ms,\n                position 0ms linear 150ms,\n                opacity 150ms ease-in;\n    @if $height {\n        height: calc(100vh - 44px);\n    }\n    @if $absolute {\n        position: absolute;\n    }\n\n    &.#{$prefix}-active {\n        opacity: $opacity;\n        visibility: visible;\n        transition: visibility 0ms linear 0ms,\n                    position 0ms linear 0ms,\n                    opacity 150ms ease-in;\n        @if $height {\n            height: calc(100vh + 44px);\n        }\n        @if $absolute {\n            position: relative;\n        }\n    }\n}\n\n@mixin pulseIndicator($color, $animationName) {\n    background-color: $color;\n    animation: #{$animationName} 1.5s infinite;\n    animation-direction: alternate;\n    animation-timing-function: ease-in;\n    animation-delay: 0.5s;\n}\n\n@mixin keyframes($name, $color) {\n    @keyframes #{$name} {\n        0% {\n            background-color: $color;\n        }\n\n        100% {\n            background-color: darken($color, 18%);\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "mixin",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-mixins-variables",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-mixins-variables/%vlocity_namespace%__VlocityUITemplate__c/vella-mixins-variables"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-mixins-variables",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-mixins-variables",
            "VlocityDataPackName": "vella-mixins-variables",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-more-detail-coverage {\n  background-color: #F5FBFF;\n  padding: 0.5rem 1rem;\n  margin-bottom: 0.5rem; }\n  .vella-more-detail-coverage .vella-more-detail-coverage-name {\n    text-transform: uppercase;\n    font-size: 0.8125rem;\n    color: #4C4C4C;\n    line-height: 1.25rem; }\n  .vella-more-detail-coverage .vella-more-detail-coverage-description {\n    font-weight: 300;\n    line-height: 1.4;\n    padding: 0;\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 250ms ease, padding 250ms ease; }\n    .vella-more-detail-coverage .vella-more-detail-coverage-description.in {\n      max-height: 10rem;\n      padding: 0.25rem 0; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaMoreDetailsController', ['$scope', '$rootScope', 'IonicService', function($scope, $rootScope, IonicService) {\n    'use strict';\n    $scope.getDetails = function(obj) {\n        $scope.details = obj;\n        console.log('$scope.details', $scope.details);\n        $rootScope.isLoaded = true;\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-more-detail/1/Vlocity/1504896239347",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-more-detail-coverage\" ng-controller=\"vellaMoreDetailsController\" ng-init=\"getDetails(obj)\">\n    <h4 class=\"vella-more-detail-coverage-name\" bs-collapse-toggle>{{details.Name}}</h4>\n    <div class=\"vella-more-detail-coverage-description\" bs-collapse-target>{{details[$root.nsPrefix + 'Description__c']}}</div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-08T18:44:00.991Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-more-detail-coverage {\n    background-color: $vella-light-gray-bg;\n    padding: 0.5rem 1rem;\n    margin-bottom: 0.5rem;\n\n    .vella-more-detail-coverage-name {\n        text-transform: uppercase;\n        font-size: 0.8125rem;\n        color: $vella-dark-gray;\n        line-height: 1.25rem;\n    }\n\n    .vella-more-detail-coverage-description {\n        font-weight: 300;\n        line-height: 1.4;\n        padding: 0;\n        max-height: 0;\n        overflow: hidden;\n        transition: max-height 250ms ease,\n                    padding 250ms ease;\n\n        &.in {\n            max-height: 10rem;\n            padding: 0.25rem 0;\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-more-detail",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-more-detail/%vlocity_namespace%__VlocityUITemplate__c/vella-more-detail"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-more-detail",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-more-detail",
            "VlocityDataPackName": "vella-more-detail",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-auto-safety-container {\n  padding: 1.5rem 0 0.5rem 0;\n  background-color: white;\n  color: #4C4C4C; }\n  .vella-policy-auto-safety-container .vella-policy-auto-safety-top {\n    padding: 0 1.5rem 1.5rem; }\n    .vella-policy-auto-safety-container .vella-policy-auto-safety-top .vella-policy-auto-safety-name {\n      display: inline-block;\n      width: 100%;\n      text-align: center;\n      font-size: 0.8125rem;\n      line-height: 1.2;\n      color: #4C4C4C;\n      text-transform: uppercase;\n      margin-bottom: 0.75rem; }\n    .vella-policy-auto-safety-container .vella-policy-auto-safety-top .vella-policy-auto-safety-description {\n      text-align: center;\n      margin-bottom: 0.5rem;\n      font-weight: 300;\n      line-height: 1.4;\n      padding: 0 2.5rem; }\n  .vella-policy-auto-safety-container .vella-policy-auto-safety-chart {\n    height: 6.25rem;\n    padding: 0 2rem;\n    margin-bottom: 2.5rem;\n    width: 100%;\n    position: relative; }\n    .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-upper-limit {\n      display: block;\n      position: absolute;\n      top: -0.55rem;\n      right: 1rem;\n      font-size: 0.625rem;\n      color: rgba(0, 0, 0, 0.48);\n      font-weight: 300;\n      background-color: white;\n      z-index: 2;\n      padding: 0 0.25rem; }\n    .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars {\n      height: 100%;\n      transform: rotate(180deg);\n      flex-direction: row-reverse;\n      position: relative; }\n      .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars:before, .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars:after {\n        content: \"\";\n        display: block;\n        height: 1px;\n        width: 100%;\n        border-top: 1px dashed #C1C1C1;\n        opacity: 0.3;\n        position: absolute;\n        bottom: -0.1875rem; }\n      .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars:after {\n        border-top: 1px solid #C1C1C1;\n        top: 0.25rem; }\n      .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars .vella-policy-auto-safety-chart-bar {\n        background-color: #00CEFF;\n        height: 1rem;\n        margin: 0 0.4rem;\n        border-radius: 0.5rem;\n        transition: height 750ms cubic-bezier(0, 1.5, 0.5, 2) 100ms;\n        position: relative; }\n        .vella-policy-auto-safety-container .vella-policy-auto-safety-chart .vella-policy-auto-safety-chart-bars .vella-policy-auto-safety-chart-bar .vella-policy-auto-safety-chart-bar-label {\n          display: block;\n          transform: rotate(180deg);\n          position: absolute;\n          top: -1.5rem;\n          text-align: center;\n          width: 100%;\n          margin-left: 1px;\n          font-size: 0.625rem;\n          color: #4C4C4C; }\n  .vella-policy-auto-safety-container .vella-policy-auto-safety-data {\n    padding: 0 2rem;\n    margin-bottom: 1.5rem; }\n    .vella-policy-auto-safety-container .vella-policy-auto-safety-data .vella-policy-auto-safety-data-item {\n      text-align: center; }\n      .vella-policy-auto-safety-container .vella-policy-auto-safety-data .vella-policy-auto-safety-data-item .value {\n        display: block;\n        font-size: 1.5rem;\n        color: #00CEFF; }\n        .vella-policy-auto-safety-container .vella-policy-auto-safety-data .vella-policy-auto-safety-data-item .value .slds-icon {\n          fill: #02E889;\n          width: 1.25rem;\n          height: 1.25rem; }\n      .vella-policy-auto-safety-container .vella-policy-auto-safety-data .vella-policy-auto-safety-data-item .label {\n        display: block;\n        text-transform: uppercase;\n        font-size: 0.625rem;\n        color: #4C4C4C; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaPolicyAutoSafetyController', ['$scope', '$rootScope', '$timeout', 'vellaPolicyAutoSafetyService', function($scope, $rootScope, $timeout, vellaPolicyAutoSafetyService) {\n    'use strict';\n    $scope.init = function(obj) {\n        var transactionDate, transactionMonth, tempObj;\n        var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        var today = new Date();\n        var currentMonthIndex = today.getMonth();\n        $scope.chartData = {\n            values: [],\n            highMonthValue: 0,\n            mostRecentIndex: 0\n        };\n        console.log('vellaPolicyAutoSafetyController obj:', obj);\n        angular.forEach(obj.policyTransactions, function(transaction, i) {\n            if (transaction.Score && transaction.Rate && transaction.Amount && transaction.TransactionDate) {\n                transactionDate = new Date(transaction.TransactionDate);\n                transactionMonth = monthNames[transactionDate.getUTCMonth()];\n                tempObj = {};\n                tempObj.transactionDate = transaction.TransactionDate;\n                tempObj.timestamp = Math.round((new Date(tempObj.transactionDate)).getTime() / 1000);\n                tempObj.year = transactionDate.getUTCFullYear();\n                tempObj.monthIdx = transactionDate.getUTCMonth();\n                tempObj.monthStr = transactionMonth;\n                tempObj.label = transactionMonth.charAt(0);\n                tempObj.value = transaction.Amount;\n                tempObj.rate = transaction.Rate;\n                tempObj.score = transaction.Score;\n                $scope.chartData.highMonthValue = (transaction.Amount > $scope.chartData.highMonthValue) ? transaction.Amount : $scope.chartData.highMonthValue;\n                // Index sets the sort so that last month is the last data point shown:\n                tempObj.ageIndex = (((transactionDate.getUTCMonth() + 1) - (currentMonthIndex + 1)) + 12) % 12;\n                tempObj.height = {\n                    'height': '10%'\n                };\n                $scope.chartData.values.push(tempObj);\n            }\n        });\n        angular.forEach($scope.chartData.values, function(value, i) {\n            if (value.timestamp > $scope.chartData.values[$scope.chartData.mostRecentIndex].timestamp) {\n                $scope.chartData.mostRecentIndex = i;\n            }\n        });\n        console.log('$scope.chartData', $scope.chartData);\n    };\n\n    $scope.ceil = function(value) {\n        return Math.ceil(value);\n    };\n\n    // Calculate height percentages after the page is loaded so that the user sees the bars animate:\n    $timeout(function() {\n        angular.forEach($scope.chartData.values, function(value, i) {\n            value.height = {\n                'height': ((value.value / $scope.chartData.highMonthValue) * 100) + '%'\n            };\n        });\n    }, 250);\n}]);\nvlocity.cardframework.registerModule.factory('vellaPolicyAutoSafetyService', ['$rootScope', '$q', 'dataSourceService', function($rootScope, $q, dataSourceService) {\n    'use strict';\n    return {\n        \n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-policy-auto-safety/1/Vlocity/1506453362791",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-auto-safety-container\" ng-controller=\"vellaPolicyAutoSafetyController\" ng-init=\"init(obj)\" ng-show=\"chartData.values.length\">\n    <div class=\"vella-policy-auto-safety-top\">\n        <h2 class=\"vella-policy-auto-safety-name\">Safety & Use</h2>\n        <p class=\"vella-policy-auto-safety-description\">Your costs are based on the amount and how safe you drive.</p>\n    </div>\n    <div class=\"vella-policy-auto-safety-chart\">\n        <span class=\"vella-policy-auto-safety-chart-upper-limit\">{{ceil(chartData.highMonthValue)}}</span>\n        <div class=\"slds-grid vella-policy-auto-safety-chart-bars\">\n            <div class=\"slds-size--1-of-12\" ng-repeat=\"value in chartData.values track by $index\">\n                <div class=\"vella-policy-auto-safety-chart-bar\" ng-style=\"value.height\">\n                    <span class=\"vella-policy-auto-safety-chart-bar-label\">{{value.label}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"slds-grid vella-policy-auto-safety-data\">\n        <div class=\"slds-size--1-of-3 vella-policy-auto-safety-data-item vella-policy-auto-safety-data-item-safety-rating\">\n            <span class=\"value\">\n                {{chartData.values[chartData.mostRecentIndex].score}}\n                <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'trending'\"></slds-svg-icon>\n            </span>\n            <span class=\"label\">Safety Rating</span>\n        </div>\n        <div class=\"slds-size--1-of-3 vella-policy-auto-safety-data-item vella-policy-auto-safety-data-item-mi-last-month\">\n            <span class=\"value\">{{chartData.values[chartData.mostRecentIndex].value}}</span>\n            <span class=\"label\">MI Last Month</span>\n        </div>\n        <div class=\"slds-size--1-of-3 vella-policy-auto-safety-data-item vella-policy-auto-safety-data-item-per-mile\">\n            <span class=\"value\">{{chartData.values[chartData.mostRecentIndex].rate * 100}}&cent;</span>\n            <span class=\"label\">Per Mile</span>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-26T19:16:04.724Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-auto-safety-container {\n    padding: 1.5rem 0 0.5rem 0;\n    background-color: white;\n    color: $vella-dark-gray;\n\n    .vella-policy-auto-safety-top {\n        padding: 0 1.5rem 1.5rem;\n\n        .vella-policy-auto-safety-name {\n            display: inline-block;\n            width: 100%;\n            text-align: center;\n            font-size: 0.8125rem;\n            line-height: 1.2;\n            color: $vella-dark-gray;\n            text-transform: uppercase;\n            margin-bottom: 0.75rem;\n        }\n\n        .vella-policy-auto-safety-description {\n            text-align: center;\n            margin-bottom: 0.5rem;\n            font-weight: 300;\n            line-height: 1.4;\n            padding: 0 2.5rem;\n        }\n    }\n\n    .vella-policy-auto-safety-chart {\n        height: 6.25rem;\n        padding: 0 2rem;\n        margin-bottom: 2.5rem;\n        width: 100%;\n        position: relative;\n\n        .vella-policy-auto-safety-chart-upper-limit {\n            display: block;\n            position: absolute;\n            top: -0.55rem;\n            right: 1rem;\n            font-size: 0.625rem;\n            color: rgba(0,0,0,.48);\n            font-weight: 300;\n            background-color: white;\n            z-index: 2;\n            padding: 0 0.25rem;\n        }\n\n        .vella-policy-auto-safety-chart-bars {\n            height: 100%;\n            transform: rotate(180deg);\n            flex-direction: row-reverse;\n            position: relative;\n\n            &:before, &:after {\n                content: \"\";\n                display: block;\n                height: 1px;\n                width: 100%;\n                border-top: 1px dashed $vella-light-gray;\n                opacity: 0.3;\n                position: absolute;\n                bottom: -0.1875rem; // because we rotated 180\n            }\n\n            &:after {\n                border-top: 1px solid $vella-light-gray;\n                top: 0.25rem; // because we rotated 180\n            }\n\n            .vella-policy-auto-safety-chart-bar {\n                background-color: $vella-sky;\n                height: 1rem;\n                margin: 0 0.4rem;\n                border-radius: 0.5rem;\n                transition: height 750ms cubic-bezier(0, 1.5, 0.5, 2) 100ms;\n                position: relative;\n\n                .vella-policy-auto-safety-chart-bar-label {\n                    display: block;\n                    transform: rotate(180deg); // rotate back around\n                    position: absolute;\n                    top: -1.5rem;\n                    text-align: center;\n                    width: 100%;\n                    margin-left: 1px;\n                    font-size: 0.625rem;\n                    color: $vella-dark-gray;\n                }\n            }\n        }\n    }\n\n    .vella-policy-auto-safety-data {\n        padding: 0 2rem;\n        margin-bottom: 1.5rem;\n\n        .vella-policy-auto-safety-data-item {\n            text-align: center;\n\n            .value {\n                display: block;\n                font-size: 1.5rem;\n                color: $vella-sky;\n\n                .slds-icon {\n                    fill: $vella-green;\n                    width: 1.25rem;\n                    height: 1.25rem;\n                }\n            }\n\n            .label {\n                display: block;\n                text-transform: uppercase;\n                font-size: 0.625rem;\n                color: $vella-dark-gray;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy-auto-safety",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-policy-auto-safety/%vlocity_namespace%__VlocityUITemplate__c/vella-policy-auto-safety"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-policy-auto-safety",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-policy-auto-safety",
            "VlocityDataPackName": "vella-policy-auto-safety",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-page-wrapper {\n  background-color: #F9F9F9;\n  padding: 0.75rem;\n  min-height: 25rem; }\n  .vella-policy-page-wrapper.vella-spinner-active {\n    overflow: hidden;\n    height: calc(100vh - 44px); }\n  .vella-policy-page-wrapper .vella-policy-notification {\n    width: 100%;\n    min-height: 3rem;\n    padding: 1rem 2.5rem 1rem 3.75rem;\n    margin-bottom: 0.75rem;\n    background-color: white;\n    border: 1px solid #EDEDED;\n    position: relative;\n    color: #4C4C4C;\n    font-weight: 300;\n    visibility: hidden;\n    opacity: 0;\n    transition: visibility 0ms linear 150ms, position 0ms linear 150ms, opacity 150ms ease-in;\n    position: absolute; }\n    .vella-policy-page-wrapper .vella-policy-notification.vella-policy-notification-active {\n      opacity: 1;\n      visibility: visible;\n      transition: visibility 0ms linear 0ms, position 0ms linear 0ms, opacity 150ms ease-in;\n      position: relative; }\n    .vella-policy-page-wrapper .vella-policy-notification .slds-icon_container--circle {\n      position: absolute;\n      left: 0.5rem;\n      top: 50%;\n      transform: translateY(-50%); }\n      .vella-policy-page-wrapper .vella-policy-notification .slds-icon_container--circle.slds-icon-action-announcement {\n        background-color: #FF6D00; }\n      .vella-policy-page-wrapper .vella-policy-notification .slds-icon_container--circle .slds-icon {\n        width: 1.25rem;\n        height: 1.25rem; }\n    .vella-policy-page-wrapper .vella-policy-notification .slds-button {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-57%);\n      right: 1rem;\n      display: none; }\n      .vella-policy-page-wrapper .vella-policy-notification .slds-button .slds-button--icon {\n        fill: #4C4C4C; }\n    .vella-policy-page-wrapper .vella-policy-notification.vella-policy-notification-active .slds-button {\n      display: block; }\n  .vella-policy-page-wrapper .vella-policy-page-inner-wrapper {\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n    margin-bottom: 0.75rem;\n    background-color: white; }\n    .vella-policy-page-wrapper .vella-policy-page-inner-wrapper .vella-policy-insured-insurable-items-wrapper .vella-insured-items-title {\n      width: 92%;\n      margin: 0 auto 1rem auto;\n      padding: 1.25rem 0 0;\n      display: block;\n      text-align: center;\n      font-size: 0.8125rem;\n      line-height: 1.2;\n      color: #4C4C4C;\n      text-transform: uppercase; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaPolicyContainerController', ['$scope', '$rootScope', function($scope, $rootScope, $state, vellaHomeCircleService) {\n    'use strict';\n    $scope.closeNotification = function(type) {\n        if (type === 'Renters' || type === 'Property' || type === 'Homeowners') {\n            $rootScope.vlocityMobileNotificationSensor.active = false;\n            if (localStorage.vlocityMobileNotificationSensor) {\n                localStorage.removeItem('vlocityMobileNotificationSensor');\n            }\n        }\n        if (type === 'Auto') {\n            $rootScope.vlocityMobileNotification = false;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "{\"zones\":[{\"name\":\"policyDetail\",\"label\":\"Policy Detail\",\"$$hashKey\":\"object:1725\"},{\"name\":\"policyInsured\",\"label\":\"Policy Insured Items\",\"$$hashKey\":\"object:1739\"},{\"name\":\"policyUnbound\",\"label\":\"Policy Unbound Insurable Items\",\"$$hashKey\":\"object:2672\"},{\"name\":\"policyAutoSafety\",\"label\":\"Policy Auto Safety\",\"$$hashKey\":\"object:3606\"},{\"name\":\"policyHomeProtection\",\"label\":\"Policy Home Protection\",\"$$hashKey\":\"object:2690\"},{\"name\":\"policyCoverages\",\"label\":\"Policy Coverages\",\"$$hashKey\":\"object:1764\"}]}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-policy-container/1/Vlocity/1504127260555",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-page-wrapper vella-page-wrapper\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\" ng-controller=\"vellaPolicyContainerController\">\n    <div class=\"slds-spinner_container vella-spinner\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\">\n        <div role=\"status\" class=\"slds-spinner slds-spinner--medium slds-spinner--inverse\">\n            <span class=\"slds-assistive-text\">Loading</span>\n            <div class=\"slds-spinner__dot-a\"></div>\n            <div class=\"slds-spinner__dot-b\"></div>\n        </div>\n    </div>\n    <div class=\"vella-policy-notification\" ng-class=\"{'vella-policy-notification-active': ($root.vlocityMobileNotification && $root.cardData.Type === 'Auto') || ($root.vlocityMobileNotificationSensor.active && ($root.cardData.Type === 'Renters' || $root.cardData.Type === 'Homeowners' || $root.cardData.Type === 'Property'))}\">\n        <span class=\"slds-icon_container slds-icon_container--circle slds-icon-action-announcement\" title=\"Sensor Notification\">\n            <slds-svg-icon sprite=\"'action'\" icon=\"'announcement'\" size=\"'small'\"></slds-svg-icon>\n            <span class=\"slds-assistive-text\">Sensor Notification</span>\n        </span>\n        <span ng-if=\"$root.cardData.Type === 'Auto'\">You saved $40.75 on your bill last month by driving safely.</span>\n        <span ng-if=\"$root.cardData.Type === 'Renters' || $root.cardData.Type === 'Homeowners' || $root.cardData.Type === 'Property'\">{{$root.vlocityMobileNotificationSensor.message}}</span>\n        <button class=\"slds-button slds-button--icon\" title=\"close\" ng-click=\"closeNotification($root.cardData.Type)\">\n            <slds-button-svg-icon sprite=\"'utility'\" icon=\"'close'\" size=\"'medium'\"></slds-button-svg-icon>\n        </button>\n    </div>\n    <div class=\"vella-policy-page-inner-wrapper\">\n        <vloc-card ng-repeat=\"card in data.zones.policyDetail.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-detail-card\" ng-if=\"$index === 0\"></vloc-card>\n        <div class=\"vella-policy-insured-insurable-items-wrapper\" ng-if=\"$root.cardData.showSwipe\">\n            <h3 class=\"vella-insured-items-title\">{{$root.cardData.showSwipe}}s Covered ({{$root.cardData.insuredItemCount || 0}})</h3>\n            <vloc-card ng-repeat=\"card in data.zones.policyInsured.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-middle-card\"></vloc-card>\n            <vloc-card ng-repeat=\"card in data.zones.policyUnbound.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-middle-card\"></vloc-card>\n        </div>\n        <div class=\"vella-policy-auto-usage-data\" ng-if=\"$root.cardData.Type === 'Auto'\">\n            <vloc-card ng-repeat=\"card in data.zones.policyAutoSafety.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-auto-usage-card\" ng-if=\"$index === 0\"></vloc-card>\n        </div>\n        <div class=\"vella-policy-home-protection\" ng-if=\"$root.cardData.Type === 'Homeowners' || $root.cardData.Type === 'Property' || $root.cardData.Type === 'Renters' || $root.cardData.Type === 'Business Owners'\">\n            <vloc-card ng-repeat=\"card in data.zones.policyHomeProtection.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-home-protection-card\" ng-if=\"card.obj.status !== 400\"></vloc-card>\n        </div>\n        <vloc-card ng-repeat=\"card in data.zones.policyCoverages.cards\" ng-model=\"card\" data=\"card\" records=\"records\" index=\"{{$index}}\" session-id=\"{{sessionId}}\" class=\"vella-policy-coverages-card\"></vloc-card>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-page-wrapper {\n    background-color: $vella-extra-light-gray;\n    padding: 0.75rem;\n    min-height: 25rem;\n\n    &.vella-spinner-active {\n        overflow: hidden;\n        height: calc(100vh - 44px);\n    }\n\n    .vella-policy-notification {\n        width: 100%;\n        min-height: 3rem;\n        padding: 1rem 2.5rem 1rem 3.75rem;\n        margin-bottom: 0.75rem;\n        background-color: white;\n        border: 1px solid $vella-gray-border;\n        position: relative;\n        color: $vella-dark-gray;\n        font-weight: 300;\n        @include transitionVisibility('vella-policy-notification', 1, true);\n\n        .slds-icon_container--circle {\n            position: absolute;\n            left: 0.5rem;\n            top: 50%;\n            transform: translateY(-50%);\n\n            &.slds-icon-action-announcement {\n                background-color: $vella-orange;\n            }\n\n            .slds-icon {\n                width: 1.25rem;\n                height: 1.25rem;\n            }\n        }\n\n        .slds-button {\n            position: absolute;\n            top: 50%;\n            transform: translateY(-57%);\n            right: 1rem;\n            display: none;\n\n            .slds-button--icon {\n                fill: $vella-dark-gray;\n            }\n        }\n\n        &.vella-policy-notification-active {\n            .slds-button {\n                display: block;\n            }\n        }\n    }\n\n    .vella-policy-page-inner-wrapper {\n        box-shadow: 0 1px 4px rgba(0,0,0,0.1);\n        margin-bottom: 0.75rem;\n        background-color: white;\n\n        .vella-policy-insured-insurable-items-wrapper {\n            .vella-insured-items-title {\n                width: 92%;\n                margin: 0 auto 1rem auto;\n                padding: 1.25rem 0 0;\n                display: block;\n                text-align: center;\n                font-size: 0.8125rem;\n                line-height: 1.2;\n                color: $vella-dark-gray;\n                text-transform: uppercase;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "containers",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy-container",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-policy-container/%vlocity_namespace%__VlocityUITemplate__c/vella-policy-container"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-policy-container",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-policy-container",
            "VlocityDataPackName": "vella-policy-container",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-coverages-card {\n  background-color: white;\n  padding: 0.5rem 0; }\n  .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper {\n    padding: 0 1rem; }\n    .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container {\n      padding: 1rem 0.25rem 0.5rem 0.25rem;\n      margin: 0 0 0.5rem;\n      border-bottom: 1px solid #EDEDED; }\n      .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container:last-child {\n        border-bottom: none;\n        margin: 0;\n        padding-bottom: 1.5rem; }\n      .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container h3 {\n        text-transform: uppercase;\n        text-align: center;\n        font-size: 0.8125rem;\n        line-height: 1.2;\n        color: #4C4C4C;\n        margin-bottom: 1.25rem; }\n      .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container .vella-policy-coverages-inner-container .vella-policy-coverages-item {\n        margin-bottom: 1.25rem;\n        min-height: 4.75rem; }\n        .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container .vella-policy-coverages-inner-container .vella-policy-coverages-item .vella-policy-coverages-item-circle {\n          position: relative;\n          margin: 0 auto 0.5rem auto;\n          width: 2.875rem;\n          height: 2.875rem;\n          border-radius: 50%;\n          background-color: #F5FBFF; }\n          .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container .vella-policy-coverages-inner-container .vella-policy-coverages-item .vella-policy-coverages-item-circle .vella-policy-coverages-item-img {\n            height: 1.875rem;\n            display: block;\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translateX(-50%) translateY(-50%);\n            line-height: 1;\n            font-size: 0.625rem;\n            color: white; }\n        .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container .vella-policy-coverages-inner-container .vella-policy-coverages-item .vella-policy-coverages-item-name {\n          text-align: center;\n          display: block;\n          line-height: 1.1;\n          color: #4C4C4C;\n          font-size: 0.625rem;\n          text-transform: uppercase; }\n      .vella-policy-coverages-card .vella-policy-coverages-inner-wrapper .vella-policy-coverages-container .vella-policy-coverages-coverage-amounts-inner-container {\n        color: #4C4C4C;\n        font-weight: 300;\n        margin-bottom: 0.1875rem; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaPolicyCoveragesController', ['$scope', '$rootScope', 'vellaPolicyCoveragesService', function($scope, $rootScope, vellaPolicyCoveragesService) {\n    'use strict';\n    $scope.getCoveragesDetails = function(obj) {\n        if (!$rootScope.vellaPolicyCoveragesDefaultImg) {\n            vellaPolicyCoveragesService.getDefaultCoverageImg($scope).then(function(result) {\n                $rootScope.vellaPolicyCoveragesDefaultImg = result[0].Id;\n                $rootScope.coverages = vellaPolicyCoveragesService.formatCoverageData(obj);\n                console.log('$rootScope.coverages', $rootScope.coverages, 'default img Id', $rootScope.vellaPolicyCoveragesDefaultImg);\n            }, function(error) {\n                console.log('error retrieving default coverage image', error);\n            });\n        } else {\n            $rootScope.coverages = vellaPolicyCoveragesService.formatCoverageData(obj);\n            console.log('$rootScope.coverages', $rootScope.coverages);\n        }\n        if (!$rootScope.cardData.showSwipe) {\n            $rootScope.isLoaded = true;\n        }\n    };\n}]);\nvlocity.cardframework.registerModule.factory('vellaPolicyCoveragesService', ['$rootScope', '$q', 'dataSourceService', function($rootScope, $q, dataSourceService) {\n    'use strict';\n    function createCoverageMap(coverage) {\n        var coveragesMap = {};\n        coveragesMap.name = coverage.Name;\n        if (coverage.ImageId) {\n            coveragesMap.image = $rootScope.instanceUrl + coverage.ImageId;\n        } else {\n            coveragesMap.image = $rootScope.instanceUrl + '/servlet/servlet.FileDownload?file=' + $rootScope.vellaPolicyCoveragesDefaultImg;\n        }\n        return coveragesMap;\n    }\n    function getUserValuesLabel(values, userValues) {\n        var i, label;\n        for (i = 0; i < values.length; i++) {\n            if (values[i].value && values[i].value === userValues) {\n                label = values[i].label;\n            } else {\n                label = userValues;\n            }\n        }\n        return label;\n    }\n    return {\n        getDefaultCoverageImg: function(scope) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'Query';\n            datasource.value = {\n                query: 'SELECT Id FROM Document where developerName=\\'prodImage_vella_default_png\\'',\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: '',\n                remoteMethod: '',\n                inputMap: {}\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        },\n        formatCoverageData: function(coverages) {\n            var formattedCoverages = {\n                coveragesMap: [],\n                optionalCoveragesMap: [],\n                coverageAmounts: []\n            };\n            var i, j, k, attrCats, prodAttrs, tempCoverageAmounts;\n            if (coverages && coverages.records) {\n                for (i = 0; i < coverages.records.length; i++) {\n                    if (!coverages.records[i].isOptional) {\n                        formattedCoverages.coveragesMap = formattedCoverages.coveragesMap.concat(createCoverageMap(coverages.records[i]));\n                    } else {\n                        formattedCoverages.optionalCoveragesMap = formattedCoverages.optionalCoveragesMap.concat(createCoverageMap(coverages.records[i]));\n                    }\n                    tempCoverageAmounts = {};\n                    if (coverages.records[i].attributeCategories && coverages.records[i].attributeCategories.records) {\n                        attrCats = coverages.records[i].attributeCategories.records;\n                        for (j = 0; j < attrCats.length; j++) {\n                            prodAttrs = attrCats[j].productAttributes.records;\n                            if (prodAttrs) {\n                                tempCoverageAmounts.name = coverages.records[i].Name;\n                                tempCoverageAmounts.value = {};\n                                for (k = 0; k < prodAttrs.length; k++) {\n                                    if (prodAttrs[k].code.toLowerCase().indexOf('limit') > -1) {\n                                        tempCoverageAmounts.value.limit = getUserValuesLabel(prodAttrs[k].values, prodAttrs[k].userValues);\n                                    }\n                                    if (prodAttrs[k].code.toLowerCase().indexOf('coverage') > -1) {\n                                        tempCoverageAmounts.value.coverage = getUserValuesLabel(prodAttrs[k].values, prodAttrs[k].userValues);\n                                    }\n                                }\n                                formattedCoverages.coverageAmounts = formattedCoverages.coverageAmounts.concat(tempCoverageAmounts);\n                            }\n                        }\n                    }\n                }\n            }\n            return formattedCoverages;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-policy-coverages/1/Vlocity/1504304117650",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-coverages-inner-wrapper\" ng-controller=\"vellaPolicyCoveragesController\" ng-init=\"getCoveragesDetails(obj)\">\n    <div class=\"vella-policy-coverages-container vella-policy-coverages-whats-covered-container\" ng-if=\"$root.coverages.coveragesMap && $root.coverages.coveragesMap.length\">\n        <h3>What's Covered</h3>\n        <div class=\"slds-clearfix vella-policy-coverages-inner-container vella-policy-coverages-whats-covered-inner-container\">\n            <div class=\"slds-size--1-of-3 slds-float--left vella-policy-coverages-item vella-policy-coverages-whats-covered-item\" ng-repeat=\"coverage in $root.coverages.coveragesMap\">\n                <div class=\"vella-policy-coverages-item-circle vella-policy-coverages-whats-covered-item-circle\">\n                    <img class=\"vella-policy-coverages-item-img vella-policy-coverages-whats-covered-item-img\" ng-src=\"{{coverage.image}}\" alt=\"{{coverage.name.fieldValue}}\"/>\n                </div>\n                <span class=\"vella-policy-coverages-item-name vella-policy-coverages-whats-covered-item-name\">{{coverage.name.fieldValue}}</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"vella-policy-coverages-container vella-policy-coverages-whats-not-covered-container\" ng-if=\"$root.coverages.optionalCoveragesMap && $root.coverages.optionalCoveragesMap.length\">\n        <h3>What's Not Covered</h3>\n        <div class=\"slds-clearfix vella-policy-coverages-inner-container vella-policy-coverages-whats-not-covered-inner-container\">\n            <div class=\"slds-size--1-of-3 slds-float--left vella-policy-coverages-item vella-policy-coverages-whats-not-covered-item\" ng-repeat=\"coverage in $root.coverages.optionalCoveragesMap\">\n                <div class=\"vella-policy-coverages-item-circle vella-policy-coverages-whats-not-covered-item-circle\">\n                    <img class=\"vella-policy-coverages-item-img vella-policy-coverages-whats-not-covered-item-img\" ng-src=\"{{coverage.image}}\" alt=\"{{coverage.name.fieldValue}}\"/>\n                </div>\n                <span class=\"vella-policy-coverages-item-name vella-policy-coverages-whats-not-covered-item-name\">{{coverage.name.fieldValue}}</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"vella-policy-coverages-container vella-policy-coverages-coverage-amounts-container\" ng-if=\"$root.coverages.coverageAmounts && $root.coverages.coverageAmounts.length\">\n        <h3>Coverage Amounts</h3>\n        <div class=\"slds-grid vella-policy-coverages-coverage-amounts-inner-container\" ng-repeat=\"coverage in $root.coverages.coverageAmounts\">\n            <div class=\"slds-size--1-of-2 slds-text-align--left\">{{coverage.name.fieldValue}}</div>\n            <div class=\"slds-size--1-of-2 slds-text-align--right\">{{coverage.value.limit}} <span ng-if=\"coverage.value.coverage\">/ {{coverage.value.coverage}}</span></div>\n        </div>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-01T22:15:18.586Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-coverages-card {\n    background-color: white;\n    padding: 0.5rem 0;\n\n    .vella-policy-coverages-inner-wrapper {\n        padding: 0 1rem;\n\n        .vella-policy-coverages-container {\n            padding: 1rem 0.25rem 0.5rem 0.25rem;\n            margin: 0 0 0.5rem;\n            border-bottom: 1px solid $vella-gray-border;\n\n            &:last-child {\n                border-bottom: none;\n                margin: 0;\n                padding-bottom: 1.5rem;\n            }\n\n            h3 {\n                text-transform: uppercase;\n                text-align: center;\n                font-size: 0.8125rem;\n                line-height: 1.2;\n                color: $vella-dark-gray;\n                margin-bottom: 1.25rem;\n            }\n\n            .vella-policy-coverages-inner-container {\n                .vella-policy-coverages-item {\n                    margin-bottom: 1.25rem;\n                    min-height: 4.75rem;\n\n                    .vella-policy-coverages-item-circle {\n                        position: relative;\n                        margin: 0 auto 0.5rem auto;\n                        width: 2.875rem;\n                        height: 2.875rem;\n                        border-radius: 50%;\n                        background-color: $vella-light-gray-bg;\n\n                        .vella-policy-coverages-item-img {\n                            height: 1.875rem;\n                            display: block;\n                            position: absolute;\n                            top: 50%;\n                            left: 50%;\n                            transform: translateX(-50%) translateY(-50%);\n                            line-height: 1;\n                            font-size: 0.625rem;\n                            color: white;\n                        }\n                    }\n\n                    .vella-policy-coverages-item-name {\n                        text-align: center;\n                        display: block;\n                        line-height: 1.1;\n                        color: $vella-dark-gray;\n                        font-size: 0.625rem;\n                        text-transform: uppercase;\n                    }\n                }\n            }\n\n            .vella-policy-coverages-coverage-amounts-inner-container {\n                color: $vella-dark-gray;\n                font-weight: 300;\n                margin-bottom: 0.1875rem;\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy-coverages",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-policy-coverages/%vlocity_namespace%__VlocityUITemplate__c/vella-policy-coverages"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-policy-coverages",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-policy-coverages",
            "VlocityDataPackName": "vella-policy-coverages",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-detail-card {\n  position: relative;\n  width: 100%;\n  min-height: 19.75rem;\n  background-color: #00CEFF;\n  padding: 1rem 1.25rem 4.5rem 1.25rem; }\n  .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top {\n    color: #0090B9;\n    padding: 0;\n    margin: 0 auto 2rem;\n    width: 16rem; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top .vella-policy-detail-circle {\n      position: relative;\n      width: 5.5rem;\n      height: 5.5rem;\n      margin: 0;\n      background-color: white;\n      border-radius: 50%;\n      transform: translate3d(0, 0, 0); }\n      .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top .vella-policy-detail-circle img {\n        display: block;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: 55px; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top .vella-policy-detail-premium-container {\n      padding-top: 0.75rem; }\n      .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top .vella-policy-detail-premium-container .vella-policy-detail-premium {\n        font-size: 2.25rem;\n        line-height: 3rem; }\n      .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-top .vella-policy-detail-premium-container .vella-policy-detail-premium-label {\n        text-transform: uppercase;\n        font-size: 0.625rem;\n        padding-left: 0.5rem; }\n  .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-middle {\n    margin-bottom: 1rem; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-middle .vella-policy-detail-name {\n      text-align: center;\n      font-size: 1.5rem;\n      line-height: 1.1;\n      color: white;\n      font-weight: bold;\n      margin-bottom: 0.25rem; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-middle .vella-policy-detail-fields-container .vella-policy-detail-field {\n      color: white;\n      line-height: 1.25rem;\n      text-align: center; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-middle .vella-policy-detail-learn-more-btn {\n      display: block;\n      margin: 0.5rem auto;\n      color: white; }\n  .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-actions {\n    border-top: 1px solid #37BDE3;\n    padding: 1.25rem 0;\n    position: absolute;\n    bottom: 0;\n    left: 1rem;\n    right: 1rem; }\n    .vella-policy-detail-card .vella-policy-detail-inner-wrapper .vella-policy-detail-actions .vella-policy-detail-action {\n      color: #0090B9;\n      text-transform: uppercase;\n      border: none;\n      background-color: transparent;\n      padding: 0 1rem;\n      line-height: 1.2; }\n\n.via-slds .modal-backdrop .modal-backdrop-bg {\n  background-color: rgba(0, 0, 0, 0.72); }\n\n.via-slds .modal-backdrop .modal.vella-policy-id-card {\n  padding: 4rem 0.75rem 1rem;\n  background-color: transparent; }\n  .via-slds .modal-backdrop .modal.vella-policy-id-card .bar.bar-header {\n    background-color: #00CEFF !important;\n    height: 4rem;\n    padding: 0.5rem 1rem;\n    position: static;\n    border-top-left-radius: 1rem;\n    border-top-right-radius: 1rem; }\n    .via-slds .modal-backdrop .modal.vella-policy-id-card .bar.bar-header img {\n      width: 141px;\n      height: 34px;\n      margin-top: 0.55rem; }\n    .via-slds .modal-backdrop .modal.vella-policy-id-card .bar.bar-header h1.title {\n      line-height: 2.3;\n      height: auto;\n      font-size: 1.5rem;\n      color: white;\n      text-transform: uppercase;\n      font-weight: bold;\n      width: 100%;\n      left: auto !important;\n      right: auto !important;\n      position: static;\n      margin-right: 0;\n      margin-top: 0;\n      text-align: right; }\n    .via-slds .modal-backdrop .modal.vella-policy-id-card .bar.bar-header .buttons {\n      top: auto;\n      right: -0.5rem;\n      bottom: 4.75rem; }\n      .via-slds .modal-backdrop .modal.vella-policy-id-card .bar.bar-header .buttons .button .slds-button__icon {\n        width: 2rem;\n        height: 2rem;\n        fill: white; }\n  .via-slds .modal-backdrop .modal.vella-policy-id-card .modal-content {\n    min-height: 25rem;\n    height: auto;\n    display: block;\n    background-color: white;\n    border-bottom-left-radius: 1rem;\n    border-bottom-right-radius: 1rem;\n    padding: 1.25rem;\n    position: relative; }\n    .via-slds .modal-backdrop .modal.vella-policy-id-card .modal-content .vella-policy-id-card-footer {\n      position: absolute;\n      bottom: 1rem;\n      right: 1rem; }\n      .via-slds .modal-backdrop .modal.vella-policy-id-card .modal-content .vella-policy-id-card-footer img {\n        width: 68px;\n        height: 17px; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaPolicyDetailsController', ['$scope', '$rootScope', '$state', '$filter', '$ionicModal', '$ionicHistory', 'MobileService', function($scope, $rootScope, $state, $filter, $ionicModal, $ionicHistory, MobileService) {\n    'use strict';\n    function getPolicyImageUrl(img) {\n        var imgParts, url;\n        if (!img) {\n            return;\n        } else {\n            imgParts = img.split('\"');\n            angular.forEach(imgParts, function(part, i) {\n                if (part.indexOf('http') > -1) {\n                    url = part.replace(/&amp;/g, '&');\n                }\n            });\n            return url;\n        }\n    }\n\n    $scope.placeholder.PolicyPremium.value = $filter('currency')($scope.placeholder.PolicyPremium.value, '$', 2);\n    $scope.getPolicyDetails = function(obj) {\n        $scope.policy = obj;\n        $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'AnnualPremium__c'] = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'AnnualPremium__c'].toFixed(2);\n        console.log('$scope.policy', $scope.policy);\n        $rootScope.cardData.imageUrl = getPolicyImageUrl($scope.policy[$rootScope.nsPrefix + 'Product2Id__r'][$rootScope.nsPrefix + 'ProductImage__c']);\n        $rootScope.cardData.AttributeSelectedValues = angular.fromJson($scope.policy[$rootScope.nsPrefix + 'AttributeSelectedValues__c']);\n        $rootScope.cardData.Type = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'Type__c'];\n        $rootScope.cardData.PolicyHolder = $rootScope.accountName;\n        $rootScope.cardData.Name = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'].Name;\n        $rootScope.cardData.Description = $scope.policy[$rootScope.nsPrefix + 'Product2Id__r'].Description;\n        $rootScope.cardData.EffectiveDate = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'EffectiveDate__c'];\n        $rootScope.cardData.ExpirationDate = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'ExpirationDate__c'];\n        $rootScope.cardData.PolicyNumber = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'].AssetAutoNumber__c;\n        $rootScope.cardData.AgentInfo = $scope.policy[$rootScope.nsPrefix + 'PolicyAssetId__r'][$rootScope.nsPrefix + 'PrimaryProducerId__r'];\n        console.log('$rootScope.cardData', $rootScope.cardData);\n        if ($rootScope.skipInsurableLayout) {\n            $ionicHistory.removeBackView();\n            $ionicHistory.clearCache();\n            $rootScope.skipInsurableLayout = false;\n        }\n        if ($rootScope.clearAppCache) {\n            $ionicHistory.clearCache();\n            $rootScope.clearAppCache = false;\n        }\n    };\n\n    $scope.launchAction = function(action) {\n        if (action.id === 'id_card_modal') {\n            $scope.title = $rootScope.cardData.Type;\n            $scope.content = 'vella-policy-id-card';\n            $ionicModal.fromTemplateUrl('app/vella/SldsModalVella.tpl.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.modal = modal;\n                $scope.modal.show();\n            });\n        } else if (action.id === 'change_coverage') {\n            action.url = action.url.replace(/\\{0\\}/g, $scope.params.id);\n            MobileService.performAction(action);\n        } else if (action.id === 'file_a_claim') {\n            action.url = action.url.replace(/{{accountId}}/g, $rootScope.accountId).replace(/{{assetId}}/g, $scope.params.id);\n            MobileService.performAction(action);\n        } else {\n            MobileService.performAction(action);\n        }\n    };\n\n    $scope.closeModal = function() {\n        $scope.modal.hide();\n    };\n\n    $scope.goToMoreDetail = function() {\n        $rootScope.isLoaded = false;\n        $state.go('app.univ', {type: 'MoreDetail', objectId: $scope.params.id});\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "{\"placeholders\":[{\"name\":\"PolicyPremium\",\"label\":\"\",\"$$hashKey\":\"object:2167\"},{\"name\":\"PolicyName\",\"label\":\"\",\"$$hashKey\":\"object:2923\"}],\"zones\":[]}",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-policy-detail/1/Vlocity/1504212061431",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-detail-inner-wrapper\" ng-controller=\"vellaPolicyDetailsController\" ng-init=\"getPolicyDetails(obj)\">\n    <div class=\"slds-clearfix vella-policy-detail-top\">\n        <div class=\"slds-float--left vella-policy-detail-circle\">\n            <img ng-src=\"{{$root.cardData.Image}}\" class=\"vella-policy-img\"/>\n        </div>\n        <!-- <div class=\"slds-float--right vella-policy-detail-premium-container\">\n            <p class=\"vella-policy-detail-premium\">{{placeholder.PolicyPremium.value}}</p>\n            <p class=\"vella-policy-detail-premium-label\">{{placeholder.PolicyPremium.label}}</p>\n        </div> -->\n        <div class=\"slds-float--right vella-policy-detail-premium-container\" ng-repeat=\"field in data.fields\" ng-if=\"field.name.indexOf('AnnualPremium') > -1\">\n            <p class=\"vella-policy-detail-premium\">${{obj | getter: field | picker: field.type}}</p>\n            <p class=\"vella-policy-detail-premium-label\">{{field.label}}</p>\n        </div>\n    </div>\n    <div class=\"vella-policy-detail-middle\">\n        <h1 class=\"vella-policy-detail-name\">{{placeholder.PolicyName.value}}</h1>\n        <div class=\"vella-policy-detail-fields-container\">\n            <div class=\"vella-policy-detail-field\" ng-repeat=\"field in data.fields\" ng-if=\"field.name.toLowerCase().indexOf('premium') < 0\">\n                <span class=\"vella-policy-detail-field-label\">{{field.label}}: </span>\n                <span class=\"vella-policy-detail-field-value\" ng-if=\"field.type === 'date'\">{{obj | getter: field | date: 'mediumDate'}}</span>\n                <span class=\"vella-policy-detail-field-value\" ng-if=\"field.type !== 'date'\">{{obj | getter: field | picker: field.type}}</span>\n            </div>\n        </div>\n        <button class=\"slds-button vella-policy-detail-learn-more-btn\" ng-click=\"goToMoreDetail()\">Learn More</button>\n    </div>\n    <div class=\"slds-clearfix vella-policy-detail-actions\">\n        <button class=\"slds-float--left slds-size--1-of-3 vella-policy-detail-action\" ng-click=\"launchAction({id: 'id_card_modal'})\">View ID Card</button>\n        <button class=\"slds-float--left slds-size--1-of-3 vella-policy-detail-action\" ng-repeat=\"action in data.actions\" ng-click=\"launchAction(action)\">{{action.displayName}}</button>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-08-31T20:41:02.270Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-detail-card {\n    position: relative;\n    width: 100%;\n    min-height: 19.75rem;\n    background-color: $vella-sky;\n    padding: 1rem 1.25rem 4.5rem 1.25rem;\n\n    .vella-policy-detail-inner-wrapper {\n        .vella-policy-detail-top {\n            color: $vella-sky-text;\n            padding: 0;\n            margin: 0 auto 2rem;\n            width: 16rem;\n\n            .vella-policy-detail-circle {\n                @include policyCircle(0, white, img);\n            }\n\n            .vella-policy-detail-premium-container {\n                padding-top: 0.75rem;\n\n                .vella-policy-detail-premium {\n                    font-size: 2.25rem;\n                    line-height: 3rem;\n                }\n\n                .vella-policy-detail-premium-label {\n                    text-transform: uppercase;\n                    font-size: 0.625rem;\n                    padding-left: 0.5rem;\n                }\n            }\n        }\n        .vella-policy-detail-middle {\n            margin-bottom: 1rem;\n\n            .vella-policy-detail-name {\n                text-align: center;\n                font-size: 1.5rem;\n                line-height: 1.1;\n                color: white;\n                font-weight: bold;\n                margin-bottom: 0.25rem;\n            }\n\n            .vella-policy-detail-fields-container {\n                .vella-policy-detail-field {\n                    color: white;\n                    line-height: 1.25rem;\n                    text-align: center;\n                }\n            }\n\n            .vella-policy-detail-learn-more-btn {\n                display: block;\n                margin: 0.5rem auto;\n                color: white;\n            }\n        }\n        .vella-policy-detail-actions {\n            border-top: 1px solid $vella-sky-border;\n            padding: 1.25rem 0;\n            position: absolute;\n            bottom: 0;\n            left: 1rem;\n            right: 1rem;\n\n            .vella-policy-detail-action {\n                color: $vella-sky-text;\n                text-transform: uppercase;\n                border: none;\n                background-color: transparent;\n                padding: 0 1rem;\n                line-height: 1.2;\n            }\n        }\n    }\n}\n\n.via-slds {\n    .modal-backdrop {\n        .modal-backdrop-bg {\n            background-color: rgba(0,0,0,0.72);\n        }\n        .modal.vella-policy-id-card {\n            padding: 4rem 0.75rem 1rem;\n            background-color: transparent;\n\n            .bar.bar-header {\n                background-color: $vella-sky !important;\n                height: 4rem;\n                padding: 0.5rem 1rem;\n                position: static;\n                border-top-left-radius: 1rem;\n                border-top-right-radius: 1rem;\n\n                img {\n                    width: 141px;\n                    height: 34px;\n                    margin-top: 0.55rem;\n                }\n\n                h1.title {\n                    line-height: 2.3;\n                    height: auto;\n                    font-size: 1.5rem;\n                    color: white;\n                    text-transform: uppercase;\n                    font-weight: bold;\n                    width: 100%;\n                    left: auto !important;\n                    right: auto !important;\n                    position: static;\n                    margin-right: 0;\n                    margin-top: 0;\n                    text-align: right;\n                }\n\n                .buttons {\n                    top: auto;\n                    right: -0.5rem;\n                    bottom: 4.75rem;\n\n                    .button {\n                        .slds-button__icon {\n                            width: 2rem;\n                            height: 2rem;\n                            fill: white;\n                        }\n                    }\n                }\n            }\n\n            .modal-content {\n                min-height: 25rem;\n                height: auto;\n                display: block;\n                background-color: white;\n                border-bottom-left-radius: 1rem;\n                border-bottom-right-radius: 1rem;\n                padding: 1.25rem;\n                position: relative;\n\n                .vella-policy-id-card-footer {\n                    position: absolute;\n                    bottom: 1rem;\n                    right: 1rem;\n\n                    img {\n                        width: 68px;\n                        height: 17px;\n                    }\n                }\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy-detail",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-policy-detail/%vlocity_namespace%__VlocityUITemplate__c/vella-policy-detail"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-policy-detail",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-policy-detail",
            "VlocityDataPackName": "vella-policy-detail",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-policy-id-card-page-wrapper {\n  background-color: transparent;\n  height: 100%; }\n  .vella-policy-id-card-page-wrapper .vella-policy-id-card-data {\n    margin-bottom: 1.25rem; }\n    .vella-policy-id-card-page-wrapper .vella-policy-id-card-data.slds-size--1-of-2:first-child {\n      padding-right: 0.5rem; }\n    .vella-policy-id-card-page-wrapper .vella-policy-id-card-data span {\n      display: block;\n      color: black;\n      line-height: 1.3; }\n      .vella-policy-id-card-page-wrapper .vella-policy-id-card-data span.vella-policy-id-card-label {\n        text-transform: uppercase;\n        font-size: 0.625rem;\n        margin-bottom: 0.25rem; }\n      .vella-policy-id-card-page-wrapper .vella-policy-id-card-data span.vella-policy-id-card-value {\n        font-size: 1rem; }\n        .vella-policy-id-card-page-wrapper .vella-policy-id-card-data span.vella-policy-id-card-value.vella-policy-id-card-value-italic {\n          font-style: italic;\n          font-weight: 300; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaPolicyIdCardController', ['$scope', '$rootScope', 'vellaPolicyIdCardService', function($scope, $rootScope, vellaPolicyIdCardService) {\n    'use strict';\n    $scope.getInsuredItems = function() {\n        vellaPolicyIdCardService.getInsuredItems($scope, $scope.params.id).then(function(result) {\n            $scope.insuredItems = result;\n            console.log('getInsuredItems:', $scope.insuredItems);\n            $rootScope.isLoaded = true;\n        }, function(error) {\n            console.log('There was an error:', error);\n        });\n    };\n}]);\nvlocity.cardframework.registerModule.factory('vellaPolicyIdCardService', ['$rootScope', '$q', 'dataSourceService', 'pageService', function($rootScope, $q, dataSourceService, pageService) {\n    'use strict';\n    return {\n        getInsuredItems: function(scope, assetId) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'ApexRemote';\n            datasource.value = {\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: 'InsuranceAssetHandler',\n                remoteMethod: 'getInsuredItems',\n                inputMap: {\n                    assetId: assetId\n                }\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-policy-id-card/1/Vlocity/1505928845124",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-policy-id-card-page-wrapper\" ng-controller=\"vellaPolicyIdCardController\">\n    <div class=\"slds-spinner_container vella-spinner\" ng-class=\"{'vella-spinner-active': !$root.isLoaded}\">\n        <div role=\"status\" class=\"slds-spinner slds-spinner--medium slds-spinner--inverse\">\n            <span class=\"slds-assistive-text\">Loading</span>\n            <div class=\"slds-spinner__dot-a\"></div>\n            <div class=\"slds-spinner__dot-b\"></div>\n        </div>\n    </div>\n    <div class=\"slds-grid\">\n        <div class=\"slds-size--1-of-2 vella-policy-id-card-data\">\n            <span class=\"vella-policy-id-card-label\">Policy Holder</span>\n            <span class=\"vella-policy-id-card-value\">{{$root.cardData.PolicyHolder}}</span>\n        </div>\n        <div class=\"slds-size--1-of-2 vella-policy-id-card-data\">\n            <span class=\"vella-policy-id-card-label\">Policy Number</span>\n            <span class=\"vella-policy-id-card-value\">{{$root.cardData.PolicyNumber}}</span>\n        </div>\n    </div>\n    <div class=\"vella-policy-id-card-data\">\n        <span class=\"vella-policy-id-card-label\">Effective Term</span>\n        <span class=\"vella-policy-id-card-value\">{{$root.cardData.EffectiveDate | date: 'mediumDate'}} - {{$root.cardData.ExpirationDate | date: 'mediumDate'}}</span>\n    </div>\n    <div class=\"vella-policy-id-card-data\" ng-if=\"$root.cardData.Type === 'Auto'\">\n        <span class=\"vella-policy-id-card-label\">Vehicle</span>\n        <span class=\"vella-policy-id-card-value\">{{$root.cardData.Name}}</span>\n        <span class=\"vella-policy-id-card-value vella-policy-id-card-value-italic\">VIN: {{$root.cardData.AttributeSelectedValues.VIN}}</span>\n    </div>\n    <div class=\"vella-policy-id-card-data\" ng-if=\"$root.coverages.coverageAmounts.length\">\n        <span class=\"vella-policy-id-card-label\">Coverages</span>\n        <span class=\"vella-policy-id-card-value\" ng-repeat=\"coverage in $root.coverages.coverageAmounts\">\n            {{coverage.name.fieldValue}}\n        </span>\n    </div>\n    <div class=\"vella-policy-id-card-data\" ng-if=\"$root.cardData.AgentInfo\">\n        <span class=\"vella-policy-id-card-label\">Agent</span>\n        <span class=\"vella-policy-id-card-value\">{{$root.cardData.AgentInfo.FirstName}} {{$root.cardData.AgentInfo.LastName}}</span>\n        <span class=\"vella-policy-id-card-value\">{{$root.cardData.AgentInfo.Phone}}</span>\n        <span class=\"vella-policy-id-card-value\">{{$root.cardData.AgentInfo.Email}}</span>\n    </div>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-20T17:33:25.923Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-policy-id-card-page-wrapper {\n    background-color: transparent;\n    height: 100%;\n\n    .vella-policy-id-card-data {\n        margin-bottom: 1.25rem;\n\n        &.slds-size--1-of-2:first-child {\n            padding-right: 0.5rem;\n        }\n\n        span {\n            display: block;\n            color: black;\n            line-height: 1.3;\n\n            &.vella-policy-id-card-label {\n                text-transform: uppercase;\n                font-size: 0.625rem;\n                margin-bottom: 0.25rem;\n            }\n\n            &.vella-policy-id-card-value {\n                font-size: 1rem;\n\n                &.vella-policy-id-card-value-italic {\n                    font-style: italic;\n                    font-weight: 300;\n                }\n            }\n        }\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-policy-id-card",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-policy-id-card/%vlocity_namespace%__VlocityUITemplate__c/vella-policy-id-card"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-policy-id-card",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-policy-id-card",
            "VlocityDataPackName": "vella-policy-id-card",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        },
        {
            "VlocityDataPackAllRelationships": null,
            "VlocityDataPackData": {
                "%vlocity_namespace%__VlocityUITemplate__c": [
                    {
                        "%vlocity_namespace%__Active__c": true,
                        "%vlocity_namespace%__Author__c": "Vlocity",
                        "%vlocity_namespace%__CSS__c": ".vella-swipe-container .list {\n  padding: 0 0 0.45rem 0;\n  margin: 0; }\n\n.vella-swipe-container .item {\n  height: 4.75rem;\n  border: none;\n  width: 100%;\n  margin: 0;\n  background-color: #FF6D00; }\n  .vella-swipe-container .item .item-content {\n    height: 100%;\n    background-color: #FBFBFB;\n    border-top: 1px solid #f3f3f3;\n    border-bottom: 1px solid #f3f3f3;\n    padding: 1.15rem 2rem; }\n    .vella-swipe-container .item .item-content .vella-swipe-item-container p {\n      margin: 0; }\n    .vella-swipe-container .item .item-content .vella-swipe-item-container .vella-swipe-item-left .vella-swipe-item-name {\n      font-size: 0.8125rem;\n      margin-bottom: 0.25rem; }\n    .vella-swipe-container .item .item-content .vella-swipe-item-container .vella-swipe-item-left .vella-swipe-item-description {\n      font-size: 0.625rem; }\n      .vella-swipe-container .item .item-content .vella-swipe-item-container .vella-swipe-item-left .vella-swipe-item-description span {\n        margin: 0 0.25rem; }\n    .vella-swipe-container .item .item-content .vella-swipe-item-container .vella-swipe-item-right .vella-swipe-item-price {\n      font-size: 0.8125rem; }\n\n.vella-swipe-container .vella-swipe-btn {\n  background-color: #FF6D00;\n  color: white;\n  text-transform: uppercase;\n  width: 5.125rem; }\n  .vella-swipe-container .vella-swipe-btn .vella-swipe-btn-contents .slds-icon {\n    vertical-align: top;\n    margin-top: 0.75rem; }\n  .vella-swipe-container .vella-swipe-btn .vella-swipe-btn-contents .vella-swipe-btn-label {\n    font-size: 0.625rem;\n    white-space: normal;\n    line-height: 1.1;\n    font-weight: bold;\n    margin-bottom: 0.75rem; }\n\n.vella-swipe-container.vella-swipe-insured-item .item {\n  background-color: #FD5365; }\n  .vella-swipe-container.vella-swipe-insured-item .item .item-content {\n    background-color: #F3FBFF;\n    border-top: 1px solid #e4f6ff;\n    border-bottom: 1px solid #e4f6ff; }\n    .vella-swipe-container.vella-swipe-insured-item .item .item-content .vella-swipe-item-container .vella-swipe-item-right .slds-icon {\n      fill: #0090B9;\n      width: 1rem;\n      height: 1rem;\n      margin-top: 0.65rem; }\n\n.vella-swipe-container.vella-swipe-insured-item .vella-swipe-btn {\n  background-color: #FD5365; }\n\n.vella-swipe-container .vella-policy-add-item {\n  color: #C1C1C1;\n  font-size: 0.8125rem;\n  margin-left: 3.25rem; }\n",
                        "%vlocity_namespace%__CustomJavascript__c": "vlocity.cardframework.registerModule.controller('vellaSwipeController', ['$scope', '$rootScope', '$ionicHistory', '$state', 'vellaSwipeService', function($scope, $rootScope, $ionicHistory, $state, vellaSwipeService) {\n    'use strict';\n    function getAge(dob) {\n        var birthday = new Date(dob);\n        var ageDifMs = Date.now() - birthday.getTime();\n        var ageDate = new Date(ageDifMs); // miliseconds from epoch\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\n    }\n    $scope.init = function(obj, records) {\n        console.log('swipe obj', obj);\n        $scope.currentType = $state.params.type;\n        if (obj) {\n            if (!$rootScope.insurableItemCount) {\n                $rootScope.insurableItemCount = 0;\n                if (records) {\n                    $rootScope.cardData.Count = records.length;\n                }\n            }\n            if (obj.Name.fieldValue) {\n                $rootScope.cardData.insuredItem = true;\n                if (records) {\n                    $rootScope.cardData.insuredItemCount = records.length;\n                }\n            } else {\n                $rootScope.cardData.insuredItem = false;\n            }\n            $scope.insurableItem = {\n                Name: obj.Name.fieldValue || obj.Name,\n                Price: obj.Price,\n                SpecName: obj[$rootScope.nsPrefix + 'SpecProductName__c'],\n                Value: null,\n                Breed: null,\n                Dob: null\n            };\n            angular.forEach(obj.attributeCategories.records, function(attrCat, i) {\n                if (attrCat.productAttributes && attrCat.productAttributes.records) {\n                    angular.forEach(attrCat.productAttributes.records, function(prodAttr, j) {\n                        if (prodAttr.code === 'petBreed') {\n                            $scope.insurableItem.Breed = prodAttr.userValues;\n                        }\n                        if (prodAttr.code === 'valueValue') {\n                            $scope.insurableItem.Value = prodAttr.userValues;\n                        }\n                        if (prodAttr.code === 'petBirthdate') {\n                            $scope.insurableItem.Dob = prodAttr.userValues;\n                            $scope.insurableItem.Age = getAge($scope.insurableItem.Dob);\n                        }\n                    });\n                }\n            });\n            console.log('$scope.insurableItem', $scope.insurableItem);\n            $rootScope.insurableItemCount++;\n            if ($rootScope.cardData.Count === $rootScope.insurableItemCount) {\n                $rootScope.isLoaded = true;\n                $rootScope.insurableItemCount = undefined;\n            }\n        }\n    };\n\n    $scope.createInsuredItemFromUnbound = function(item) {\n        var methodName;\n        $rootScope.isLoaded = false;\n        if ($state.params.type === 'Policy') {\n            vellaSwipeService.createInsuredItemFromUnbound($scope, item.Id, $state.params.objectId).then(function(result) {\n                console.log('createInsuredItemFromUnbound result:', result);\n                $rootScope.$broadcast('reloadLayout', 'vella-policy', true);\n            }, function(error) {\n                console.log('createInsuredItemFromUnbound error:', error);\n                $rootScope.isLoaded = true;\n            });\n        } else if ($state.params.type === 'Insurable') {\n            methodName = $scope.insurableItem.SpecName === 'Pet' ? 'VellaUnboundPet_CreateUpdatePolicy' : 'VellaUnboundValuable_CreateUpdatePolicy';\n            vellaSwipeService.createPolicyFromInsurable($scope, item.Id, methodName).then(function(result) {\n                console.log('createPolicyFromInsurable result:', result);\n                $rootScope.cardData.showSwipe = $scope.insurableItem.SpecName;\n                $rootScope.skipInsurableLayout = true;\n                // $rootScope.$broadcast('reloadLayout', 'vella-insurable', true);\n                $state.go('app.univ', {type: 'Policy', objectId: result.IPResult.policyId});\n            }, function(error) {\n                console.log('createPolicyFromInsurable error:', error);\n                $rootScope.isLoaded = true;\n            });\n        }\n    };\n\n    $scope.deleteInsuredItem = function(item) {\n        $rootScope.isLoaded = false;\n        vellaSwipeService.deleteInsuredItem($scope, item.Id.fieldValue).then(function(result) {\n            console.log('deleteInsuredItem result:', result);\n            $ionicHistory.clearCache();\n            if ($rootScope.cardData.insuredItemCount === 1) {\n                $rootScope.cardData.insuredItemCount = 0;\n            }\n            if (result.IPResult.NewPrice) {\n                $rootScope.$broadcast('reloadLayout', 'vella-policy', true);\n            } else {\n                $state.go('app.univ', {type: 'Home'});\n            }\n        }, function(error) {\n            console.log('deleteInsuredItem error:', error);\n            $rootScope.isLoaded = true;\n        });\n    };\n\n    $scope.filterCard = function(obj) {\n        if (obj[$rootScope.nsPrefix + 'ProductName__c']) {\n            if ($rootScope.cardData.SpecName === obj[$rootScope.nsPrefix + 'ProductName__c']) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return true;\n        }\n    };\n\n    $scope.onSwipe = function(event) {\n        console.log('swiped right', event);\n    };\n}]);\nvlocity.cardframework.registerModule.factory('vellaSwipeService', ['$rootScope', '$q', 'dataSourceService', function($rootScope, $q, dataSourceService) {\n    'use strict';\n    return {\n        createPolicyFromInsurable: function(scope, itemId, methodName) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'ApexRemote';\n            datasource.value = {\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: 'IntegrationProcedureService',\n                remoteMethod: methodName,\n                inputMap: {\n                    ItemId: itemId\n                }\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        },\n        createInsuredItemFromUnbound: function(scope, itemId, assetId) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'ApexRemote';\n            datasource.value = {\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: 'IntegrationProcedureService',\n                remoteMethod: 'VellaValuable_CreateInsuredItemFromUnbound',\n                inputMap: {\n                    ItemId: itemId,\n                    PolicyId: assetId\n                }\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        },\n        deleteInsuredItem: function(scope, itemId) {\n            var deferred = $q.defer();\n            var datasource = {};\n            datasource.type = 'ApexRemote';\n            datasource.value = {\n                remoteNSPrefix: $rootScope.nsPrefix,\n                remoteClass: 'IntegrationProcedureService',\n                remoteMethod: 'VellaValuable_DeleteInsuredItem',\n                inputMap: {\n                    InsuredItemId: itemId\n                }\n            };\n            dataSourceService.getData(datasource, scope, null).then(\n                function(data) {\n                    deferred.resolve(data);\n                },\n                function(error) {\n                    console.error(error);\n                    deferred.reject(error);\n                });\n            return deferred.promise;\n        }\n    };\n}]);",
                        "%vlocity_namespace%__Definition__c": "",
                        "%vlocity_namespace%__Description__c": "",
                        "%vlocity_namespace%__DisplayOn__c": "",
                        "%vlocity_namespace%__ExternalID__c": "vella-swipe/1/Vlocity/1505404070884",
                        "%vlocity_namespace%__HTML__c": "<div class=\"vella-swipe-container\" ng-controller=\"vellaSwipeController\" ng-init=\"init(obj, records)\" ng-class=\"{'vella-swipe-insured-item': obj.Name.fieldValue}\">\n    <ion-list show-delete=\"false\" can-swipe=\"true\" ng-if=\"obj\">\n        <ion-item href=\"#\" ng-if=\"obj.Name.fieldValue !== 'Personal Dwelling'\">\n            <div class=\"slds-clearfix vella-swipe-item-container\">\n                <div class=\"slds-float--left vella-swipe-item-left\">\n                    <p class=\"vella-swipe-item-name\">{{insurableItem.Name}}</p>\n                    <p class=\"vella-swipe-item-description vella-swipe-item-description-pet\" ng-if=\"insurableItem.Breed\">{{insurableItem.Breed}} <span>|</span> {{insurableItem.Age}} y/o</p>\n                    <p class=\"vella-swipe-item-description vella-swipe-item-description-valuable\" ng-if=\"insurableItem.Value\">Value ${{insurableItem.Value | currency}}</p>\n                </div>\n                <div class=\"slds-float--right vella-swipe-item-right\" ng-hide=\"obj.Name.fieldValue\">\n                    <p class=\"vella-swipe-item-price\">${{insurableItem.Price}}/mo</p>\n                </div>\n                <div class=\"slds-float--right vella-swipe-item-right\" ng-show=\"obj.Name.fieldValue\">\n                    <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'check'\"></slds-svg-icon>\n                </div>\n            </div>\n            <ion-option-button class=\"button-light vella-swipe-btn\" ng-if=\"!obj.Name.fieldValue\" ng-click=\"createInsuredItemFromUnbound(obj)\">\n                <div class=\"vella-swipe-btn-contents\">\n                    <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'check'\"></slds-svg-icon>\n                    <div class=\"vella-swipe-btn-label\">Add Coverage</div>\n                </div>\n            </ion-option-button>\n            <ion-option-button class=\"button-light vella-swipe-btn\" ng-if=\"obj.Name.fieldValue\" ng-click=\"deleteInsuredItem(obj)\">\n                <div class=\"vella-swipe-btn-contents\">\n                    <slds-svg-icon size=\"'small'\" sprite=\"'utility'\" icon=\"'close'\"></slds-svg-icon>\n                    <div class=\"vella-swipe-btn-label\">Remove Coverage</div>\n                </div>\n            </ion-option-button>\n        </ion-item>\n    </ion-list>\n    <button class=\"slds-button vella-policy-add-item\" ng-if=\"!obj && data.cardName === 'vella-policy-add-insured-item' && currentType === 'Policy' && action.id === 'add_pet_item_from_policy' && $root.cardData.Type === 'Pet'\" ng-repeat=\"action in data.actions\" ng-click=\"performAction(action)\">+ {{action.displayName}}</button>\n    <button class=\"slds-button vella-policy-add-item\" ng-if=\"!obj && data.cardName === 'vella-policy-add-insured-item' && currentType === 'Policy' && action.id === 'add_valuable_item_from_policy' && $root.cardData.Type === 'Valuable'\" ng-repeat=\"action in data.actions\" ng-click=\"performAction(action)\">+ {{action.displayName}}</button>\n    <button class=\"slds-button vella-policy-add-item\" ng-if=\"!obj && data.cardName === 'vella-policy-add-insured-item' && currentType === 'Insurable' && action.id === 'add_pet_item_from_insurable' && $root.cardData.SpecName === 'Pet'\" ng-repeat=\"action in data.actions\" ng-click=\"performAction(action)\">+ {{action.displayName}}</button>\n    <button class=\"slds-button vella-policy-add-item\" ng-if=\"!obj && data.cardName === 'vella-policy-add-insured-item' && currentType === 'Insurable' && action.id === 'add_valuable_item_from_insurable' && $root.cardData.SpecName === 'Valuable'\" ng-repeat=\"action in data.actions\" ng-click=\"performAction(action)\">+ {{action.displayName}}</button>\n</div>",
                        "%vlocity_namespace%__ParentID__c": "",
                        "%vlocity_namespace%__SampleJson__c": "{\n    \"data\": {\n        \"actions\": [\n            {\n                \"displayName\": \"Like Action\",\n                \"vlocityIcon\": \"icon-v-heart\"\n            }\n        ],\n        \"fields\": [\n            {\n                \"label\": \"Description\",\n                \"name\": \"description\"\n            },\n            {\n                \"label\": \"Cost\",\n                \"name\": \"cost\",\n                \"type\": \"currency\"\n            }\n        ],\n        \"title\": \"Card Title\"\n    },\n    \"obj\": {\n        \"Id\": \"123456\",\n        \"LastModifiedDate\": \"2017-09-14T15:47:17.934Z\",\n        \"Name\": \"Object Name\",\n        \"cost\": 150,\n        \"description\": \"Some description\"\n    }\n}",
                        "%vlocity_namespace%__Sass__c": "@import 'vella-mixins-variables';\n\n.vella-swipe-container {\n    .list {\n        padding: 0 0 0.45rem 0;\n        margin: 0;\n    }\n\n    .item {\n        height: 4.75rem;\n        border: none;\n        width: 100%;\n        margin: 0;\n        background-color: $vella-orange;\n\n        .item-content {\n            height: 100%;\n            background-color: $vella-insurable-item-bg;\n            border-top: 1px solid darken($vella-insurable-item-bg, 3%);\n            border-bottom: 1px solid darken($vella-insurable-item-bg, 3%);\n            padding: 1.15rem 2rem;\n\n            .vella-swipe-item-container {\n                p {\n                    margin: 0;\n                }\n\n                .vella-swipe-item-left {\n                    .vella-swipe-item-name {\n                        font-size: 0.8125rem;\n                        margin-bottom: 0.25rem;\n                    }\n\n                    .vella-swipe-item-description {\n                        font-size: 0.625rem;\n\n                        span {\n                            margin: 0 0.25rem;\n                        }\n                    }\n                }\n\n                .vella-swipe-item-right {\n                    .vella-swipe-item-price {\n                        font-size: 0.8125rem;\n                    }\n                }\n            }\n        }\n    }\n    .vella-swipe-btn {\n        background-color: $vella-orange;\n        color: white;\n        text-transform: uppercase;\n        width: 5.125rem;\n\n        .vella-swipe-btn-contents {\n            .slds-icon {\n                vertical-align: top;\n                margin-top: 0.75rem;\n            }\n            .vella-swipe-btn-label {\n                font-size: 0.625rem;\n                white-space: normal;\n                line-height: 1.1;\n                font-weight: bold;\n                margin-bottom: 0.75rem;\n            }\n        }\n    }\n\n    &.vella-swipe-insured-item {\n        .item {\n            background-color: $vella-red;\n\n            .item-content {\n                background-color: $vella-insured-item-bg;\n                border-top: 1px solid darken($vella-insured-item-bg, 3%);\n                border-bottom: 1px solid darken($vella-insured-item-bg, 3%);\n\n                .vella-swipe-item-container {\n                    .vella-swipe-item-right {\n                        .slds-icon {\n                            fill: $vella-sky-text;\n                            width: 1rem;\n                            height: 1rem;\n                            margin-top: 0.65rem;\n                        }\n                    }\n                }\n            }\n        }\n\n        .vella-swipe-btn {\n            background-color: $vella-red;\n        }\n    }\n\n    .vella-policy-add-item {\n        color: $vella-light-gray;\n        font-size: 0.8125rem;\n        margin-left: 3.25rem;\n    }\n}",
                        "%vlocity_namespace%__Type__c": "Cards",
                        "%vlocity_namespace%__Version__c": 1,
                        "Name": "vella-swipe",
                        "VlocityDataPackIsIncluded": true,
                        "VlocityDataPackType": "SObject",
                        "VlocityRecordSObjectType": "%vlocity_namespace%__VlocityUITemplate__c",
                        "VlocityRecordSourceKey": "VlocityUITemplate/vella-swipe/%vlocity_namespace%__VlocityUITemplate__c/vella-swipe"
                    }
                ],
                "VlocityDataPackIsIncluded": true,
                "VlocityDataPackKey": "VlocityUITemplate/vella-swipe",
                "VlocityDataPackType": "VlocityUITemplate"
            },
            "VlocityDataPackIsIncluded": true,
            "VlocityDataPackKey": "VlocityUITemplate/vella-swipe",
            "VlocityDataPackName": "vella-swipe",
            "VlocityDataPackStatus": "Success",
            "VlocityDataPackType": "VlocityUITemplate"
        }
    ],
    "name": "Vella",
    "primaryDataPackKey": "VlocityDeploy",
    "processMultiple": true,
    "status": "Complete",
    "version": 1
}