<apex:page controller="smlfcom.SMLWaterFallController" id="page" docType="html-5.0" sidebar="false" showHeader="false" standardStylesheets="false" readOnly="true" applyBodyTag="false" applyHtmlTag="false">
    <title>SML Pipeline Changes</title>
    <apex:composition template="smlfcom__SMLTemplateV2">

        <apex:define name="body">
            <apex:form id="form">
                <apex:includeScript value="https://code.highcharts.com/highcharts.js"/>
                <apex:includeScript value="https://code.highcharts.com/modules/exporting.js"/>
                <apex:includeScript value="https://code.highcharts.com/highcharts-more.js"/>
                <apex:includeScript value="https://code.highcharts.com/modules/heatmap.js"/>
                <apex:includeScript value="{!URLFOR($Resource.smlfcom__PSDesign, 'js/highchart-themes.js')}"/>
                <div class="page-header">
                    <div class="container-bs">
                        <div class="title">
                            <h1>Trending: </h1>
                            <h2>Waterfall</h2>
                        </div><!-- /.title -->
                    </div>
                </div><!-- /.page-header -->
                <div class="container-bs">
                    <div class="page-container">
                        <div class="sidebar">
                            <div class="form-group">
                                   <c:Account_and_owner_filter />  
                                   <apex:repeat value="{!smlFilter.listOfDefaultFields}" var="filterField">
                                   <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'STRING'}">
                                        <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndLabel[filterField] == 'Account'}">
                                          <apex:inputText value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}"  styleClass="form-control hidden account-search-field-hidden"/>
                                      </apex:outputPanel>
                                      <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndLabel[filterField] == 'Owner'}">
                                        <apex:inputText value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}"  styleClass="form-control hidden user-search-field-hidden"/>
                                      </apex:outputPanel>
                                    </apex:outputPanel>
                                   <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'DATE_RANGE'}">
                                        <hr/>
                                        <div class="form-group">
                                            <label>{!smlFilter.mapOfFieldNameAndLabel[filterField]}</label>
                                            <apex:input type="date" value="{!smlFilter.closeDateRange.start_Date}" styleClass="form-control"/>
                                        </div>
                                        <div class="form-group">
                                            <label for="">To</label>
                                            <apex:input type="date" value="{!smlFilter.closeDateRange.end_Date}" styleClass="form-control"/>
                                        </div>
                                        <hr/>
                                    </apex:outputPanel>
                                </apex:repeat>

                                <apex:repeat value="{!smlFilter.listOfFields}" var="filterField">
                                    <div class="form-group">
                                        <label>{!smlFilter.mapOfFieldNameAndLabel[filterField]}</label>
                                        <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'PICKLIST'}">
                                            <apex:selectList value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}" multiselect="false" size="1" styleClass="filterField form-control custom-select">
                                                <apex:selectOption itemLabel="All" itemValue="All"></apex:selectOption>
                                                <apex:selectOptions value="{!smlFilter.mapOfFieldAndValue[filterField]}"></apex:selectOptions>
                                            </apex:selectList>
                                        </apex:outputPanel>
                                    </div>
                                </apex:repeat>
                            </div>
                            <div class="controls flex">
                                <div class="left">
                                    <a class="btn-bs btn-sm btn-default" href="javascript:reset()">Reset</a>
                                </div>
                                <div class="right">
                                    <a class="btn-bs btn-sm btn-primary" href="javascript:saveRules();javascript:refresh()">Refresh</a>
                                </div>
                            </div>
                            <apex:actionFunction action="{!refreshData}" name="refresh" reRender="script_Panel,initpanel" status="renderingStatus"/>
                            <apex:actionFunction action="{!resetFilters}" name="reset" status="renderingStatus"/>

                        </div>
                        <div class="content">
                            <div class="flex-row two-col" style="margin-bottom:10px">
                              <div class="form-group">
                                <label for="{!startDate}">Start Date Filter</label>
                                <apex:selectList value="{!startDate}" multiselect="false" size="1" styleClass="filterField custom-select" onchange="refresh()">
                                    <apex:selectOptions value="{!StartDateFilterValues}"></apex:selectOptions>
                                </apex:selectList>
                              </div>
                            </div>
                            <div id="waterfallchart"/>
                            <apex:outputPanel id="tablePanel">
                                <div class="content hidden" id="demoMessage"></div> 
                                <div class="table-content hidden" id = "recordTableContainer">
                                    <div class="content">
                                        <table id="oppDataTable" class="table table-striped table-bordered" width="100%">
                                            <thead>
                                                <tr>
                                                    <th>Opportunity Name</th>
                                                    <th>Owner</th>
                                                    <th>Amount</th>
                                                    <th>Stage</th>
                                                    <th>Close Date</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </apex:outputPanel>
                        </div>
                        <apex:outputPanel id="initpanel">
                            <script>
                            $(function(){
                                var obj = jQuery.parseJSON('{!JSENCODE(chart_Data_Json)}');
                                createChart(obj);
                            });
                            </script>
                        </apex:outputPanel>
                    </div>
                </div><!-- /.container-bs -->
                <apex:outputPanel id="script_Panel" >
                    <script>
                      var startDate_Filter = '{!HTMLENCODE(startDate)}';
                    </script>
                </apex:outputPanel>
            </apex:form>
        </apex:define>
    </apex:composition>
        <!-- remote object for fetching account records -->
    <apex:remoteObjects jsNamespace="remote_account">
        <apex:remoteObjectModel name="Account" fields="Id,Name"/>
    </apex:remoteObjects>
    <apex:remoteObjects jsNamespace="remote_user">
        <apex:remoteObjectModel name="User" fields="Id,Name"/>
    </apex:remoteObjects>
    <script>

    var _waterfallchart = null;
    var _oppTable = null;

    function init(){
        console.log('Entry');
        var obj = jQuery.parseJSON('{!JSENCODE(chart_Data_Json)}');
        console.log(obj);
        createChart(obj);
    }
    var Color = {
        gray_base:                                  '#000',
        gray_darker:                               '#262626',
        gray_dark:                                 '#2d2d2d',
        gray:                                      '#383838',
        gray_light:                                '#444444',
        gray_lighter:                              '#5c5c5c',

        brand_primary:                             '#2c97de',
        brand_success:                             '#84b547',
        brand_info:                                '#2dbda8',
        brand_warning:                             '#e76d3b',
        brand_danger:                              '#cc3e4a',

        brand_cerulean:                            '#00A3E3',
        brand_curious_blue:                        '#2986c7',
        brand_endaveour:                           '#0055a3',

        brand_minsk:                               '#362d88',
        brand_eminence:                            '#742787',
        brand_violet_eggplant:                     '#aa1985',

        brand_mint_green:                          '#72ff96',
        brand_aquamarine:                          '#62ffe0',
        brand_malibu:                              '#6abfff',

        brand_dodger_blue:                         '#5e6cff',
        brand_heliotrope:                          '#a26bff',
        brand_perfume:                             '#f57ffe',
    };

    Highcharts.theme = {
        //Używane kolory wykresów
        colors: [Color.brand_perfume, "#bb4488", "#4BABD3", "#6CC080", "#E6645C", "#ff0066", "#eeaaee",
                 "#55BF3B", "#DF5353", "#3185AA", "#aaeeee"],
        chart: {
            backgroundColor: {
                linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
                stops: [
                    [0, '#ffffff'],
                    [1, '#ffffff']
                ]
            },
            style: {
                fontFamily: "'Open Sans', sans-serif"
            },
            plotBorderColor: '#606063'
        },
        title: {
            style: {
                color: '#333333',
                textTransform: 'uppercase',
                fontSize: '20px'
            }
        },
        subtitle: {
            style: {
                color: '#333',
                textTransform: 'uppercase'
            }
        },
        xAxis: {
            gridLineWidth: 1,
            gridLineColor: '#dddddd',
            labels: {
                style: {
                    color: '#333333'
                }
            },
            lineColor: '#dddddd',
            minorGridLineColor: '#505053',
            tickColor: '#dddddd',
            title: {
                style: {
                    color: '#A0A0A3'

                }
            }
        },
        yAxis: {
            gridLineColor: '#dddddd',
            labels: {
                style: {
                    color: '#333333'
                }
            },
            lineColor: '#dddddd',
            minorGridLineColor: '#505053',
            tickColor: '#dddddd',
            tickWidth: 1,
            title: {
                style: {
                    color: '#A0A0A3'
                }
            }
        },
        tooltip: {
            backgroundColor: 'rgba(0, 0, 0, 0.85)',
            style: {
                color: '#F0F0F0'
            }
        },
        plotOptions: {
            series: {
                borderColor: 'rgba(0,0,0,0)',
                dataLabels: {
                    color: '#B0B0B3'
                },
                marker: {
                    lineColor: '#333'
                }
            },
            boxplot: {
                fillColor: '#505053'
            },
            candlestick: {
                lineColor: 'white'
            },
            errorbar: {
                color: 'white'
            }
        },
        legend: {
            itemStyle: {
                color: '#333333'
            },
            itemHoverStyle: {
                color: '#555555'
            },
            itemHiddenStyle: {
                color: '#606063'
            }
        },
        credits: {
            style: {
                color: '#666'
            }
        },
        labels: {
            style: {
                color: '#dddddd'
            }
        },

        drilldown: {
            activeAxisLabelStyle: {
                color: '#F0F0F3'
            },
            activeDataLabelStyle: {
                color: '#F0F0F3'
            }
        },

        navigation: {
            buttonOptions: {
                symbolStroke: '#ccc',
                theme: {
                    fill: '#ffffff'
                }
            }
        },

        // scroll charts
        rangeSelector: {
            buttonTheme: {
                fill: '#505053',
                stroke: '#000000',
                style: {
                    color: '#CCC'
                },
                states: {
                    hover: {
                        fill: '#dddddd',
                        stroke: '#000000',
                        style: {
                            color: 'white'
                        }
                    },
                    select: {
                        fill: '#000003',
                        stroke: '#000000',
                        style: {
                            color: 'white'
                        }
                    }
                }
            },
            inputBoxBorderColor: '#505053',
            inputStyle: {
                backgroundColor: '#333',
                color: 'silver'
            },
            labelStyle: {
                color: 'silver'
            }
        },

        navigator: {
            handles: {
                backgroundColor: '#666',
                borderColor: '#AAA'
            },
            outlineColor: '#CCC',
            maskFill: 'rgba(255,255,255,0.1)',
            series:
            {
                color: '#3185AA',
                lineColor: '#A6C7ED'
            },
            xAxis: {
                gridLineColor: '#505053'
            }
        },

        scrollbar: {
            barBackgroundColor: '#808083',
            barBorderColor: '#808083',
            buttonArrowColor: '#CCC',
            buttonBackgroundColor: '#606063',
            buttonBorderColor: '#606063',
            rifleColor: '#FFF',
            trackBackgroundColor: '#404043',
            trackBorderColor: '#404043'
        },

        // special colors for some of the
        legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',
        background2: '#505053',
        dataLabelsColor: '#B0B0B3',
        textColor: '#C0C0C0',
        contrastTextColor: '#F0F0F3',
        maskColor: 'rgba(255,255,255,0.3)'
    };
    // Apply the theme
    Highcharts.setOptions(Highcharts.theme);



    function createChart(data){

        $('#waterfallchart').highcharts({
            chart: {
                type: 'waterfall',
                height: 500,
                marginTop: 50,
                spacingTop: 0,
                spacingBottom: 40,
                spacingLeft: 0,
                spacingRight: 5
            },

            xAxis: {
                type: 'category'
            },

            title: {
                text: ''
            },
            plotOptions: {
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function () {
                                 var accValue = $(".account-search-field-hidden").val();
                                 var usrValue = $(".user-search-field-hidden").val();
                                 Visualforce.remoting.Manager.invokeAction(
                                 '{!$RemoteAction.SMLWaterFallController.testOppTable}',
                                 this.name,startDate_Filter,accValue,usrValue,function(result,event){
                                    console.log('result++'+result);
                                if(result == 'DemoMode'){
                                    $('#demoMessage').html('<strong>Note:</strong> Related opportunities view is disabled in demo mode.  Contact info@springml.com to enable this view.');
                                    $(".content").removeClass('hidden');
                                }
                                else{
                                    var obj = JSON.parse(result);
                                        var opp_table = $("#recordTableContainer tbody");
                                        opp_table.empty();

                                        var row;
                                        $.each(obj, function(index, value){
                                            console.log(value);
                                            row = $("<tr></tr>");
                                            row.append("<td><a href=\"/"+value.smlfcom__Opportunity__c+"\" target=\"_blank\">"+value.smlfcom__Opportunity__r.Name+"</a></td>");
                                            row.append("<td>"+value.smlfcom__Opportunity__r.Owner.Name+"</td>");
                                            row.append("<td>"+value.smlfcom__Opportunity__r.Amount+"</td>");

                                            row.append("<td>"+value.smlfcom__Opportunity__r.StageName+"</td>");
                                            row.append("<td>"+value.smlfcom__Opportunity__r.CloseDate+"</td>");
                                            opp_table.append(row);
                                    });
                                            _oppTable = $("#oppDataTable").DataTable();

                                            $(".table-content").removeClass('hidden');
                                  } 
                                 },{escape: false});
                            }
                        }
                    }
                }
            },

            series: [{

                upColor: Highcharts.getOptions().colors[2],
                color: Highcharts.getOptions().colors[3],
                type: 'waterfall',
                name: 'Total Value',
                data: data,

                dataLabels: {
                    style: {
                        color: '#FFFFFF',
                        fontWeight: 'bold'
                    }
                },
                pointPadding: 0
            }]
        });

        _waterfallchart = $('#waterfallchart').highcharts();

    }



    </script>
</apex:page>