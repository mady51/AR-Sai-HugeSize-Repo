<apex:page controller="smlfcom.SMLWaterFallController" id="page" docType="html-5.0" sidebar="false" showHeader="false" standardStylesheets="false" readOnly="true" applyBodyTag="false" applyHtmlTag="false">
    <title>SML Pipeline Changes</title>
    <style>
        .highcharts-credits {
            display: none;
        }

        html,
        body {
            position: relative;
            height: 100%;
        }

        body {
            background: #eee;
            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
            font-size: 14px;
            color: #000;
            margin: 0;
            padding: 0;
        }

        .swiper-container {
            width: 100%;
            height: 100%;
            margin-left: auto;
            margin-right: auto;
        }

        .swiper-slide {
            text-align: center;
            font-size: 18px;
            background: #fff;
            /* Center slide text vertically */
            display: -webkit-box;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -webkit-box-pack: center;
            -ms-flex-pack: center;
            -webkit-justify-content: center;
            justify-content: center;
            -webkit-box-align: center;
            -ms-flex-align: center;
            -webkit-align-items: center;
            align-items: center;
            max-width: 100%;
            padding: 0px 50px;
        }

        .highcharts-text-outline {
            fill: #364150 !important;
            stroke-width: 0px !important;
            stroke-linejoin: round;
            color: #364150 !important;
        }
    </style>
    <apex:composition template="smlfcom__SMLTemplateV2">
        <apex:define name="body">
            <apex:form id="form">
                <apex:includeScript value="https://code.highcharts.com/highcharts.js" />
                <apex:includeScript value="https://code.highcharts.com/modules/exporting.js" />
                <apex:includeScript value="https://code.highcharts.com/highcharts-more.js" />
                <apex:includeScript value="https://code.highcharts.com/modules/heatmap.js" />
                <apex:includeScript value="{!URLFOR($Resource.smlfcom__PSDesign, 'js/highchart-themes.js')}" />
                <div class="page-header">
                    <div class="container-bs">
                        <div class="title" data-step="1" data-intro="View changes to your current quarter pipeline (demo data)">
                            <h1>Trending: </h1>
                            <h2>{!smlFilter.pageLabelNameMapping['SMLWaterfallView'].pageLabel}</h2>
                        </div>
                        <!-- /.title -->
                    </div>
                </div>
                <!-- /.page-header -->
                <div class="container-bs">
                    <div class="page-container">
                        <div class="sidebar">
                            <div data-step="2" data-intro="Select filter values and click on refresh to narrow down opportunities">
                                <div class="form-group">
                                    <c:Account_and_owner_filter />
                                    <apex:repeat value="{!smlFilter.listOfDefaultFields}" var="filterField">
                                        <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'STRING'}">
                                            <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndLabel[filterField] == 'Account'}">
                                                <apex:inputText value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}" styleClass="form-control hidden account-search-field-hidden" />
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndLabel[filterField] == 'Owner'}">
                                                <apex:inputText value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}" styleClass="form-control hidden user-search-field-hidden" />
                                            </apex:outputPanel>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'DATE_RANGE'}">
                                            <hr/>
                                            <div class="form-group">
                                                <label>{!smlFilter.mapOfFieldNameAndLabel[filterField]}</label>
                                                <apex:selectList value="{!smlFilter.dateFilter }" multiselect="false" size="1" styleClass="filterField form-control custom-select">
                                                    <apex:selectOptions value="{!smlFilter.listOfDateFilter }"></apex:selectOptions>
                                                </apex:selectList>
                                            </div>
                                            <hr/>
                                        </apex:outputPanel>
                                    </apex:repeat>
                                    <apex:repeat value="{!smlFilter.listOfFields}" var="filterField">
                                        <div class="form-group">
                                            <label>{!smlFilter.mapOfFieldNameAndLabel[filterField]}</label>
                                            <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'PICKLIST'}">
                                                <apex:selectList value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}" multiselect="false" size="1" styleClass="filterField form-control custom-select">
                                                    <apex:selectOption itemLabel="All" itemValue="All"></apex:selectOption>
                                                    <apex:selectOptions value="{!smlFilter.mapOfFieldAndValue[filterField]}"></apex:selectOptions>
                                                </apex:selectList>
                                            </apex:outputPanel>
                                            <apex:outputPanel layout="none" rendered="{!smlFilter.mapOfFieldNameAndType[filterField] == 'STRING'}">
                                                <apex:inputText value="{!smlFilter.mapOfFieldAndSelectedValue[filterField]}" styleClass="filterField form-control" />
                                            </apex:outputPanel>
                                        </div>
                                    </apex:repeat>
                                </div>
                                <apex:outputPanel layout="none" rendered="{!smlFilter.textFilterList != null && smlFilter.textFilterList.size > 0}">
                                    <apex:repeat value="{!smlFilter.textFilterList }" var="filterField">
                                        <div class="form-group">
                                            <label>{!filterField.fieldLabel}</label>
                                            <apex:selectList value="{!filterField.selectedmapValue[filterField.fieldAPIName]}" multiselect="false" size="1" styleClass="filterField form-control custom-select">
                                                <apex:selectOptions value="{!filterField.fieldValues}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </apex:repeat>
                                </apex:outputPanel>
                                <hr/>
                                <div class="form-group">
                                    <label>Compare By</label>
                                    <apex:selectList value="{!selectedCompareBy}" multiselect="false" size="1" styleClass="filterField form-control custom-select selectCompare">
                                        <apex:selectOptions value="{!compareByList}"></apex:selectOptions>
                                    </apex:selectList>
                                </div>
                                <div class="controls flex">
                                    <div class="left">
                                        <a class="btn-bs btn-sm btn-default" href="javascript:reset()">Reset</a>
                                    </div>
                                    <div class="right">
                                        <a href="javascript:saveRules();javascript:refresh()" class="btn-bs btn-primary btn-sm">Refresh</a>
                                    </div>
                                </div>
                                <apex:actionFunction action="{!refreshData}" name="refresh" reRender="script_Panel,compPanel,initpanel" oncomplete="hideTable();return false;" status="renderingStatus" />
                                <apex:actionFunction action="{!resetFilters}" name="reset" status="renderingStatus" />
                            </div>
                        </div>
                        <div class="content">
                            <div class="flex-row two-col" style="margin-bottom:10px">
                                <div class="form-group">
                                    <label for="{!startDate}">Changes From:</label>
                                    <apex:selectList value="{!startDate}" multiselect="false" size="1" styleClass="filterField custom-select" onchange="refresh()">
                                        <apex:selectOptions value="{!StartDateFilterValues}"></apex:selectOptions>
                                    </apex:selectList>
                                </div>
                                <div class="form-group">
                                    <a href="javascript:openSliderViewModal()" class="btn-blank" style="float: right;"><img src="{!URLFOR($Resource.SMLTemplateV2, 'img/icons/insights.svg')}" /></a>
                                    <!-- <input type="button" onclick="openSliderViewModal();" value="Show Insights" class="btn-bs btn-primary" style="float: right"/> -->
                                </div>
                            </div>
                            <div id="waterfallchart" data-step="3" data-intro="Click on any of the bars to see related list of opportunities" />
                            <apex:outputPanel id="tablePanel">
                                <div class="content hidden" id="demoMessage"></div>
                                <div class="table-content hidden" id="recordTableContainer">
                                    <div class="content">
                                        <center>
                                            <h3 id="details"> Details </h3>
                                        </center>
                                        <table id="oppDataTable" class="table table-striped table-bordered" width="100%">
                                            <thead>
                                                <tr>
                                                    <th>Opportunity Name</th>
                                                    <th>Owner</th>
                                                    <th>Previous Amount</th>
                                                    <th>Amount</th>
                                                    <th>{!stageLabel}</th>
                                                    <th>Close Date</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </apex:outputPanel>
                            <br/>
                            <div class="table-content hidden" id="compareTableContainer">
                                <center>
                                    <h3 id="detailsMetric"> Metrics </h3>
                                </center>
                                <div id="pieChart" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto" />

                                <div class="content">
                                    <table id="compareTable" class="table table-striped table-bordered" width="100%">
                                        <thead>
                                            <tr>
                                                <th>Group</th>
                                                <th>Bucket</th>
                                                <th>Amount</th>
                                                <th>Count</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <apex:outputPanel id="initpanel">
                            <script>
                                $(function() {
                                    var obj = jQuery.parseJSON('{!JSENCODE(chart_Data_Json)}');
                                    createChart(obj);
                                });
                            </script>
                        </apex:outputPanel>
                    </div>
                </div>
                <!-- /.container-bs -->
                <apex:outputPanel id="script_Panel">
                    <script>
                        var startDate_Filter = '{!HTMLENCODE(startDate)}';
                    </script>
                </apex:outputPanel>
                <apex:outputPanel id="modalPanel">
                    <div class="modal fade" id="sliderModal" tabindex="-1" role="dialog" aria-labelledby="sliderModalLabel">
                        <apex:outputPanel id="modPanel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <center>
                                            <h3>Highlights</h3>
                                        </center>
                                    </div>
                                    <div class="modal-body" style="height: 300px">
                                        <div class="swiper-container">
                                            <div class="swiper-wrapper" id="swiperbody">
                                                <apex:repeat value="{!sliderTexts}" var="data">
                                                    <div class="swiper-slide">
                                                        <apex:outputText value="{!data}" escape="false" />
                                                    </div>
                                                </apex:repeat>
                                            </div>
                                            <div class="swiper-pagination"></div>
                                            <div class="swiper-button-next"></div>
                                            <div class="swiper-button-prev"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <script type="text/javascript">
                                var swiper = new Swiper('.swiper-container', {
                                    pagination: '.swiper-pagination',
                                    nextButton: '.swiper-button-next',
                                    prevButton: '.swiper-button-prev',
                                    slidesPerView: 1,
                                    paginationClickable: true,
                                    spaceBetween: 30,
                                    loop: true
                                });
                            </script>
                        </apex:outputPanel>
                    </div>
                </apex:outputPanel>
                <apex:actionFunction name="showModal" rerender="modPanel" status="renderingStatus" />
            </apex:form>
        </apex:define>
    </apex:composition>
    <!-- remote object for fetching account records -->
    <apex:remoteObjects jsNamespace="remote_account">
        <apex:remoteObjectModel name="Account" fields="Id,Name" />
    </apex:remoteObjects>
    <apex:remoteObjects jsNamespace="remote_user">
        <apex:remoteObjectModel name="User" fields="Id,Name" />
    </apex:remoteObjects>
    <script>
        var _waterfallchart = null;
        var _oppTable = null;
        var _comTable = null;

        function init() {
            var obj = jQuery.parseJSON('{!JSENCODE(chart_Data_Json)}');
            createChart(obj);
        }

        function openSliderViewModal() {
            $("#sliderModal").modal('show');
            showModal();
        }

        function hideTable() {
            $(".table-content").addClass('hidden');
        }

        var Color = {
            gray_base: '#000',
            gray_darker: '#262626',
            gray_dark: '#2d2d2d',
            gray: '#383838',
            gray_light: '#444444',
            gray_lighter: '#5c5c5c',

            brand_primary: '#2c97de',
            brand_success: '#84b547',
            brand_info: '#2dbda8',
            brand_warning: '#e76d3b',
            brand_danger: '#cc3e4a',

            brand_cerulean: '#00A3E3',
            brand_curious_blue: '#2986c7',
            brand_endaveour: '#0055a3',

            brand_minsk: '#362d88',
            brand_eminence: '#742787',
            brand_violet_eggplant: '#aa1985',

            brand_mint_green: '#72ff96',
            brand_aquamarine: '#62ffe0',
            brand_malibu: '#6abfff',

            brand_dodger_blue: '#5e6cff',
            brand_heliotrope: '#a26bff',
            brand_perfume: '#f57ffe',
        };

        Highcharts.theme = {
            //Używane kolory wykresów
            colors: [Color.brand_perfume, "#bb4488", "#4BABD3", "#6CC080", "#E6645C", "#ff0066", "#eeaaee",
                "#55BF3B", "#DF5353", "#3185AA", "#aaeeee"
            ],
            chart: {
                backgroundColor: {
                    linearGradient: {
                        x1: 0,
                        y1: 0,
                        x2: 1,
                        y2: 1
                    },
                    stops: [
                        [0, '#ffffff'],
                        [1, '#ffffff']
                    ]
                },
                style: {
                    fontFamily: "'Open Sans', sans-serif"
                },
                plotBorderColor: '#606063'
            },
            title: {
                style: {
                    color: '#333333',
                    textTransform: 'uppercase',
                    fontSize: '20px'
                }
            },
            subtitle: {
                style: {
                    color: '#333',
                    textTransform: 'uppercase'
                }
            },
            xAxis: {
                gridLineWidth: 1,
                gridLineColor: '#dddddd',
                labels: {
                    style: {
                        color: '#333333'
                    }
                },
                lineColor: '#dddddd',
                minorGridLineColor: '#505053',
                tickColor: '#dddddd',
                title: {
                    style: {
                        color: '#A0A0A3'

                    }
                }
            },
            yAxis: {
                gridLineColor: '#dddddd',
                labels: {
                    style: {
                        color: '#333333'
                    }
                },
                lineColor: '#dddddd',
                minorGridLineColor: '#505053',
                tickColor: '#dddddd',
                tickWidth: 1,
                title: {
                    style: {
                        color: '#A0A0A3'
                    }
                }
            },
            tooltip: {
                backgroundColor: 'rgba(0, 0, 0, 0.85)',
                style: {
                    color: '#F0F0F0'
                }
            },
            plotOptions: {
                series: {
                    borderColor: 'rgba(0,0,0,0)',
                    dataLabels: {

                    },
                    marker: {
                        lineColor: '#333'
                    }
                },
                boxplot: {
                    fillColor: '#505053'
                },
                candlestick: {
                    lineColor: 'white'
                },
                errorbar: {
                    color: 'white'
                }
            },
            legend: {
                itemStyle: {
                    color: '#333333'
                },
                itemHoverStyle: {
                    color: '#555555'
                },
                itemHiddenStyle: {
                    color: '#606063'
                }
            },
            credits: {
                style: {
                    color: '#666'
                }
            },
            labels: {
                style: {
                    color: '#dddddd'
                }
            },

            drilldown: {
                activeAxisLabelStyle: {
                    color: '#F0F0F3'
                },
                activeDataLabelStyle: {
                    color: '#F0F0F3'
                }
            },

            navigation: {
                buttonOptions: {
                    symbolStroke: '#ccc',
                    theme: {
                        fill: '#ffffff'
                    }
                }
            },

            // scroll charts
            rangeSelector: {
                buttonTheme: {
                    fill: '#505053',
                    stroke: '#000000',
                    style: {
                        color: '#CCC'
                    },
                    states: {
                        hover: {
                            fill: '#dddddd',
                            stroke: '#000000',
                            style: {
                                color: 'white'
                            }
                        },
                        select: {
                            fill: '#000003',
                            stroke: '#000000',
                            style: {
                                color: 'white'
                            }
                        }
                    }
                },
                inputBoxBorderColor: '#505053',
                inputStyle: {
                    backgroundColor: '#333',
                    color: 'silver'
                },
                labelStyle: {
                    color: 'silver'
                }
            },

            navigator: {
                handles: {
                    backgroundColor: '#666',
                    borderColor: '#AAA'
                },
                outlineColor: '#CCC',
                maskFill: 'rgba(255,255,255,0.1)',
                series: {
                    color: '#3185AA',
                    lineColor: '#A6C7ED'
                },
                xAxis: {
                    gridLineColor: '#505053'
                }
            },

            scrollbar: {
                barBackgroundColor: '#808083',
                barBorderColor: '#808083',
                buttonArrowColor: '#CCC',
                buttonBackgroundColor: '#606063',
                buttonBorderColor: '#606063',
                rifleColor: '#FFF',
                trackBackgroundColor: '#404043',
                trackBorderColor: '#404043'
            },

            // special colors for some of the
            legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',
            background2: '#505053',
            dataLabelsColor: '#B0B0B3',
            textColor: '#C0C0C0',
            contrastTextColor: '#F0F0F3',
            maskColor: 'rgba(255,255,255,0.3)'
        };
        // Apply the theme
        Highcharts.setOptions(Highcharts.theme);



        function createChart(data) {
            //  var table1 = $('#comapareTable').DataTable();
            var selected = null;
            $('#waterfallchart').highcharts({
                chart: {
                    type: 'waterfall',
                    height: 500,
                    marginTop: 50,
                    spacingTop: 0,
                    spacingBottom: 40,
                    spacingLeft: 0,
                    spacingRight: 5
                },

                xAxis: {
                    type: 'category'
                },

                title: {
                    text: ''
                },
                plotOptions: {
                    series: {
                        cursor: 'pointer',
                        point: {
                            events: {
                                click: function() {


                                    $('#details').html('Details ' + this.name);


                                    var accValue = $(".account-search-field-hidden").val();
                                    var usrValue = $(".user-search-field-hidden").val();
                                    var myMap = {};
                                    //this.name,startDate_Filter,accValue,usrValue,JSON.stringify(myMap),function(result,event){
                                    $('.filterField').each(function() {
                                        var keyVal = $(this).parent().parent().find('label').text();
                                        var objVal = $(this).val();
                                        myMap[keyVal] = objVal;
                                    });
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.SMLWaterFallController.testOppTable}',
                                        this.name, startDate_Filter, accValue, usrValue, JSON.stringify(myMap),
                                        function(result, event) {

                                            if (result == 'DemoMode') {
                                                $('#demoMessage').html('<strong>Note:</strong> Related opportunities view is disabled in demo mode.  Contact info@springml.com to enable this view.');
                                                $(".content").removeClass('hidden');
                                            } else {
                                                var obj = JSON.parse(result);
                                                var table = $('#oppDataTable').DataTable();
                                                table.destroy();
                                                var opp_table = $("#recordTableContainer tbody");
                                                opp_table.empty();

                                                var row;
                                                $.each(obj, function(index, value) {
                                                     console.log(value);
                                                    row = $("<tr></tr>");
                                                    row.append("<td><a href=\"/" + value.oppId + "\" target=\"_blank\">" + value.oppName + "</a></td>");
                                                    row.append("<td><a href=\"/" + value.ownerId + "\" target=\"_blank\">" + value.ownerName + "</a></td>");
                                                    
                                                    if (value.prevamount != null) {
                                                        row.append("<td>" + value.prevamount + "</td>");
                                                    } else {
                                                        row.append("<td></td>");
                                                    }
                                                    if (value.amount != null) {
                                                        row.append("<td>" + value.amount + "</td>");
                                                    } else {
                                                        row.append("<td></td>");
                                                    }
                                                    row.append("<td>" + value.stage + "</td>");
                                                    row.append("<td>" + value.closeDate + "</td>");
                                                    opp_table.append(row);
                                                });
                                                _oppTable = $("#oppDataTable").DataTable();

                                                $(".table-content").removeClass('hidden');
                                            }




                                        }, {
                                            escape: false
                                        });
                                        console.log(myMap);
                                        if($('.selectCompare option:selected').text() != null){
                                     $('#detailsMetric').html('Metrics By ' + $('.selectCompare option:selected').text());
                                     }
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.SMLWaterFallController.getCompareTable}',
                                        this.name, startDate_Filter, accValue, usrValue, JSON.stringify(myMap),
                                        function(result, event) {

                                            var obj = JSON.parse(result);
                                            var tablecom = $('#compareTable').DataTable();
                                            tablecom.destroy();
                                            var com_table = $("#compareTableContainer tbody");
                                            com_table.empty();

                                            var row;
                                            $.each(obj, function(index, value) {
                                                // console.log(value);
                                                row = $("<tr></tr>");
                                                row.append("<td>" + value.name + "</td>");
                                                row.append("<td>" + value.Bucket + "</td>");
                                                row.append("<td>" + value.Amount + "</td>");
                                                row.append("<td>" + value.Count + "</td>");
                                                com_table.append(row);
                                            });
                                            _comTable = $("#compareTable").DataTable();

                                            $(".table-content1").removeClass('hidden');
                                            console.log(obj);



                                            //start
                                            Highcharts.setOptions({
                                                colors: ['#FFFF7C', '#009966', '#4BABD3', '#6CC080', '#FDEC6D', '#44A9A8', '#FF7474', '#AAFFFA', '#BB4490', '#7CB5EC', '#434348', '#FFFF7C', '#009966', '#663399']
                                            });
                                            Highcharts.chart('pieChart', {
                                                chart: {
                                                    plotBackgroundColor: null,
                                                    plotBorderWidth: null,
                                                    plotShadow: false,
                                                    type: 'pie'
                                                },
                                                title: {
                                                    text: ''
                                                },
                                                tooltip: {
                                                    pointFormat: '{series.name}: {point.percentage:.1f}%'
                                                },
                                                plotOptions: {
                                                    pie: {
                                                        allowPointSelect: true,
                                                        cursor: 'pointer',
                                                        dataLabels: {
                                                            enabled: true,
                                                            format: '{point.name}: {point.percentage:.1f} %',
                                                        }
                                                    }
                                                },
                                                series: [{
                                                    name: 'Brands',
                                                    colorByPoint: true,
                                                    data: obj
                                                }]
                                            });



                                            //end
                                        }, {
                                            escape: false
                                        });
                                }

                            }
                        }
                    }
                },

                series: [{

                    upColor: Highcharts.getOptions().colors[2],
                    color: Highcharts.getOptions().colors[3],
                    type: 'waterfall',
                    name: 'Total Value',
                    data: data,

                    dataLabels: {
                        style: {
                            color: '#FFFFFF',
                            fontWeight: 'bold'
                        }
                    },
                    pointPadding: 0
                }]
            });

            _waterfallchart = $('#waterfallchart').highcharts();

        }
    </script>
</apex:page>