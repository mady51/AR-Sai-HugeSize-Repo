<apex:page docType="html-5.0" standardController="VisitOps__Visit__c" tabStyle="VisitOps__Visit__c" extensions="VisitOps.VisitScreenCtrl" id="visitScreenPageId" action="{!processPageLoad}" showHeader="true" sidebar="{!$Label.visitops__sidebar}" cache="false">
<!-- ASSUMPTIONS / CONSTRAINTS / NOTES -->
<!-- For the custom datepicker for ArrivalDateTimeLocationTZ__c, DepartureDateTimeLocationTZ__c fields to work, set API Version of this page to 29.0 or less.
    https://success.salesforce.com/issues_view?id=a1p300000008XU5AAM
    <apex:selectList is not supported in SF1. hence load the selectOptions using a custom component. However on save send the selected values of picklist manually to backend
 -->       
<html> 

<head>

<meta name="viewport" content="width=device-width, initial-scale=1"/>
<meta http-equiv="cache-control" content="no-store"/>
<meta http-equiv="expires" content="0"/>
<meta http-equiv="pragma" content="no-cache"/>
  
  <apex:stylesheet value="{!URLFOR($Resource.VisitOps__VMSResources, 'css/bootstrapForSFHeaderSidebar.css')}"/> 
  <apex:includeScript value="{!URLFOR($Resource.VisitOps__VMSResources, 'js/jquery-1.11.1.min.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.VisitOps__jqueryUI, 'jquery-ui-1.11.4.custom/jquery-ui.min.js')}"/>
  <!--<apex:stylesheet value="{!URLFOR($Resource.jqueryUI, 'jquery-ui-1.11.4.custom/jquery-ui.min.css')}"/> -->
  
  <apex:includeScript value="{!URLFOR($Resource.VisitOps__VMSResources, 'js/bootstrapJSForSFHeaderSidebar.js')}"/>
   <style type="text/css">
             <!-- Style Added for Lightning Experience -->
                body {  
                        font-size:75% !important;
                    }
        </style>      
    
    
  <script>
  
    //Store the Company Id which can be used while saving objective for account added to visit 
    var companyId = '';
    var visitOppId = '';
    var attendeeId = '';
    var attendeeIdForLogistics = '';
    var oldReasonForCancellation = '{!oldReasonForCancellation}';
    var oldCancellationComments = '{!oldCancellationComments}';
    
    var oldArrivalDateTime,oldDepartureDateTime,oldNoOfAttendees;
    
    var calendarTab;
    window.name = 'visitTab';
    
    //Variables to populate account id and name for Account field in Create New Contact popup(if invoked from Add Contacts button in Companies grid)
    var accountNameForNewContact = '';
    var accountIdForNewContact = '';
  
  $(document).ready(function(){
      
    handleOnLoadforNeworEdit();
  });
  
  
  
    /* (function () {
        $(window).resize(function () {
            setTimeout(function(){
                resizeIframeHeight();
                $(".fc-button-prev").trigger('click');
                $(".fc-button-next").trigger('click');
            },300);
        });
    }()); */
  
  
  function hideButtonsandSections(){
    //hiding the previous visits and visit logistics in mobile app
    if((typeof sforce != 'undefined') && (sforce != null) && (!!sforce.one)){
        $(".hideRecentVisits").remove();
        $("#visitLogisticsPanel").remove();
    }else{
    }
  }
  
  function handleOnLoadforNeworEdit(){
    $(".disableField").attr("disabled",true);
    $(".lookupCustomCss").each(function(){
       if($(this).find("select").length!=0){
           $(this).css({'white-space':'nowrap','padding-left':'0px','border':'none'});
       }
    });
       /* $('#arrivalTimeLocTZID_date').attr('readonly',true)
       .datepicker("destroy");*/
      //load calendar on page load
    /*if({!allowNextStep} && {!!isNewVisit}){
        loadCalendarinIframe(false);
    }else{
        //$("#visitcalendar").hide();
        loadCalendarinIframe(false);
    }*/
    try{
        //Timezone Changes
        oldArrivalDateTime = $("[id$=arrDateLocTZID]").val();
        oldDepartureDateTime = $("[id$=depDateLocTZID]").val();
        oldNoOfAttendees = $("[id$=totalNoOfAttendeesId]").val();
    }catch(err){
        //console.log('Exception--'+err.message);
    }
    
    hideButtonsandSections();
    
    // iOS check...ugly but necessary
        if( navigator.userAgent.match(/iPad/i) ) {
            //$("[id$='initialViewPanelId']").find(".panel-body").css({height:"850px"});            
            //$('.bs .modal').on('show.bs.modal', function() {
                var bodyWidth = $("body").width();
                if(bodyWidth<900){
                    $('body').css({
                        position: 'fixed',
                        width: '95%',
                    });
                }else if(bodyWidth>=900){
                    $('body').css({
                        position: 'fixed',
                        width: '96%',                     
                    });
                }
                window.onkeydown=function(){ // Workaround for known issue with SFDC(https://success.salesforce.com/issues_view?id=a1p30000000T5l1AAC)
                    window.focus();
                }
            //});   
        }else if( navigator.userAgent.match(/iPhone|iPod/i) ) {
            $('body').css({
                width: '91%',
                position: 'fixed',
            });
            //$("[id$='initialViewPanelId']").find(".panel-body").css({height:"850px"});
            $(".waitingSearchDiv").find(".waitingHolder").css({top:"25%"});
            /*$('.bs .modal').on('show.bs.modal', function() {
                alert("show");
                $('body').css({
                    position: 'fixed',                    
                });
            });
            $('.bs .modal').on('hide.bs.modal', function() {
                alert("hide");
                $('body').css({
                    position: 'static',                    
                });
            });*/
            window.onkeydown=function(){ // Workaround for known issue with SFDC(https://success.salesforce.com/issues_view?id=a1p30000000T5l1AAC)
                window.focus();
            }
        }
        // iOS check...ugly but necessary
    
    
    $(".bs .panel-heading h4").click(function () {
        $('.plus',this).html('<img src="{!URLFOR($Resource.VMSResources, "images/SideArrow.png")}" data-toggle="collapse" data-target="'+$(this).find("img").data("target")+'"/>');
        if (!$(this).parent().next().is(":visible")) {
            $('.plus',this).html('<img src="{!URLFOR($Resource.VMSResources, "images/downArrow.png")}" data-toggle="collapse" data-target="'+$(this).find("img").data("target")+'"/>');
            //alert("***"+$(this).find("a").text()+"****");
            if($(this).find("a").text() == "Visit Calendar"){
                loadCalendarinIframe(false);
            }
        }
    });
  }
  
  //Function to autohide keyboard on modal opens.
  function hideIOSKeyboard(){
    if(navigator.userAgent.match(/iPhone|iPod|iPad/i)){
        window.focus();
        var input = $('input').not(':input[type=date], :input[type=time]');
        input.blur();
    }
  }
  
  //Add accounts popup
  function addAccountsPopupJS(){
      var noOfAttndees = $("[id$=totalNoOfAttendeesId]").val();
        if(noOfAttndees!='' && !((!isNaN(parseFloat(noOfAttndees))) && isFinite(noOfAttndees))){
            alert('Please Enter a Valid Number of Attendees');
            return false;
        }
    else{
        selectedAccountsArray = new Array();
        hideIOSKeyboard();
      $("#addAccountsModal").modal();
      $("input[id$='accSearchTextBoxId']").val('');
      resetCheckboxById('masterChkbx_compnsGrd');
      //alert(document.getElementById('visitScreenPageId:visitFormId:masterChkbx_compnsGrd').checked);
      document.getElementById('visitScreenPageId:visitFormId:accSearchTextBoxId').value="";
      gridAccArray = new Array();
      populateAccountsGridJS();
      //alert(document.getElementById('visitScreenPageId:visitFormId:masterChkbx_compnsGrd').checked);
    }
  }
  
  //Create new account popup js
  function createAccountBtnPopupJS(){
    $('#addAccountsModal').modal('hide');
    hideIOSKeyboard();
    $('#createNewAccountModal').modal();
    
     //Focus the 1st element in create form
     $($("#createNewAccountModal").find('input:text')[0]).attr("autofocus","autofocus")
     
     //Clear contents of the form each time its opened
     $('#createNewAccountModal').find('input:text, textarea').val('');
     
     //Defaulting to 1st option -> --None--
     $('#createNewAccountModal select option:first-child').attr("selected", "selected");
     
     //$('img.lookupIcon').closest('a').removeClass('reqField');
     
     //To add required attribute to mandatory lookup text field. Eg: OwnerId
     $('.reqField').attr('required','required');
     
     //To remove the previous page messages
     $("[id$=createNewAccPgMsgsId] .message").remove();
     
     //to avoid html validastions
     $('#createNewAccountModal').find("input[required='required']").each(function(){
         $(this).removeAttr('required');
     });
  }
  
  function createCompanyBtnPopupJS(){
    //$('#addAccountsModal').modal('hide');
    hideIOSKeyboard();
    $('#createNewCompanyModal').modal();
    
     //Focus the 1st element in create form
     $($("#createNewCompanyModal").find('input:text')[0]).attr("autofocus","autofocus")
     
     //Clear contents of the form each time its opened
     $('#createNewCompanyModal').find('input:text, textarea').val('');
     
     //Defaulting to 1st option -> --None--
     $('#createNewCompanyModal select option:first-child').attr("selected", "selected");
     
     $('img.lookupIcon').closest('a').removeClass('reqField');
     
     //To add required attribute to mandatory lookup text field. Eg: OwnerId
     $('.reqField').attr('required','required');
     
     //To remove the previous page messages
     $("[id$=createNewCompPgMsgsId] .message").remove();
     
     //to avoid html validastions
     $('#createNewCompanyModal').find("input[required='required']").each(function(){
         $(this).removeAttr('required');
     });
  }
  
  //Add other attendees popup js
  function attendeesNtAssociatdBtnPopupJS(){
    /*to clear any previous values in the form - start*/
    clearAlltheInputFieldsInAddAttendees();
    /*to clear any previous values in the form - end*/
    hideIOSKeyboard();
    $('#addOtherAttendeesModal').modal();
    
    //Focus the 1st element in create form
    $($("#addOtherAttendeesModal").find("input[type='text']")[0]).attr("autofocus","autofocus");
    
    //To remove the previous page messages
     $("[id$=newAdhocUserPgMsgsId] .message").remove();
     
     //to avoid html validastions
     $('#addOtherAttendeesModal').find("input[required='required']").each(function(){
         $(this).removeAttr('required');
     });
  }
  
  //Create contact button popup js
  function createContactBtnPopupJS(){
     $('#addContactsModal').modal('hide');
     hideIOSKeyboard();
     $('#createNewContactModal').modal();
     
     //Focus the 1st element in create form
     $($("#createNewContactModal").find('input:text')[0]).attr("autofocus","autofocus");
     
     //$('#fadeOutDiv').show();
     
     //Clear contents of the form each time its opened
     $('#createNewContactModal').find('input:text, textarea').val('');
     
     //Populate AccountName if account exists
     //console.log('accountNameForNewContact--'+accountNameForNewContact);
     //console.log('accountIdForNewContact--'+accountIdForNewContact);
     //$("input[id$='accountNameForNewContactElementId']").val(accountNameForNewContact);
     //$("input[id$='accountIdForNewContactElementId']").val(accountIdForNewContact);
     $("input[id$='accountIdFieldForNewContactElementId_lkid']").val(accountIdForNewContact);
     $("input[id$='accountIdFieldForNewContactElementId']").val(accountNameForNewContact);
     
     //$("input[id$='accountIdFieldForNewContactElementId_lkid']").val(accountIdForNewContact);
     //$("input[id$='accountIdFieldForNewContactElementId']").val(accountNameForNewContact);
     
     //Defaulting to 1st option -> --None--
     $('#createNewContactModal select option:first-child').attr("selected", "selected");
     
     $('img.lookupIcon').closest('a').removeClass('reqField');
     
     //To add required attribute to mandatory lookup text field. Eg: OwnerId
     $('.reqField').attr('required','required');
     
     //To remove the previous page messages
     $("[id$=createNewContactPgMsgsId] .message").remove();
     
     //to avoid html validastions
     $('#createNewContactModal').find("input[required='required']").each(function(){
         $(this).removeAttr('required');
     });
  }
  
  //to load the calendar
  function loadCalendar(checkAvailability){
      var locName = $("[id$=locID]").val();
      var noOfAttnd = $("[id$=totalNoOfAttendeesId]").val();
      var arrDateLocTZ = $("[id$=arrDateID]").val();
      var depDateLocTZ = $("[id$=depDateID]").val();
      if(checkAvailability){
          //console.log(noOfAttnd +'--' +arrDateLocTZ+'--'+depDateLocTZ);
        validateCheckAvailability(noOfAttnd);
      }
  }
  
  function loadCalendarinIframe(hasErrors){
      if(hasErrors==false || hasErrors=='false'){
          var locName=$("[id$=locID]").val();
          /*if(allowMultiRoom==true){
              locName='';
          }else{
              locName = $("[id$=locID]").val();
          }*/
          //var locName = $("[id$=locID]").val();
          var noOfAttnd = $("[id$=totalNoOfAttendeesId]").val();
          var arrDateLocTZ = $("[id$=arrDateID]").val();
          var depDateLocTZ = $("[id$=depDateID]").val();
          if(!((!isNaN(parseFloat(noOfAttnd))) && isFinite(noOfAttnd))){
              noOfAttnd = '';
          }
          if((typeof sforce != 'undefined') && (sforce != null) && (!!sforce.one)){
              $("#theIframe").attr("src","/apex/CalendarPage?LocationName="+locName+"&NumberOfAttendee="+noOfAttnd+"&arrivaldate="+arrDateLocTZ+"&depDate="+depDateLocTZ+"&source=Visit&isdtp=p1");    
          }else{
              $("#theIframe").attr("src","/apex/CalendarPage?LocationName="+locName+"&NumberOfAttendee="+noOfAttnd+"&arrivaldate="+arrDateLocTZ+"&depDate="+depDateLocTZ+"&source=Visit");
          }
          $("#theIframe").load(function() { //Process iframe after its loaded.
                iframeContents = $("#theIframe").contents();
                resizeIframeHeight();
                iframeContents.find(".calendarViewDiv").css({"margin-left":"0px"});
          });
      }else{
        if($("#collapseVisitcalendar").is(":visible")){
            $("#collapseVisitcalendar").collapse('hide');
            $("#visitcalendar").find(".plus").html('<img src="{!URLFOR($Resource.VMSResources, "images/SideArrow.png")}" data-toggle="collapse" data-target="#collapseVisitcalendar"/>');
        }   
      }
  }
  
  function resizeIframeHeight(){
        var iFrameID = document.getElementById('theIframe');
        if(iFrameID) {
              iFrameID.height = "";
              iFrameID.height = iFrameID.contentWindow.document.body.scrollHeight + "px";
        }
  }
  
    /* clear previous adhoc attendee - start */
    function clearAlltheInputFieldsInAddAttendees(){
        $("[id$=newAdhocUserPgMsgsId] > span").remove();
        $("#addOtherAttendeesModal").find("input[type='text'],select,textarea,input[type='checkbox']").each(function(){
            if($(this).type=='checkbox'){
                $(this).prop('checked', false);
            }else{
                $(this).val('');
            }
        });
    }
    
    function clearInputs(){
        if($("[id$='newAdhocUserPgMsgsId']").children().size() == 0){
            clearAlltheInputFieldsInAddAttendees();
        }
    }
    
    //Confirm if deleting selected companies is fine 
    function handleDeleteCompaniesRequest(){
        var infoMessage = 'Deleting accounts associated to this Visit will automatically delete its related Opportunities and Contacts associated to this Visit. Do you want to continue ?';
        //console.log('opp allowed?--'+{!AND(isOpportunityAvailable,isOpportunityAccessible)});
        /*
        if({!AND(isOpportunityAvailable,isOpportunityAccessible)}){
            infoMessage = 'Deleting accounts associated to this Visit will automatically delete its related Opportunities and Contacts associated to this Visit. Do you want to continue ?'
        }else{
            infoMessage = 'Deleting accounts associated to this Visit will automatically delete its related Contacts associated to this Visit. Do you want to continue ?'
        }
        */
        if(confirm(infoMessage)){
            
            sendGridJSONAcc(JSON.stringify(gridAccArray), 'Delete', 'companyGridObj');
            gridAccArray = new Array();
            
            //document.getElementById('visitScreenPageId:visitFormId:masterChkbx_compnsGrd').checked = false;
            
            //deleteCompaniesJS();
        }
    }
    
    function handleDeleteOppsRequest(){
        sendGridJSONOpp(JSON.stringify(gridOppArray), 'Delete', 'visitOppGridObj');
        gridOppArray = new Array();
    }
    
    function handleDeleteContactsRequest(){
        sendGridJSONCon(JSON.stringify(gridConArray), 'Delete', 'attendeeGridObj')
        gridConArray = new Array();
    }
    
    function doCheckboxChangeCompaniesGrid(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        
        if(cb.checked==true){
            aSelectItemCompaniesGrid(itemId);
        }
        else{
            aDeselectItemCompaniesGrid(itemId);
        }
        
    }
    
    function handleMasterCheckboxChange(isMasterCheckboxChecked, className, functionName){
        //console.log("inside handleMasterCheckboxChange--isMasterCheckboxChecked "+isMasterCheckboxChecked);
        if(isMasterCheckboxChecked != null){
            var wrprCkBxs=document.getElementsByClassName(className);
            //console.log("Total count-- "+wrprCkBxs.length);
            
            var recordsSelectionJsonString = '';
            var recordsSelectionJsonArray = [];
            
            if(wrprCkBxs != null){
                for(var ck=0; ck<wrprCkBxs.length; ck++){
                  wrprCkBxs[ck].checked=isMasterCheckboxChecked;
                  recordsSelectionJsonArray.push({id: wrprCkBxs[ck].getAttribute("data-id") , isSelected: isMasterCheckboxChecked});
                }
            }
            if(className == 'wrpChkBx_cmpns')
            {
                for(var ck=0; ck<wrprCkBxs.length; ck++){
                  if(isMasterCheckboxChecked == true)
                    handleGridCheckbox('acc', wrprCkBxs[ck].getAttribute("data-id"), 'true');
                  else
                    handleGridCheckbox('acc', wrprCkBxs[ck].getAttribute("data-id"), 'false');
                }
            }
            if(className == 'wrpChkBx_vopps')
            {
                for(var ck=0; ck<wrprCkBxs.length; ck++){
                  handleGridCheckbox('opp', wrprCkBxs[ck].getAttribute("data-id"), 'true');
                }
            }
            if(className == 'wrpChkBx_atnds')
            {
                for(var ck=0; ck<wrprCkBxs.length; ck++){
                  handleGridCheckbox('con', wrprCkBxs[ck].getAttribute("data-id"), 'true');
                }
            }
            //console.log('recordsSelectionJsonArray--'+recordsSelectionJsonArray);
            if(recordsSelectionJsonArray.length > 0){
                recordsSelectionJsonString = JSON.stringify(recordsSelectionJsonArray); 
                //console.log('recordsSelectionJsonString--'+recordsSelectionJsonString);
                
                //Dynamically invoke a JS function - Call action function to store the change in selection
                //window[""+functionName](recordsSelectionJsonString);
            }
        }
    }
    /*handle Grid checkboxes*/
    var gridAccArray = new Array();
    var gridConArray = new Array();
    var gridOppArray = new Array();
    function handleGridCheckbox(gridName, recordId, ignoreExistent)
    {
        if(gridName == 'acc')
        {
            var indx = gridAccArray.indexOf(recordId);
    
            if(indx == -1)
            {
                gridAccArray.push(recordId);
            }
            else
            {
                if(ignoreExistent == 'false')
                    gridAccArray.splice(indx,1);
            }
        }
        if(gridName == 'opp')
        {
           var indx = gridOppArray.indexOf(recordId);
    
            if(indx == -1)
            {
                gridOppArray.push(recordId);
            }
            else
            {
                if(ignoreExistent == 'false')
                    gridOppArray.splice(indx,1);
            }
        }
        if(gridName == 'con')
        {
            var indx = gridConArray.indexOf(recordId);
    
            if(indx == -1)
            {
                gridConArray.push(recordId);
            }
            else
            {
                if(ignoreExistent == 'false')
                    gridConArray.splice(indx,1);
            }
        }
    }
    /*handle Account checkboxes*/
    var selectedAccountsArray = new Array();
    var DeselectedAccountsArray = new Array();
    function handleAccountCheckbox(isSelected, accountId)
    {
        var indx = selectedAccountsArray.indexOf(accountId);
        var Deindx = DeselectedAccountsArray.indexOf(accountId);
        if(indx == -1)
        {
            selectedAccountsArray.push(accountId);
            DeselectedAccountsArray.splice(Deindx,1);
        }
        else
        {
            selectedAccountsArray.splice(indx,1);
            DeselectedAccountsArray.push(accountId);
        }
        //console.log('selectedAccountsArray'+selectedAccountsArray);
        //console.log('DeselectedAccountsArray'+DeselectedAccountsArray);
        //sendJSON(accountId);
        //printJSON(JSON.stringify(selectedAccountsArray));
    }
    /*handle Opportunities checkboxes*/
    var selectedOppArray = new Array();
    function handleOppCheckbox(isSelected, oppId)
    {
        
        var indx = selectedOppArray.indexOf(oppId);
        
        if(indx == -1)
        {
            selectedOppArray.push(oppId);
        }
        else
        {
            selectedOppArray.splice(indx,1);
        }
    }
    /*handle Contacts checkboxes*/
    var selectedConArray = new Array();
    function handleConCheckbox(isSelected, conId)
    {
        var indx = selectedConArray.indexOf(conId);
        
        if(indx == -1)
        {
            selectedConArray.push(conId);
        }
        else
        {
            selectedConArray.splice(indx,1);
        }
    }
    /*handle Users checkboxes*/
    var selectedUserArray = new Array();
    function handleUserCheckbox(isSelected, UserId)
    {
        var indx = selectedUserArray.indexOf(UserId);
        
        if(indx == -1)
        {
            selectedUserArray.push(UserId);
        }
        else
        {
            selectedUserArray.splice(indx,1);
        }
    }
    function doCheckboxChangeSearchAccs(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        
        /*if(cb.checked==true){
            aSelectItemSearchAccs(itemId);
        }
        else{
            aDeselectItemSearchAccs(itemId);
        }*/
        
    }
    
    function handleSearchAccountOptionsChange(){
        var alreadySelectedAccountsCount = $("[id$='selectedRecordCountForAccsId']").text();
        //console.log('alreadySelectedAccountsCount--'+alreadySelectedAccountsCount);
    
        if(alreadySelectedAccountsCount > 0){
            if(confirm('You have selected some accounts that have not been added to the visit yet. Do you want to add the selected accounts to the visit?')){
                addAccountsToVisitWithSelectionChangeJS();
            }else{
                populateAccountsGridJS();
            }
        }else{
            populateAccountsGridJS();
        }
    }
    
    function handlePopupClose(ele,isClosePopup, popupId){
        //console.log('ele--'+ele+'--isClosePopup--'+isClosePopup+'--popupId--'+popupId);
        if(isClosePopup == true || isClosePopup == 'true'){
            //console.log('id--'+$(ele).closest( '.popupBox' ).attr('id'));
            if(popupId != null && popupId != ''){
                $('#'+popupId).modal('hide');
                if(navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                    $(window).focus();
                    var input = $('input');
                    input.blur();
                }
                hideButtonsandSections();
            }
        }
    }
    
    function handlePopupCloseForSFErrors(pgMsgsId, popupId){
                
        //console.log('---pgMsgsId:'+pgMsgsId + '--popupId--'+popupId);
        //Close the popup only if the page messages element in that popup is empty (ie has no messages(errors here))
        if($("[id$='"+pgMsgsId+"']").children().size() == 0){
            if(navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                $(window).focus();
                var input = $('input');
                input.blur();
            }
            $("#"+popupId).modal('hide');
            hideButtonsandSections();
        }
    }
    
    function handleAddObjectiveForAccount(compId,obj){
        hideIOSKeyboard();
        $('#addObjectivesAccountDetailsModal').modal();
        companyId = compId;
        //console.log('obj--'+obj);
        var objTextElement = $('[id$=accObjTxtbxId]');
        if(objTextElement != null){
            objTextElement.val(obj);
        }
    }
    
    function handleAddOppsBtn(accId,isShowAllOppsPopup){
        selectedOppArray = new Array();
        hideIOSKeyboard();
        $('#addOpportunitiesModal').modal();
        
        //Clear if any prev search value exists in the search text box
        $("input[id$='oppSearchTextBoxId']").val('');
        
        /* OPP CHANGE - DESCOPED
        $('#createNewOppPopup').hide();
        */
        
        //$('#fadeOutDiv').show();
        
        //console.log('add opportunities btn clicked on acc--'+accId);
        //populateSearchContactsGridJS('contact',accId);
        gridOppArray = new Array();
        populateSearchOppsGridJS(accId,isShowAllOppsPopup);
    }
    
    function handleAddContactsBtn(accId,isShowAllContactsPopup){
        //$('#ContactOpportPopup').show();
        selectedConArray = new Array();
        hideIOSKeyboard();
        $('#addContactsModal').modal();
        
        //Clear if any prev search value exists in the search text box
        $("input[id$='contactSearchTextBoxId']").val('');
        
        gridConArray = new Array();
        //$('#createNewContactPopup').hide();
        
        //$('#fadeOutDiv').show();
        
        //console.log('add contacts btn clicked on acc--isShowAllContactsPopup--'+isShowAllContactsPopup);
        //populateSearchContactsGridJS('contact',accId);
        populateSearchContactsGridJS(accId,isShowAllContactsPopup);
    }
    
    function doCheckboxChange(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        if(cb.checked==true){
            aSelectItem(itemId);
        }
        else{
            aDeselectItem(itemId);
        }
        
    }
    
    function doCheckboxChangeSearchOpps(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        if(cb.checked==true){
            aSelectItemSearchOpp(itemId);
        }
        else{
            aDeselectItemSearchOpp(itemId);
        }
        
    }
    
    function doCheckboxChangeVisitOppsGrid(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        
        if(cb.checked==true){
            aSelectItemVisitOppsGrid(itemId);
        }
        else{
            aDeselectItemVisitOppsGrid(itemId);
        }
        
    }
    
    function resetCheckboxById(eleId){
        //For SF ids
        $("[id$='"+eleId+"']").removeAttr('checked');
    }
    
    function handleInit(){
        handleOnLoadforNeworEdit();
        //console.log('table--'+$(".popupTable").attr("class"));
        
        //Remove requied red indicator for lookup icons
        $('img.lookupIcon').closest('a').removeClass('reqField');
        
        //To add required attribute to mandatory lookup text field. Eg: OwnerId
        $('.reqField').attr('required','required');
        
        
        //Remove requied attribute on all form elements -> to ensure consistency -> browser doesnt validate for required condition for disabled fields(Eg:room)
        //Avoid default Client Side(Browser) Validation -> To ensure that required Fields of Section A are not validated by browser when Section B is submitted using actionRegion 
        $( ":input" ).removeAttr('required');
        $( ":input" ).removeClass('reqField');
        $( ":input" ).removeClass('field');           
        
        /*         
        //Assign help text as tooltip to Survey checkboxes
        $("input[data-id$='Pre_Visit_Survey_Needed__c']").attr('title','{!$ObjectType.Visit__c.fields.Pre_Visit_Survey_Needed__c.inlineHelpText}');
        $("input[data-id$='Post_Visit_Survey_Needed__c']").attr('title','{!$ObjectType.Visit__c.fields.Post_Visit_Survey_Needed__c.inlineHelpText}');
        $("input[data-id$='Decision_Survey_Needed__c']").attr('title','{!$ObjectType.Visit__c.fields.Decision_Survey_Needed__c.inlineHelpText}');
        */
        
        //Resetting the height to normal value so that no of visibile lines attribute of field definition determines the height of the multipicklist field
        //$("select[multiple$='multiple']").height('auto');
        //$("select[multiple$='multiple']").width('auto');
        
        
    }
    
    function handleAddObjectiveForOpp(vOppId,obj){
        hideIOSKeyboard();
        $('#addObjectivesOpportunityDetailsModal').modal();
        visitOppId = vOppId;
        //console.log('vOppId--'+vOppId+'--obj--'+obj);
        var objTextElement = $('[id$=oppObjTxtbxId]');
        if(objTextElement != null){
            objTextElement.val(obj);
        }
    }
    
    function doCheckboxChangeAttendeeGrid(cb,itemId){   
        if(cb.checked==true){
            aSelectItemAttendeesGrid(itemId);
        }
        else{
            aDeselectItemAttendeesGrid(itemId);
        }
    }
    
    function handleAddUsersBtn(){
        selectedUserArray = new Array();
        hideIOSKeyboard();
        $('#addUsersEmployeesModal').modal();
        
        //Clear if any prev search value exists in the search text box
        $("input[id$='userSearchTextBoxId']").val('');
        
        //$('#fadeOutDiv').show();
        
        //console.log('add opportunities btn clicked on acc--'+accId);
        //populateSearchContactsGridJS('contact',accId);
        populateSearchUsersGridJS();
    }
    
    function doCheckboxChangeSearchUsers(cb,itemId){
        //console.log('cb.checked--'+cb.checked+'--itemId--'+itemId);            
        if(cb.checked==true){
            aSelectItemSearchUser(itemId);
        }
        else{
            aDeselectItemSearchUser(itemId);
        }
        
    }
    
    function showPreviousVisits(atndId){
        //console.log('atndId--'+atndId);
        hideIOSKeyboard();
        $('#previousVisitsOpportunityDetailsModal').modal();
        populateSearchPrevVisitsGridJS(atndId);
    }
    
    function handleAddAttendeeLogistics(atndId){
        hideIOSKeyboard();
        $('#addLogisticsAttendeeDetailsModal').modal();
        //console.log('atndId--'+atndId);
        populateAttendeeLogisticsJS(atndId);
    }
    
    function handleAddObjectiveForAttendee(atndId,obj){
        hideIOSKeyboard();
        $('#addObjectivesAttendeeDetailsModal').modal();
        attendeeId = atndId;
        //console.log('atndId--'+atndId+'--obj--'+obj);
        var objTextElement = $('[id$=atndObjTxtbxId]');
        if(objTextElement != null){
            objTextElement.val(obj);
        }
    }
    
    function handleStatusChange(statusElement){
        //console.log('inside handleStatusChange--statusElement--'+statusElement);
        if(statusElement != null){
            var status = $(statusElement).find('option:selected').text();
            //console.log('statusElement label--'+status);
            if(status=='Cancelled'){
                hideIOSKeyboard();
                $('#cancellationPopup').modal();
                handleCancellationReasonChange($("[id$='cancellationReasonId']").get(0));
            }
        }
    }
    
    function handleRoomBooking(roomElement){
        if(roomElement!=null){
            var roomId = $(roomElement).find('option:selected').val();
            var noOfAttnd = $("[id$=totalNoOfAttendeesId]").val();
            var arrDateLocTZ = $("[id$=arrDateLocTZID]").val();
            var depDateLocTZ = $("[id$=depDateLocTZID]").val();
            populateRoomJS(roomId,noOfAttnd);
        }
    }
    
    function handleCancellationReasonChange(reasonElement){
        if(reasonElement != null){
            //console.log('reason--'+reasonElement.value);
            if(reasonElement.value == 'Other'){
                $("[id$='cancelCommentsPanelId']").show();
            }else{
                $("[id$='cancelCommentsPanelId']").hide();
            }
        }
    }
    
    function handleCancelButtonForReasonForCancellation(){
        //console.log('before cancelComments--'+$("[id$='cancelCommentsId']").val());
        //console.log('before cancellationReason--'+$("[id$='cancellationReasonId']").val());
        $("[id$='cancelCommentsId']").val('{!oldCancellationComments}');
        $("[id$='cancellationReasonId']").val('{!oldReasonForCancellation}');
        //console.log('cancelComments--'+$("[id$='cancelCommentsId']").val());
        //console.log('cancellationReason--'+$("[id$='cancellationReasonId']").val());
    }
    
    function populateSelectedAccountDetailsForNewContact(accountIdForSearchedContacts,accountNameForSearchedContacts){
        //console.log('accountIdForSearchedContacts--'+accountIdForSearchedContacts);
        //console.log('accountNameForSearchedContacts--'+accountNameForSearchedContacts);
         
        accountIdForNewContact = accountIdForSearchedContacts;
        accountNameForNewContact = accountNameForSearchedContacts;
    }
    
    function handleRoomEffectingVariablesChange(methodInvoked,isRoomValid,invalidRoomMessage){

        if(!isRoomValid){
            //console.log('isVisitTeamUser--'+{!isVisitTeamUser});
            if({!isVisitTeamUser}){
                if(confirm(invalidRoomMessage)){
                    //saveVisitJS(true);
                    //saveWithRoomChangesJS(true);
                    saveWithRoomChangesJS(true,methodInvoked);
                }else{
                    /*
                    //revert to old values
                    document.getElementById('visitScreenPageId:visitFormId:arrDateID').value = oldArrivalDateTime;
                    document.getElementById('visitScreenPageId:visitFormId:depDateID').value = oldDepartureDateTime;
                    document.getElementById('visitScreenPageId:visitFormId:totalNoOfAttendeesId').value = oldNoOfAttendees;
                    */
                    
                    //Timezone Changes
                    //revert to old values
                    /*
                    document.getElementById('visitScreenPageId:visitFormId:arrDateLocTZID').value = oldArrivalDateTime;
                    document.getElementById('visitScreenPageId:visitFormId:depDateLocTZID').value = oldDepartureDateTime;
                    document.getElementById('visitScreenPageId:visitFormId:totalNoOfAttendeesId').value = oldNoOfAttendees;
                    
                    $("[id$='arrDateLocTZID']").trigger('onchange');
                    $("[id$='depDateLocTZID']").trigger('onchange');
                    */
                    /*$("[id$='arrDateLocTZID']").val(oldArrivalDateTime);
                    $("[id$='depDateLocTZID']").val(oldDepartureDateTime);
                    $("[id$='totalNoOfAttendeesId']").val(oldNoOfAttendees);*/
                    
                    /*Dont try this as the value might not be updated yet in html elements before you send to server
                    calculateBothUserTZDateTimveValuesJS('arrivalDateTimeAndDepartureDateTime',$("[id$='arrDateLocTZID']").val(),$("[id$='depDateLocTZID']").val());
                    */
                    //Calculate both the user based arrival and departure datetimes due to change in location based arrival and departure datetimes
                    //calculateBothUserTZDateTimveValuesJS('arrivalDateTimeAndDepartureDateTime',oldArrivalDateTime,oldDepartureDateTime);
                }
            }else{
                //alert(invalidRoomMessage);
                if(confirm(invalidRoomMessage)){
                    //Clear old room
                    //$('[id$="room"]').val(null);
                    clearRoomJS();
                }else{//Revert to old values
                    /*$("[id$='arrDateLocTZID']").val(oldArrivalDateTime);
                    $("[id$='depDateLocTZID']").val(oldDepartureDateTime);
                    $("[id$='totalNoOfAttendeesId']").val(oldNoOfAttendees);*/
                    
                    /*Dont try this as the value might not be updated yet in html elements before you send to server
                    calculateBothUserTZDateTimveValuesJS('arrivalDateTimeAndDepartureDateTime',$("[id$='arrDateLocTZID']").val(),$("[id$='depDateLocTZID']").val());
                    */
                    //Calculate both the user based arrival and departure datetimes due to change in location based arrival andtimes
                    //calculateBothUserTZDateTimveValuesJS('arrivalDateTimeAndDepartureDateTime',oldArrivalDateTime,oldDepartureDateTime);
                }
            }
        }
    }
    
/*******************************************************************
   Purpose: This method gets called on click of Cancel button on New Visit Page
   If the user is in Lightning it redirects the User to Detail Page Or Visit Home Page based on the Id in the URL
   
   If the user is in Classic it calls the Action Function - actionCancel
      
   *****/
    
    function actionCancelJS(recordIdFromURL){
         var namespacePrefix = 
        '{!IF( OR(ISBLANK($Label.visitops__namespaceprefixforschema), LOWER($Label.visitops__namespaceprefixforschema) == 'null') , '', $Label.visitops__namespaceprefixforschema)}'; 
    
  
        console.log('Calling actionCancelJS===:: '+recordIdFromURL);
        if((typeof sforce != 'undefined') && sforce && (!!sforce.one)){
            if(navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                $("body").css("position","absolute");
            }
            if({!isNewVisit}){
                console.log('Is New Visit');                
                if(recordIdFromURL === '' || typeof recordIdFromURL == 'undefined'){
                    sforce.one.navigateToURL('#/sObject/'+namespacePrefix+'Visit__c/home');
                }else{
                    sforce.one.navigateToURL('#/sObject/'+recordIdFromURL);
                }                
            }else{
                 console.log('Not New Visit');
                sforce.one.navigateToSObject('{!Visit__c.id}');
            }
        }else{
            console.log('Calling Server Cancel Action');
            actionCancel();
        }
    }
    
    function redirectForMobile(isSuccess,visitId){
        if(navigator.userAgent.match(/iPhone|iPod|iPad/i)){
            $("body").css("position","absolute");
        }
        /* if((typeof sforce != 'undefined') && sforce && (!!sforce.one)){
            if(isSuccess){
                sforce.one.navigateToSObject(visitId);
            }
        } */
    }
    function updatelocationTZArrivalTimeStringJS(){
        var date = $("[id$='arrivalTimeLocTZID_date']").val();
        var time = $("[id$='arrivalTimeLocTZID_time']").val();
        if(date!='' && time!=''){
            $("[id$='arrivalTimeLocTZID']").val(date+' '+time);
           
            $("[id$='startTimeLocTZID_date']").val(date);
            $("[id$='startTimeLocTZID_time']").val(time);
            $("[id$='startTimeLocTZID']").val(date+' '+time);
           //updateUserTZStartDateTimeValues('locationStartTime',date+' '+time);
           updateUserTZArrivalDateTimeValues('arrivalDateTime',date+' '+time);
        }
    }
    //Priyanka
    function showconsole(){
        var roomid = $("[id$='MultiroomId']").val();
        bookselRoom(roomid);
        console.log('roomid--'+roomid);
    }
        function roomUnavailableErrorsJS(unAvailableRoomsStr){
                if(unAvailableRoomsStr!='' && unAvailableRoomsStr!=null){
                    if(confirm(unAvailableRoomsStr+': is/are not available for the selected times.\nPress OK to cancel unavailable rooms.\nPress CANCEL to return to Visit record.')){
                        cancelUnAvailableRooms();
                    }
                }
            }
       function CancelAddRoomsJs(showAddRoomAlert,methodInvoked,roomstring){
                if(showAddRoomAlert && roomstring!=null && roomstring!='' && roomstring!='Undefined'){
                    if(confirm('The following additional rooms ' +roomstring+  ' fall outside the new Arrival/Departure times. These rooms must be cancelled before saving.  Cancelled rooms will also be removed from their associated agenda sessions.')){
                        clearAddRoomJs(methodInvoked);
                    }
                }
            }
        function validateRoomCheckAvailabilityJS(StartDateValue,EndDateValue){
            console.log('StartDateValue--'+ document.getElementById(StartDateValue).value);
             console.log('EndDateValue--'+ document.getElementById(EndDateValue).value);
        var startdate = document.getElementById(StartDateValue).value;
        var enddate =  document.getElementById(EndDateValue).value;
        validateRoomCheckAvailability(startdate,enddate);

    }
    
     function updatelocationTZStartTimeStringJS(){
        var date = $("[id$='startTimeLocTZID_date']").val();
        var time = $("[id$='startTimeLocTZID_time']").val();
        if(date!='' && time!=''){
            $("[id$='startTimeLocTZID']").val(date+' '+time);
            updateUserTZStartDateTimeValues('locationStartTime',date+' '+time);
        }
    }
      function updatelocationTZEndTimeStringJS(){
        var date = $("[id$='endTimeLocTZID_date']").val();
        var time = $("[id$='endTimeLocTZID_time']").val();
        if(date!='' && time!=''){
            $("[id$='EndTimeLocTZID']").val(date+' '+time);
            updateUserTZEndDateTimeValues('locationEndTime',date+' '+time);
        }
       }
    function updatelocationTZStartTimeStringJS_Mobile(event){
        var date = $("[id$='startTimeLocTZID_date_mob']").val();
        var time = $("[id$='startTimeLocTZID_time_mob']").val();
        
        if(time!='' && time.length == 5){
            time+=':00';
        }
                
        if(date!='' && time!=''){
            $("[id$='startTimeLocTZID']").val(date+' '+time);
            if( navigator.userAgent.match(/iPhone|iPod|iPad/i) && event.type!="change") {
                updateUserRoomTZArrivalDateTimeValues('arrivalDateTime',date+' '+time);
            }else if(!navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                updateUserTZStartDateTimeValues('startDateTime',date+' '+time);
            }
        }
    }
   function updatelocationTZEndTimeStringJS_Mobile(event){
        var date = $("[id$='endTimeLocTZID_date_mob']").val();
        var time = $("[id$='endTimeLocTZID_time_mob']").val();
        
        
        if(time!='' && time.length == 5){
            time+=':00';
        }
        
        if(date!='' && time!=''){
            $("[id$='EndTimeLocTZID']").val(date+' '+time);
            if( navigator.userAgent.match(/iPhone|iPod|iPad/i) && event.type!="change") {
                updateUserTZDepartureDateTimeValues('endDateTime',date+' '+time);
            }else if(!navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                updateUserTZEndDateTimeValues('endDateTime',date+' '+time);
            }
        }
    }
     
    
    function updatelocationTZArrivalTimeStringJS_Mobile(event){
        var date = $("[id$='arrivalTimeLocTZID_date_mob']").val();
        var time = $("[id$='arrivalTimeLocTZID_time_mob']").val();
        
        if(time!='' && time.length == 5){
            time+=':00';
        }
                
        if(date!='' && time!=''){
            $("[id$='arrivalTimeLocTZID']").val(date+' '+time);
            if( navigator.userAgent.match(/iPhone|iPod|iPad/i) && event.type!="change") {
                updateUserTZArrivalDateTimeValues('arrivalDateTime',date+' '+time);
            }else if(!navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                updateUserTZArrivalDateTimeValues('arrivalDateTime',date+' '+time);
            }
        }
    }
    
    function updatelocationTZDepartureTimeStringJS(){
        console.log('departureTimeLocTZID');
        var date = $("[id$='departureTimeLocTZID_date']").val();
        var time = $("[id$='departureTimeLocTZID_time']").val();
        
        if(date!='' && time!=''){
             
             $("[id$='departureTimeLocTZID']").val(date+' '+time);
            
            console.log($("[id$='departureTimeLocTZID']").val());
            $("[id$='endTimeLocTZID_date']").val(date);
            $("[id$='endTimeLocTZID_time']").val(time);
            $("[id$='EndTimeLocTZID']").val(date+' '+time);
            //updateUserTZEndDateTimeValues('locationEndTime',date+' '+time);
            updateUserTZDepartureDateTimeValues('departureDateTime',date+' '+time);

        }
    }
    
    function updatelocationTZDepartureTimeStringJS_Mobile(event){
        var date = $("[id$='departureTimeLocTZID_date_mob']").val();
        var time = $("[id$='departureTimeLocTZID_time_mob']").val();
        
        if(time!='' && time.length == 5){
            time+=':00';
        }
        
        if(date!='' && time!=''){
            $("[id$='departureTimeLocTZID']").val(date+' '+time);
            if( navigator.userAgent.match(/iPhone|iPod|iPad/i) && event.type!="change") {
                updateUserTZDepartureDateTimeValues('departureDateTime',date+' '+time);
            }else if(!navigator.userAgent.match(/iPhone|iPod|iPad/i)){
                updateUserTZDepartureDateTimeValues('departureDateTime',date+' '+time);
            }
        }
    }
    
    function noenter(ev, type)  {
        if (window.event && window.event.keyCode == 13 || ev.which == 13) {
            if(type == 'Account'){
              var acSearchText = $("[id$=accSearchTextBoxId]").val();
              if(acSearchText!=''&& acSearchText.length<2){
                  alert("Your search term must have 2 or more characters");
                  return false;
              }
            else    
              populateAccountsGridJS(JSON.stringify(selectedAccountsArray));
            }
            else if(type == 'Opp'){
              var opSearchText = $("[id$=oppSearchTextBoxId]").val();
              if(opSearchText!=''&& opSearchText.length<2){
                  alert("Your search term must have 2 or more characters");
                  return false;
              }
            else 
              populateSearchOppsGridOnEnter(JSON.stringify(selectedOppArray));
            }
            else if(type == 'Contact'){
                var coSearchText = $("[id$=contactSearchTextBoxId]").val();
                if(coSearchText!=''&& coSearchText.length<2){
                    alert("Your search term must have 2 or more characters");
                    return false;
                }
                else
                populateSearchContactsGridOnEnter(JSON.stringify(selectedConArray));
            }
            else if(type == 'User'){
                var usSearchText = $("[id$=userSearchTextBoxId]").val();
                if(usSearchText!=''&& usSearchText.length<2){
                    alert("Your search term must have 2 or more characters");
                    return false;
                }
                else
                    populateSearchUsersGridJS(JSON.stringify(selectedUserArray));
            }
            
            return false;
        } else {
            return true;
        }
    }
    
    function populateSearchAOCGridJS(AOC){
        if(AOC == 'acc'){
              var acSearchText = $("[id$=accSearchTextBoxId]").val();
              if(acSearchText!=''&& acSearchText.length<2){
                  alert("Your search term must have 2 or more characters");
                  return false;
              }
            else    
              populateAccountsGridJS(JSON.stringify(selectedAccountsArray));
            }
            else if(AOC == 'opp'){
              var opSearchText = $("[id$=oppSearchTextBoxId]").val();
              if(opSearchText!=''&& opSearchText.length<2){
                  alert("Your search term must have 2 or more characters");
                  return false;
              }
            else 
              populateSearchOppsGridOnEnter(JSON.stringify(selectedOppArray));
            }
            else if(AOC == 'con'){
                var coSearchText = $("[id$=contactSearchTextBoxId]").val();
                if(coSearchText!=''&& coSearchText.length<2){
                    alert("Your search term must have 2 or more characters");
                    return false;
                }
                else
                populateSearchContactsGridOnEnter(JSON.stringify(selectedConArray));
            }
            else if(AOC == 'use'){
                var usSearchText = $("[id$=userSearchTextBoxId]").val();
                if(usSearchText!=''&& usSearchText.length<2){
                    alert("Your search term must have 2 or more characters");
                    return false;
                }
                else
                    populateSearchUsersGridJS(JSON.stringify(selectedUserArray));
            }
    }
    
    //$("[id$=totalNoOfAttendeesId]").keydown(function(){
function validateno(e){
    var keycode1 = (e.keyCode ? e.keyCode : e.which);
    if (keycode1 == 0 || keycode1 == 9) {
    var noOfAttndees = $("[id$=totalNoOfAttendeesId]").val();
    if(noOfAttndees!='' && !((!isNaN(parseFloat(noOfAttndees))) && isFinite(noOfAttndees))){
        alert('Please Enter a Valid Number');
        $("[id$=totalNoOfAttendeesId]").focus();
        e.preventDefault();
        e.stopPropagation();
    }
}
}
    
  </script>
  
  <style>
  .gridButtonInactive
  {
      border:1px solid rgb(211,211,211);border-radius:3px;padding-left:10px;padding-right:10px;text-align: center;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;color:rgb(165, 165, 165);
  }
  .gridButton
  {
      border:1px solid rgb(211,211,211);border-radius:3px;padding-left:10px;padding-right:10px;text-align: center;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;
  }
  .gridButtonTop
  {
      border:1px solid rgb(211,211,211);border-radius:3px;display: inline-block;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;
  }
  .input-flexbox {
      display:flex;
      display:-webkit-flex;
      flex: 1 0 0;
      -webkit-flex: 1 0 0;
      min-width:44%;
      height:30px !important;
    }
  textarea{
    height: 65px !important;
  }
  .bs select{
      height: 30px !important;
  }
  .bs select[multiple]{
      height: auto !important;
  }
  .bs .picklistArrowRight, .bs .picklistArrowLeft{
     display: inline;
     width: 24px;
     height: 20px;
     border: 0px;
  }
  .bs .modal-footer .btn + .btn {
      margin-left: 0px !important;
  }
  .panel-title a, .panel-title img{
      cursor: pointer;
  }
  .lookupCustomCss select{
        height: 30px;
        margin-top: -7px;
        border-radius: 3px;
        border: 1px solid #ccc;
    }
    .lookupCustomCss .lookupInput input:not([class]){
        height: 30px;
        margin-top: -7px;
        margin-left: 2px;
        padding-top: 2px;
        /*padding-left: 12px;*/
        padding-right: 38px;
        padding-left: 5px;
        border-radius: 3px;
        border: 1px solid #ccc;
    }
  .lookupCustomCss{
    width: 100%;
    height: 30px;
    border: 1px solid #ccc;
    border-radius: 3px;
    padding: 6px 0px;
  }
  .lookupIconOn{
      margin-left:-25px !important;
  }
  .lookupIcon{
      margin-left:-25px !important;
  }
    .bs .modal-backdrop.in {
        opacity: 0.9;
        z-index: 0 !important;
    }
    /*only for desktop with width greater than or equal to 993px*/
    @media only screen and (min-width: 993px) {
        
        #cardView .custom-label{
            display: none; 
        }
        
        #cardView .custom-value{
            width:100%;
        }
        
        .oppWordbreak{
            width:110px !important;
            word-wrap: break-word;
        }
        
    }
    
     /* Tablet/Mobile with width less than or equal to 992px*/
    @media only screen and (max-width: 992px) {        
        
        .hideRecentVisits {
            display: none;
        }
        
        /* #theIframe{
            height: 780px !important;
        } */
        
        /* Force table to not be like tables anymore */
        #cardView table, 
        #cardView thead, 
        #cardView tbody, 
        #cardView th, 
        #cardView td, 
        #cardView tr { 
            display: block; 
        }
        
        #cardView .custom-label{
            width:20%;
            font-weight:bold;
            color:#424242;
            float:left;
        }
        
        #cardView .custom-value{
            width:65%;
            margin-left:20%;
        }
        
        /* Hide table headers (but not display: none;, for accessibility) */
        #cardView thead tr { 
            position: absolute;
            top: -9999px;
            left: -9999px;
        }

        #cardView tr { border: 1px solid #ccc; }  
         #cardView td { 
            /* Behave  like a "row" */
            border: none;
            /*border-bottom: 1px solid #eee; */
            position: relative;
            /*padding-left: 50%; */
            background:white;
            white-space: normal;
            text-align:left;
        }    
        #cardView td:before { 
            /* Now like a table header */
            position: absolute;
            /* Top/left values mimic padding */
            top: 6px;
            left: 6px;
            width: 45%; 
            padding-right: 10px; 
            white-space: nowrap;
            text-align:left;
            font-weight: bold;
        }    
        /*
        Label the data
        */
        #cardView td:before { content: attr(data-title); }
        #cardView .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            padding:4px;
            line-height:1.2;
        }
    }
    
    /*only for mobiles with width less than or equal to 480px*/
     @media only screen and (max-width: 480px) {
         
     .bs .btn-sm, .bs .btn-xs {
        padding:5px 5px;
        line-height:1.2;
     }
     #cardView .custom-label{
            width:25% !important;
            font-weight:bold;
            color:#424242;
            float:left !important;
        }
        
        #cardView .custom-value{
            width:60% !important;
            margin-left:25% !important;
        }
        
        /* #theIframe{
            height: 620px !important;
        } */
     }
    .modal
    {
        overflow-y: auto !important;
    }
    /*.modal-dialog
    {
        overflow-y: initial !important;
    }*/
    .modal-body
    {
        height: 480px;
        max-height:600px;
        overflow-y: auto;
    }
  @media(min-width:992px){
        .bs .modal-dialog {
            width:930px;
        }
    }
  .requiredExample {
        border-left: 3px solid #c00;
        font-size: 90%;
        padding:2px 4px;
    }
    .requiredBlock{
        background-color: #c00;
        position: absolute;
        left: 11px;
        width: 3px;
        top: 25px;
        bottom: 1px;
    }
    .VisitScreen {
        border-top:2px solid #D95D2E;
        border-radius:4px;
        background-color:#f8f8f8;
        border-color:2px solid #D95D2E;
        padding:5px;
    }
    .VisitScreen .heading{
        font-size:14px;
        color:black;
        font-weight:bold;
        border-color:#ddd;
    }
    .AccountDeatils {
        border-top:2px solid #D95D2E;
        border-radius:4px;
        background-color:#f8f8f8;
        border-color:2px solid #D95D2E;
        padding:5px;
        margin:10px;
    }
    .AccountDeatils .heading{
        font-size:14px;
        color:black;
        font-weight:bold;
        border-color:#ddd;
    }
    .OpportunityDetails {
        border-top:2px solid #D95D2E;
        border-radius:4px;
        background-color:#f8f8f8;
        border-color:2px solid #D95D2E;
        padding:5px;
        margin:10px;
    }
    .OpportunityDetails .heading{
        font-size:14px;
        color:black;
        font-weight:bold;
        border-color:#ddd;
    }
    .AttendeeDetails {
        border-top:2px solid #D95D2E;
        border-radius:4px;
        background-color:#f8f8f8;
        border-color:2px solid #D95D2E;
        padding:5px;
        margin:10px;
    }
    .AttendeeDetails .heading{
        font-size:14px;
        color:black;
        font-weight:bold;
        border-color:#ddd;
    }
    /*thead, tbody { display: block; }*/

    .tableScroll {
        max-height: 350px;       /* Just for the demo          */
        overflow-y: auto;    /* Trigger vertical scroll    */
        overflow-x: hidden;  /* Hide the horizontal scroll */
        display: block;
    }
    .tableScrollLabel
    {
        word-wrap: break-word !important;
        width :auto;
    }
    .progDescTabClass{
        margin-top:25px !important;
        margin-left:-15px;
    }
    .vtDescTabClass{
        margin-top:25px !important;
        margin-left: 11px;
    }
    .bs .form-control { font-size:12px !important;}
    .panel-heading {
        background-image: url({!URLFOR($Resource.VMSResources, "images/opacity75.png")});
        background-repeat: repeat;
        border-width: 0!important;
        background-color: #d18361!important;
        border-color: #d18361!important;
    }
    .bs .panel{
        background-color: #f8f8f8;
    }
    .bs .breadcrumbText{
        padding:10px 0px;
    }
    .bs .breadcrumbText .row{
        margin-right:45%;
    }
    .bs .plus{
        padding-right: 5px !important;
    }
    .bs .panel-title > a {
        font-size:0.8em;
        font-weight:bold;
     }
     .bs .panel-heading {
         padding: 5px 15px;
      }
    .Custom15Tab .pageTitleIcon, .individualPalette .Custom15Block .pageTitleIcon {
        margin:4px;
     }
     .bs .panel-group { 
         margin-bottom:20px; 
     }
     .NewvisitScreen {
        border-top:2px solid #D95D2E;
        border-radius:4px;
        background-color:#f8f8f8;
        border-color:2px solid #D95D2E;
    }
    .NewvisitScreen .heading{
        font-size:14px;
        color:black;
        font-weight:bold;
        border-color:#ddd;
    }
    .NewvisitScreen .col-md-4{
        margin-top:13px;
        margin-left:13px;
    }
    .panel-body {
        background-color:#f8f8f8;
    }
    .bs label{
        display:block;
    }
    .bs .btn-sm, .bs .btn-xs {
        /*padding:1px 2px;
        line-height:1.2;
        -webkit-appearance: none !important;*/
    }
    .messageCell h4,.messageCell h5,.messageCell h6 {
        margin-top: 0px !important;
        margin-bottom: 0px !important;
        font-size: 1.1em !important;
    }
    </style>
    
    <style>
                
                .timePicker {
                    height: 12.7em;
                    width: 10em;
                    overflow-y: scroll;
                    overflow-x: hidden;
                    /*white-space: pre;*/
                    border: 1px solid #b7c6b2;
                    display: none;
                    z-index: 51;
                    top: 0;
                    left: 0;
                    background: #fff;
                }
                
                .hover{
                    background-color: #cfeef8;
                }
                
                .specificTime{
                    text-align: left;
                    padding-top: 3px;
                    padding-bottom: 3px;
                    padding-left: 4px;
                    padding-right: 12px;
                    margin-right: 4px;
                }
        
        .slds-scope .slds-table td {
        white-space: normal;
        }      
            </style>
            <script>
                var SelectedTextBox = '';
                
                $(document).ready(function(){
                    
                    if(document.getElementById('visitScreenPageId:visitFormId:ProgramsOptionsId') != null)
                    {
                        if(document.getElementById('visitScreenPageId:visitFormId:ProgramsOptionsId').value != '')
                        {
                            document.getElementById('visitScreenPageId:visitFormId:ProgramsOptionsId').value = '';
                            document.getElementById('visitScreenPageId:visitFormId:visitTypesOptionsProgId').value = '';
                            document.getElementById('visitScreenPageId:visitFormId:locationOptionsProgId').value = '';
                        }
                    }
                    else if(document.getElementById('visitScreenPageId:visitFormId:locationOptionsId') != null)
                    {
                        if(document.getElementById('visitScreenPageId:visitFormId:locationOptionsId').value != '')
                        {
                            document.getElementById('visitScreenPageId:visitFormId:locationOptionsId').value = '';
                            document.getElementById('visitScreenPageId:visitFormId:visitTypesOptionsId').value = '';
                        }
                    }
                    //To close the drop down when clicked on the body apart from the text box and the options
                    $(document).mouseup(function(e){
                        var container = $("[id$='simpleTimePicker']");
                        var container2 = $("input.timePickerTextBox");
                        if (!container.is(e.target) && container.has(e.target).length === 0 && !container2.is(e.target)){
                            $("[id$='simpleTimePicker']").css("display","none");
                        }
                    });
                    
                    $("input.timePickerTextBox").on("focus",function(event) {
                        $("[id$='simpleTimePicker']").css({
                            'left': $(this).offset().left - 8,
                            'top': $(this).offset().top - 80,
                            'display': 'block'
                        });
                        SelectedTextBox = $(this).attr('data-id');
                        //highlight the value in text box in the drop down
                        removeHighLight();
                        var currentTime = $(this).val().replace(' ','_').replace(':','_');
                        var splitCurrentTime = currentTime.split('_');
                        var timeToBeHighlighted = '';
                        if(splitCurrentTime.length >= 2){
                            timeToBeHighlighted = splitCurrentTime[0];
                            if(parseInt(splitCurrentTime[1]) >= 0 && parseInt(splitCurrentTime[1]) < 30){
                                timeToBeHighlighted += '_00';
                            }else{
                                timeToBeHighlighted += '_30';
                            }
                            if(splitCurrentTime.length == 3){
                                timeToBeHighlighted += '_'+splitCurrentTime[2];
                            }
                        }
                        $("#timePickerItem_"+timeToBeHighlighted).addClass("hover");
                        if($("#simpleTimePicker .hover").length>0){
                            $("#simpleTimePicker").scrollTop($("#simpleTimePicker .hover").position().top);
                        }                        
                    });
                    
                    // Highlight on hover
                    $(".specificTime").on("mouseover",function(event) {
                        highLightTimeItem($(this).attr('id'));
                    });
                    
                    // Update the text box with the selected time
                    $(".specificTime").on("click",function(event) {
                        $("[data-id='"+SelectedTextBox+"']").val($(this).text());
                        $("[id$='simpleTimePicker']").css("display","none");
                        if(SelectedTextBox.search("ArrivalDateTime_time")>=0){
                            updatelocationTZArrivalTimeStringJS();
                        }else if(SelectedTextBox.search("DepartureDateTime_time")>=0){
                            updatelocationTZDepartureTimeStringJS();
                        }else if(SelectedTextBox.search("StartDateTime_time")>=0){
                            updatelocationTZStartTimeStringJS();
                        }else if(SelectedTextBox.search("endDateTime_time")>=0){
                            updatelocationTZEndTimeStringJS();
                        }
                    });
                    
                });
                
                function removeHighLight(){
                    $(".hover").removeClass("hover");
                }
                
                function highLightTimeItem(elemId){
                    var id = "#"+elemId;
                    removeHighLight();
                    $(id).addClass("hover");
                }
                
                function saveJS(){ 
                    
                    if("{!isSalesTeamUser}" == "true" && "{!Visit__c.VisitStatusName__c}" == "Cancelled"){
                        if(confirm("Because this request was previously cancelled, you must click SUBMIT to reactivate it. Do you want to save your changes without reactivating? \n\nClick OK to save your changes and leave the request in cancelled status. \nClick CANCEL to go back and SUBMIT your request to reactivate it.")){
                            saveAF();
                        }
                    }else{
                        if("{!showLocChangeAlert}" == "true" ){
                            if(confirm("Presenters and/or rooms have been booked at the original Location.  Cancellations will be sent for all presenters and rooms. \n Click OK to send cancellations and change the Location and/or Visit Type.\n Click CANCEL to go back without making changes.")){
                                saveAF();
                            }
                        }
                        else{
                            saveAF();
                        }
                    }
                    
                }
                
                function submitJS(){
                    if("{!showLocChangeAlert}" == "true" ){
                        if(confirm("Presenters and/or rooms have been booked at the original Location.  Cancellations will be sent for all presenters and rooms. \n Click OK to send cancellations and change the Location and/or Visit Type.\n Click CANCEL to go back without making changes.")){
                            submitAF();
                        }
                    }
                    else{
                        submitAF();
                    }
                }
                
            </script>
    
    </head>
<body>
     <apex:outputpanel rendered="{!dtredirect}">
         <script type="text/javascript">
         handleInit();
         </script>
     </apex:outputpanel>
     <apex:outputpanel rendered="{!redirectionFalseInGo}">
         <script type="text/javascript">
         handleInit();
         </script>
     </apex:outputpanel>
<div class="container bs"> <!-- class bs is needed for not conflicting with SF styles for sidebar and header -->
    <apex:form id="createNewAccountForm">
        <!-- AccountDeatils section Create a New Account Modal -->
        <apex:actionRegion id="createAccountRegion">
        <div class="modal fade" id="createNewAccountModal" role="dialog" data-backdrop="static">
            <div class="modal-backdrop fade in"></div>
            <div class="modal-dialog">                      
              <!-- AccountDeatils section AddObjectives Modal content-->
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                  <h4 class="modal-title">New Account</h4>
                </div>
                <div class="modal-body">
                    <apex:pageMessages id="createNewAccPgMsgsId"/>
                    <div class="row" style="padding:0px 20px 15px;text-align:right;">
                        <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewAccount}" tabindex="3012" rerender="createNewAccPgMsgsId,companiesGrid" oncomplete="handlePopupCloseForSFErrors('createNewAccPgMsgsId','createNewAccountModal')" status="progressIndicator"/>
                        <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.Name.Label}"/>
                            <apex:inputField value="{!newAccount.Name}" styleClass="reqField form-control" html-tabindex="3001"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.BillingCountry.Label}"/>
                            <apex:inputField value="{!newAccount.BillingCountry}" styleClass="form-control" html-tabindex="3007"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.Type.Label}"/>
                            <apex:inputField value="{!newAccount.Type}" styleClass="form-control" html-tabindex="3002"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.BillingCity.Label}"/>
                            <apex:inputField value="{!newAccount.BillingCity}" styleClass="form-control" html-tabindex="3008"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.OwnerId.Label}"/>
                            <apex:inputField value="{!newAccount.OwnerId}" styleClass="reqField lookupCustomCss" html-tabindex="3003"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.BillingState.Label}"/>
                            <apex:inputField value="{!newAccount.BillingState}" styleClass="form-control" html-tabindex="3009"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.ParentId.Label}"/>
                            <apex:inputField value="{!newAccount.ParentId}" styleClass="lookupCustomCss" html-tabindex="3004"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.BillingPostalCode.Label}"/>
                            <apex:inputField value="{!newAccount.BillingPostalCode}" styleClass="form-control" html-tabindex="3010"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.Website.Label}"/>
                            <apex:inputField value="{!newAccount.Website}" styleClass="form-control" html-tabindex="3005"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Account.fields.AnnualRevenue.Label}"/>
                            <apex:inputField value="{!newAccount.AnnualRevenue}" styleClass="form-control" html-tabindex="3011"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Company__c.fields.VisitOps__ObjectiveForThisAccount__c.Label}"/>
                            <apex:inputTextArea value="{!newAccountObjective}" styleClass="form-control" tabindex="3006" rows="3"/>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                  
                  <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewAccount}" tabindex="3012" rerender="createNewAccPgMsgsId,companiesGrid" oncomplete="handlePopupCloseForSFErrors('createNewAccPgMsgsId','createNewAccountModal')" status="progressIndicator"/>
                  <!--<button type="button" class="btn btn-default btn-sm pull-left" data-dismiss="modal">Save</button>-->
                  <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                </div>
              </div>                          
            </div>
        </div>
        </apex:actionRegion>
    </apex:form>
    <apex:form id="createNewCompanyForm">
        <!-- AccountDeatils section Create a New Account Modal -->
        <apex:actionRegion id="createCompanyRegion">
        <div class="modal fade" id="createNewCompanyModal" role="dialog" data-backdrop="static">
            <div class="modal-backdrop fade in"></div>
            <div class="modal-dialog">                      
              <!-- AccountDeatils section AddObjectives Modal content-->
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal" tabindex="2998">&times;</button>
                  <h4 class="modal-title">New Company</h4>
                </div>
                <div class="modal-body">
                    <apex:pageMessages id="createNewCompPgMsgsId"/>
                    <div class="row" style="padding:0px 20px 15px;text-align:right;">
                        <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewCompany}" tabindex="2999" rerender="createNewCompPgMsgsId,companiesGrid" oncomplete="handlePopupCloseForSFErrors('createNewCompPgMsgsId','createNewCompanyModal')" status="progressIndicator"/>
                        <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" tabindex="3000">Close</button>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Company__c.fields.VisitOps__Company_Name__c.Label}"/>
                            <div class="requiredInput">
                                <div class="requiredBlock"></div>
                                <apex:inputField value="{!newCompany.VisitOps__Company_Name__c}" styleClass="reqField form-control" html-tabindex="3001"/>
                            </div>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Company__c.fields.VisitOps__Company_Annual_Revenue__c.Label}"/>
                            <apex:inputField value="{!newCompany.VisitOps__Company_Annual_Revenue__c}" styleClass="form-control" html-tabindex="3003"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Company__c.fields.VisitOps__Company_Industry__c.Label}"/>
                            <apex:inputField value="{!newCompany.VisitOps__Company_Industry__c}" styleClass="form-control" html-tabindex="3002"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Company__c.fields.VisitOps__Company_Website__c.Label}"/>
                            <apex:inputField value="{!newCompany.VisitOps__Company_Website__c}" styleClass="form-control" html-tabindex="3004"/>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                  
                  <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewCompany}" tabindex="3005" rerender="createNewCompPgMsgsId,companiesGrid" oncomplete="handlePopupCloseForSFErrors('createNewCompPgMsgsId','createNewCompanyModal')" status="progressIndicator"/>
                  <!--<button type="button" class="btn btn-default btn-sm pull-left" data-dismiss="modal">Save</button>-->
                  <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" tabindex="3006">Close</button>
                </div>
              </div>                          
            </div>
        </div>
        </apex:actionRegion>
    </apex:form>
    <apex:form id="createNewContactForm">
        <!-- AccountDeatils section Create a New Account Modal -->
        <apex:actionRegion id="createContactRegion">
        <div class="modal fade" id="createNewContactModal" role="dialog" data-backdrop="static">
            <div class="modal-backdrop fade in"></div>
            <div class="modal-dialog">                      
              <!-- AccountDeatils section AddObjectives Modal content-->
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                  <h4 class="modal-title">New Contact</h4>
                </div>
                <div class="modal-body">
                    <apex:pageMessages id="createNewContactPgMsgsId"/>
                    <div class="row" style="padding:0px 20px 15px;text-align:right;">
                        <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewContact}" tabindex="2010" rerender="createNewContactPgMsgsId,attendeesGrid" oncomplete="handlePopupCloseForSFErrors('createNewContactPgMsgsId','createNewContactModal')" status="progressIndicator"/>
                        <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.FirstName.Label}"/>
                            <apex:inputField value="{!newContact.FirstName}" styleClass="form-control" html-tabindex="2001"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.Department.Label}"/>
                            <apex:inputField value="{!newContact.Department}" styleClass="form-control" html-tabindex="2006"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.LastName.Label}"/>
                            <apex:inputField value="{!newContact.LastName}" styleClass="reqField form-control" html-tabindex="2002"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.Title.Label}"/>
                            <apex:inputField value="{!newContact.Title}" styleClass="form-control" html-tabindex="2007"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.Email.Label}"/>
                            <apex:inputField value="{!newContact.Email}" styleClass="form-control" html-tabindex="2003"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.Phone.Label}"/>
                            <apex:inputField value="{!newContact.Phone}" styleClass="form-control" html-tabindex="2008"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="Account"/>
                            <apex:inputField value="{!newContact.AccountId}" styleClass="lookupCustomCss" html-tabindex="2004" id="accountIdFieldForNewContactElementId"/>
                        </div>
                        <div class="col-md-4 form-group">
                            <apex:outputLabel value="{!$ObjectType.Contact.fields.OwnerId.Label}"/>
                            <apex:inputField value="{!newContact.OwnerId}" styleClass="reqField lookupCustomCss" html-tabindex="2009"/>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Objectives_for_this_Attendee__c.Label}"/>
                            <apex:inputTextArea value="{!newContactObjective}" styleClass="form-control" tabindex="2005" rows="3"/>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    
                  <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewContact}" tabindex="2010" rerender="createNewContactPgMsgsId,attendeesGrid" oncomplete="handlePopupCloseForSFErrors('createNewContactPgMsgsId','createNewContactModal')" status="progressIndicator"/>
                  <!--<button type="button" class="btn btn-default btn-sm pull-left" data-dismiss="modal">Save</button>-->
                  <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                </div>
              </div>                          
            </div>
        </div>
        </apex:actionRegion>
    </apex:form>
    <!-- AttendeeDetails section AddOtherAttendees Modal -->
    <apex:form id="addOtherAttendeesForm">
        <apex:actionRegion id="addOtherAttendeesRegion">
        <div class="modal fade" id="addOtherAttendeesModal" role="dialog" data-backdrop="static">
            <div class="modal-backdrop fade in"></div>
        <apex:outputPanel id="newAdhocUserPanel" layout="block">
        <div class="modal-dialog">                      
          <!-- AttendeeDetails section AddOtherAttendees Modal content-->
          <div class="modal-content">
            <div class="modal-header">
              <button type="button" class="close" data-dismiss="modal">&times;</button>
              <h4 class="modal-title">New Attendee</h4>
            </div>
            <div class="modal-body">
                <div class="row" style="padding:0px 20px 15px;text-align:right;">
                    <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>
                    <button type="button" class="btn btn-default btn-sm pull-right" data-dismiss="modal">Save New</button>-->
              
                    <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewAdhocUserForVisit}" rerender="newAdhocUserPgMsgsId,attendeesGrid" oncomplete="handlePopupCloseForSFErrors('newAdhocUserPgMsgsId','addOtherAttendeesModal');" status="progressIndicator" tabindex="3998"/>&nbsp;
                    <apex:commandButton styleClass="btn btn-default btn-sm" value="Save & New" action="{!createNewAdhocUserForVisit}" rerender="newAdhocUserPgMsgsId,attendeesGrid" oncomplete="clearInputs();" status="progressIndicator" tabindex="3999"/>
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" tabindex="4000">Close</button>
                </div>
                <apex:pageMessages id="newAdhocUserPgMsgsId"/>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Prefix__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Prefix__c}" styleClass="field form-control" html-tabindex="4001"/>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__FirstName__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__FirstName__c}" styleClass="field form-control" html-tabindex="4002"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__LastName__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__LastName__c}" styleClass="reqField field form-control" html-tabindex="4003"/>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Suffix__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Suffix__c}" styleClass="field form-control" html-tabindex="4004"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Company__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Company__c}" styleClass="field form-control" html-tabindex="4005"/>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Title__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Title__c}" styleClass="field form-control" html-tabindex="4006"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Email__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Email__c}" styleClass="field form-control" html-tabindex="4007"/>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Phone__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Phone__c}" styleClass="field form-control" html-tabindex="4008"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="Attendee Type"/>
                        <apex:selectList value="{!typeofAttendee}" size="1" multiselect="false" tabindex="4009" styleClass="field form-control">
                            <apex:selectOption itemValue="" itemLabel="--None--"/>
                            <apex:selectOption itemValue="Customer" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeCustomer__c.Label}"/>
                            <apex:selectOption itemValue="Employee" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeEmployee__c.Label}"/>
                            <apex:selectOption itemValue="Partner" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeePartner__c.Label}"/>
                            <apex:selectOption itemValue="Other" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeOther__c.Label}"/>
                        </apex:selectList>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__Attendee_Role__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__Attendee_Role__c}" styleClass="field form-control" html-tabindex="4010"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__DietType__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__DietType__c}" styleClass="field form-control" html-tabindex="4011"/>
                    </div>
                    <div class="col-md-4 form-group">
                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__DietaryRequirements__c.Label}"/>
                        <apex:inputField value="{!newAdhocUser.VisitOps__DietaryRequirements__c}" styleClass="field form-control" html-tabindex="4012"/>
                    </div>
                </div>
                <!--<div class="row">
                    <div class="col-md-4 form-group"><apex:outputLabel value="Attendee Type"/>
                        <apex:selectList value="{!typeofAttendee}" size="1" multiselect="false" styleClass="form-control">
                            <apex:selectOption itemValue="" itemLabel="--None--"/>
                            <apex:selectOption itemValue="Customer" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeCustomer__c.Label}"/>
                            <apex:selectOption itemValue="Employee" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeEmployee__c.Label}"/>
                            <apex:selectOption itemValue="Partner" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeePartner__c.Label}"/>
                            <apex:selectOption itemValue="Other" itemlabel="{!$ObjectType.VisitOps__Attendee__c.Fields.VisitOps__IsAttendeeOther__c.Label}"/>
                        </apex:selectList>
                    </div>
                </div>-->
            </div>
            <div class="modal-footer">
              <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>
              <button type="button" class="btn btn-default btn-sm pull-right" data-dismiss="modal">Save New</button>-->
              
              <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!createNewAdhocUserForVisit}" rerender="newAdhocUserPgMsgsId,attendeesGrid" oncomplete="handlePopupCloseForSFErrors('newAdhocUserPgMsgsId','addOtherAttendeesModal');" status="progressIndicator" tabindex="4013"/>&nbsp;
              <apex:commandButton styleClass="btn btn-default btn-sm" value="Save & New" action="{!createNewAdhocUserForVisit}" rerender="newAdhocUserPgMsgsId,attendeesGrid" oncomplete="clearInputs();" status="progressIndicator" tabindex="4014"/>
              <button type="button" class="btn btn-default btn-sm" data-dismiss="modal" tabindex="4015">Close</button>
            </div>
          </div>                          
        </div>
        </apex:outputPanel>
    </div>
        </apex:actionRegion>
    </apex:form>
    
    <apex:form id="visitFormId">
        <div class="modal fade" id="cancellationPopup" role="dialog" data-backdrop="static">
            <div class="modal-backdrop fade in"></div>
            <div class="modal-dialog">                      
              <!-- Cancellation status popup-->
              <div class="modal-content">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                  <h4 class="modal-title">Cancel {!VisitOps__Visit__c.VisitOps__VisitName__c}</h4>
                </div>
                <div class="modal-body">
                    <apex:pageMessages id="cancelPopupPgMsgsId"/>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ReasonForCancellation__c.Label}"/>
                            <apex:inputField value="{!VisitOps__Visit__c.VisitOps__ReasonForCancellation__c}" styleClass="form-control" onchange="handleCancellationReasonChange(this);" id="cancellationReasonId"/>
                        </div>
                    </div>
                    <div class="row">
                        <apex:outputPanel layout="block" style="display:{!IF(VisitOps__Visit__c.VisitOps__ReasonForCancellation__c == 'Other', 'block','none')}" id="cancelCommentsPanelId">
                            <div class="col-md-6 form-group">
                                <apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__CancellationComments__c.Label}"/>
                                <apex:inputField value="{!VisitOps__Visit__c.VisitOps__CancellationComments__c}" style="height:5% !important;" styleClass="form-control" id="cancelCommentsId"/>
                            </div>
                        </apex:outputPanel>
                    </div>
                </div>
                <div class="modal-footer">
                    <apex:commandButton value="OK" rerender="dummy" styleClass="btn btn-sm btn-default" immediate="true" onclick="handlePopupClose(this,'true','cancellationPopup')"/>&nbsp;
                    <apex:commandButton value="Cancel" rerender="dummy" styleClass="btn btn-sm btn-default" immediate="true" onclick="handleCancelButtonForReasonForCancellation();handlePopupClose(this,'true','cancellationPopup')"/>
                </div>
              </div>                          
            </div>
        </div>
        <apex:pageMessages id="pgMsgsId"/>
        
    <!-- Component to provide ajax loading support -->
    <c:AjaxStatusIndicator statusText="Processing..."/>
    <!--New Page-->
    <apex:actionFunction name="fetchLocations" action="{!populateLocationsBasedOnVisitType}" rerender="pgMsgsId,locationOptionsProgId" status="progressIndicator"/>
    <apex:actionFunction name="fetchVisitTypesBasProgram" action="{!populateVisitTypesBasedOnProgram}" rerender="pgMsgsId,visitTypesOptionsProgId,vtDescID,locationOptionsProgId" status="progressIndicator"/>
    <apex:actionFunction name="fetchVisitTypes" action="{!populateVisitTypesBasedOnLocation}" rerender="visitTypesOptionsId,pgMsgsId,vtLocDescID" status="progressIndicator"/>
    <apex:actionFunction name="saveAF" action="{!save}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange('save',{!isRoomValid},'{!invalidRoomMessage}');redirectForMobile('{!isSaveSuccess}','{!VisitOps__Visit__c.id}');roomUnavailableErrorsJS('{!unAvailableRoomsString}');CancelAddRoomsJs('{!showAddRoomAlert}','save','{!cancelRoomString}');"/>    
    <apex:actionFunction name="submitAF" action="{!submitVisit}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange('submit',{!isRoomValid},'{!invalidRoomMessage}');redirectForMobile('{!isSaveSuccess}','{!VisitOps__Visit__c.id}');roomUnavailableErrorsJS('{!unAvailableRoomsString}');CancelAddRoomsJs('{!showAddRoomAlert}','submit','{!cancelRoomString}');"/>
    <apex:actionRegion >
        <apex:actionFunction name="clearRoomJS" action="{!clearRoom}" rerender="room,pgMsgsId" status="progressIndicator"/>
    </apex:actionRegion>
    <apex:actionRegion >
        <apex:actionFunction name="clearAddRoomJs" action="{!cancelAddRoom}" rerender="pgMsgsId" status="progressIndicator">
        <apex:param name="methodInvoked" value=""/>
        </apex:actionFunction>
    </apex:actionRegion>
    <!-- 
    <apex:actionFunction name="saveVisitJS" action="{!save}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange({!isRoomValid},'{!invalidRoomMessage}');">
        <apex:param name="isRoomOverrideChosen" value="" assignTo="{!isRoomOverrideChosen}"/>
    </apex:actionFunction>
     -->
    <apex:actionFunction name="saveWithRoomChangesJS" action="{!saveWithRoomChanges}" rerender="pgMsgsId" status="progressIndicator">
        <apex:param name="isRoomOverrideChosen" value="" assignTo="{!isRoomOverrideChosen}"/>
        <apex:param name="methodInvoked" value=""/>
    </apex:actionFunction>
    
    <apex:actionRegion >
        <apex:actionFunction name="validateCheckAvailability" action="{!validateCheckAvailability}" rerender="pgMsgsId,roomsPicklist,room" status="progressIndicator"  >
            <apex:param name="noOfAttendees" value=""/>
            <apex:param name="isCheckLink" value="true"/>
        </apex:actionFunction>
    </apex:actionRegion>
    <apex:actionRegion >
        <apex:actionFunction name="populateRoomJS" action="{!populateRoom}" rerender="roomPanel,room,arrDateID,depDateID,arrDateLocTZID,depDateLocTZID,totalNoOfAttendeesId,pgMsgsId" status="progressIndicator">
            <apex:param name="roomId" value=""/>
             <apex:param name="noOfattendee" value=""/>
        </apex:actionFunction>
    </apex:actionRegion>
    <apex:actionRegion >
        <apex:actionFunction name="calculateBothUserTZDateTimveValuesJS" action="{!calculateUserTZDateTimeValues}" rerender="arrDateID,depDateID,pgMsgsId" status="progressIndicator">
            <apex:param name="contextField" value=""/>
            <apex:param name="locationTZArrivalDateTimeString" value="" assignTo="{!locationTZArrivalDateTimeString}"/>
            <apex:param name="locationTZDepartureDateTimeString" value="" assignTo="{!locationTZDepartureDateTimeString}"/>
        </apex:actionFunction>
    </apex:actionRegion>
    <apex:actionRegion >
        <apex:actionFunction name="populateAttendeeLogisticsJS" action="{!populateAttendeeLogistics}" rerender="addAttendeeLogisticsPanel" status="progressIndicator">
            <apex:param name="selectedAttendeeIdForLogistics" value=""/>
        </apex:actionFunction>   
    </apex:actionRegion>
    <!--<apex:actionRegion >-->                 
        <apex:actionFunction name="actionCancel" action="{!cancelRequest}" rerender="dummy" immediate="true"/>
    <!--</apex:actionRegion>-->
        <apex:slds />
        <apex:outputPanel id="initialViewPanelId" rendered="{!!allowNextStep}"> 
            
             <apex:outputPanel rendered="{!isProgramNeeded}">
                 <div class="slds-p-around_small">
                    <article class="slds-card">
                        <div class="slds-card__header slds-grid slds-border_bottom">
                            <header class="slds-media slds-media_center slds-has-flexi-truncate ">
                                <div class="slds-media__body">
                                    <h2 class="slds-card__header-title" ><b style="font-size: larger;">NEW VISIT</b></h2>  
                                </div>
                                <div>
                                    <apex:commandButton styleClass="slds-button slds-button_brand slds-m-bottom_small" value="Go" action="{!go}" rerender="pgMsgsId" oncomplete="handleInit();" status="progressIndicator"/>&nbsp;
                               	    <button type="button" class="slds-button slds-button_brand slds-m-bottom_small" onclick="actionCancelJS('{!recordIdFromURL}');">Cancel</button>
                                </div>
                            </header>
                        </div>
                        <div class="slds-card__body slds-card__body_inner">
                            <div>
                                <div class="slds-form slds-form_horizontal">
                                    <div class="slds-grid slds-wrap slds-gutters">
                                        <div class="slds-col slds-size_1-of-1 slds-medium-size_3-of-6">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for=""><apex:outputText value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Program__c.Label}"/></label>
                                                <div class="slds-form-element__control">
                                                    <apex:selectList value="{!selectedProgramId}" size="1" styleClass="slds-select" onchange="fetchVisitTypesBasProgram();" id="ProgramsOptionsId">
                                                        <apex:selectOptions value="{!programOptions}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>   
                                        </div>
                                    </div> 
                                    
                                    
                                    <div class="slds-grid slds-wrap slds-gutters">
                                        <div class="slds-col slds-size_1-of-1 slds-medium-size_3-of-6">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for=""><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitType__c.Label}"/></label>
                                                <div class="slds-form-element__control">               
                                                    <apex:selectList value="{!selectedVisitTypeId}" size="1" id="visitTypesOptionsProgId" styleClass="slds-select" onchange="fetchLocations();">
                                                        <apex:selectOptions value="{!visitTypeOptions}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>   
                                        </div>              
                                    </div> 
                                    
                                    <div class="slds-grid slds-wrap slds-gutters">
                                        <div class="slds-col slds-size_1-of-1 slds-medium-size_3-of-6">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for=""><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Location__c.Label}"/></label>
                                                <div class="slds-form-element__control">
                                                    <apex:selectList value="{!selectedLocationId}" size="1" styleClass="slds-select"  id="locationOptionsProgId">
                                                        <apex:selectOptions value="{!locationOptions}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>   
                                        </div>
                                    </div>
                  
                  </div>
                </div>
                            
              <div class="slds-form slds-form_horizontal">
                  <div class="col-md-6"  style="margin-top: 25px;">
                <div class="slds-scrollable_x">
                    <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-cell-wrap" style="font-size:13px">
                        <thead>
                            <tr class="slds-line-height_reset">
                                <th class="slds-text-title_caps" scope="col">
                                    <div  title="PROGRAM">PROGRAM</div>
                                </th>
                                <th class="slds-text-title_caps" scope="col">
                                    <div  title="DESCRIPTION">DESCRIPTION</div>
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            
                            <apex:repeat value="{!programsList}" var="wrp" id="progDescTable">
                                <tr class="slds-hint-parent">
                                    <td><div><apex:outputText value="{!wrp.Name}" title="test"/></div></td>
                                    <td ><div><apex:outputText value="{!wrp.VisitOps__DescriptionArea__c}" title="test" html-class="tableScrollLabel"/></div></td>
                                </tr>
                            </apex:repeat>                            
                        </tbody>
                    </table>
                  </div>
                  </div>
                  <div class="col-md-6"  style="margin-top: 25px;">
                   <div class="slds-scrollable_x">
                     <apex:outputPanel style="display:{!If(showVisitTypeDescription == true,'','none')}" id="vtDescID">
                    <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-cell-wrap" style="font-size:13px">
                        <thead>
                            <tr class="slds-line-height_reset">
                                <th class="slds-text-title_caps" scope="col">
                                    VISIT TYPE
                                </th>
                                <th class="slds-text-title_caps" scope="col">
                                    DESCRIPTION
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            
                            <apex:repeat value="{!visitTypesListUI}" var="wrp" id="vtDescTable">
                                <tr class="slds-hint-parent">
                                    <td><apex:outputText value="{!wrp.Name}" title="test"/></td>
                                    <td><apex:outputText value="{!wrp.VisitOps__Description__c}" title="test" html-class="tableScrollLabel"/></td>
                                </tr>
                            </apex:repeat>                            
                        </tbody>
                    </table>
                    </apex:outputPanel>
                  </div> 
                  </div>
                            
                </div>            
                            
              </div>
            </article>
            </div>  
                 
            </apex:outputPanel>
            
            
            
            
            
            
            
            
            
            
            
            <apex:outputPanel rendered="{!!isProgramNeeded}">
                
                <div class="slds-p-around_small">
                    <article class="slds-card">
                        <div class="slds-card__header slds-grid slds-border_bottom">
                            <header class="slds-media slds-media_center slds-has-flexi-truncate ">
                                <div class="slds-media__body">
                                    <h2 class="slds-card__header-title" ><b style="font-size: larger;">NEW VISIT</b></h2>  
                                </div>
                                <div>
                                    <apex:commandButton styleClass="slds-button slds-button_brand slds-m-bottom_small" value="Go" action="{!go}" rerender="pgMsgsId" oncomplete="handleInit();" status="progressIndicator"/>&nbsp;
                                    <apex:commandButton styleClass="slds-button slds-button_brand slds-m-bottom_small" value="Cancel" onClick="actionCancelJS('{!recordIdFromURL}');"/>
                                </div>
                            </header>
                        </div>
                        <div class="slds-card__body slds-card__body_inner">
                            <div>
                                <div class="slds-form slds-form_horizontal">
                                    <div class="slds-grid slds-wrap slds-gutters">
                                        <div class="slds-col slds-size_1-of-1 slds-medium-size_3-of-6">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for=""><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Location__c.Label}"/></label>
                                                <div class="slds-form-element__control">
                                                    <apex:selectList value="{!selectedLocationId}" size="1" styleClass="slds-select" onchange="fetchVisitTypes();" id="locationOptionsId">
                                                        <apex:selectOptions value="{!locationOptions}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>   
                                        </div>
                                    </div>
                                    <div class="slds-grid slds-wrap slds-gutters">
                                        <div class="slds-col slds-size_1-of-1 slds-medium-size_3-of-6">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label" for=""><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitType__c.Label}"/></label>
                                                <div class="slds-form-element__control">               
                                                    <apex:selectList value="{!selectedVisitTypeId}" size="1" id="visitTypesOptionsId" styleClass="slds-select">
                                                        <apex:selectOptions value="{!visitTypeOptions}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>   
                                        </div>              
                                    </div>                   
                  </div>
                </div>
                <div class="slds-scrollable_x">
                     <apex:outputPanel style="display:{!If(showLocVisitTypeDescription == true,'','none')}" id="vtLocDescID">
                    <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-cell-wrap" style="font-size:13px">
                        <thead>
                            <tr class="slds-line-height_reset">
                                <th class="slds-text-title_caps" scope="col">
                                    <div title="Opportunity Name">VISIT TYPE</div>
                                </th>
                                <th class="slds-text-title_caps" scope="col">
                                    <div title="Account Name">DESCRIPTION</div>
                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            
                            <apex:repeat value="{!locVisitTypesListUI}" var="wrp" id="vtLocDescTable">
                                <tr class="slds-hint-parent">
                                    <td><apex:outputText value="{!wrp.Name}" title="test"/></td>
                                    <td><apex:outputText value="{!wrp.VisitOps__Description__c}" title="test" html-class="tableScrollLabel"/></td>
                                </tr>
                            </apex:repeat>                            
                        </tbody>
                    </table>
                    </apex:outputPanel>
                  </div>
              </div>
            </article>
            </div> 
        </apex:outputPanel>
    </apex:outputPanel>
    
    <!--Edit Page-->
    <apex:outputPanel id="visitScreenViewPanelId" rendered="{!allowNextStep}">
        <div class="VisitScreen">
         <div class="row">
          <div class="col-md-4 heading form-group" style="padding:7px 24px;">Visit Edit</div>
          <div class="col-md-4 form-group">
            <!--<button type="button" class="btn btn-default btn-sm">Submit</button>
            <button type="button" class="btn btn-default btn-sm">Save</button>
            <button type="button" class="btn btn-default btn-sm">Cancel</button>-->
            
            <!-- <apex:commandButton styleClass="btn btn-default btn-sm" value="Submit" rendered="{!isSubmitAllowed}" action="{!submitVisit}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange('submit',{!isRoomValid},'{!invalidRoomMessage}');redirectForMobile('{!isSubmitSuccess}','{!Visit__c.id}');" style="margin-left:3px;"/>
            <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!save}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange('save',{!isRoomValid},'{!invalidRoomMessage}');redirectForMobile('{!isSaveSuccess}','{!Visit__c.id}');" style="margin-left:3px;"/> -->
            
            <apex:outputPanel rendered="{!isSubmitAllowed}">
                <button type="button" class="btn btn-default btn-sm" onclick="submitJS();" style="margin-left:3px;">Submit</button>
            </apex:outputPanel>
            <button type="button" class="btn btn-default btn-sm" onclick="saveJS();" style="margin-left:3px;">Save</button>
            <button type="button" class="btn btn-default btn-sm" onclick="actionCancelJS();">Cancel</button>
          </div>
          <div class="col-md-4 form-group"><span class="requiredExample">= Required Information</span></div>
        </div>
        </div>
        
        <div class="panel-group" id="accordion">
            <!-- Visit Panel -->
            <div class="panel panel-default" id="visitpanel">
                <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapseVisit"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/downArrow.png')}" data-toggle="collapse" data-target="#collapseVisit"/></span>Visit</a></h4>
                </div>
               <!--<a data-toggle="collapse" data-target="#collapseVisit" href="#collapseVisit">
                    <div class="panel-heading">
                        <h4 class="panel-title"><span class="plus pull-right">+</span>Visit</h4>
                    </div>
                </a>-->
                <div id="collapseVisit" class="panel-collapse in">
                    <div class="panel-body">
                        <div class="row">
                        <div class="col-md-4 form-group">
                            <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitName__c.Label}" for="visitNameId" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitName__c.inlineHelpText}"/></label>
                            <div class="requiredBlock"></div>
                            <apex:inputField value="{!VisitOps__Visit__c.VisitOps__VisitName__c}" id="visitNameId" styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}"/>
                        </div>
                        <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__TotalNoOfAttendees__c.Label}" for="totalNoOfAttendeesId" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__TotalNoOfAttendees__c.inlineHelpText}"/></label>
                                <div class="requiredBlock"></div>
                                <!--<input class="form-control" id="textbox1" type="text" value=""/>-->
                                <apex:inputField value="{!VisitOps__Visit__c.VisitOps__TotalNoOfAttendees__c}" id="totalNoOfAttendeesId" styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" onChange="" onkeydown="validateno(event);"/>
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 form-group">
                            <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ArrivalDateTimeLocationTZ__c.Label}" for="arrDateLocTZID" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ArrivalDateTimeLocationTZ__c.inlineHelpText}"/></label>
                            <div class="requiredBlock"></div>
                            <!--<input type="text" class="form-control" id="pwd" value=""/>-->
                            <!--<apex:actionRegion >
                                <apex:inputText styleClass="form-control" value="{!locationTZArrivalDateTimeString}" id="arrDateLocTZID" onfocus="DatePicker.pickDate(true, '{!$Component.arrDateLocTZID}', true);">
                                    <apex:actionSupport event="onchange" action="{!calculateUserTZDateTimeValues}" rerender="arrDateID,pgMsgsId" status="progressIndicator" oncomplete="loadCalendar();">
                                        <apex:param name="contextField" value="arrivalDateTime"/>
                                    </apex:actionSupport>
                                </apex:inputText>
                            </apex:actionRegion>-->
                             <apex:actionRegion >
                                <apex:outputPanel rendered="{!!isMobileDevice}">
                                    <apex:inputText styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:45% !important;display:inline !important;" value="{!locationTZArrivalTimeString_Only_Date}" id="arrivalTimeLocTZID_date" html-placeholder="Arrival Date" onChange="updatelocationTZArrivalTimeStringJS();" onfocus="DatePicker.pickDate(true, '{!$Component.arrivalTimeLocTZID_date}', false);">
                                        
                                    </apex:inputText>&nbsp;
                                    <apex:inputText styleClass="form-control timePickerTextBox {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:30% !important;display:inline !important;" value="{!locationTZArrivalTimeString_Only_Time}" id="arrivalTimeLocTZID_time" html-data-id="ArrivalDateTime_time" html-placeholder="Arrival Time" onChange="updatelocationTZArrivalTimeStringJS();">
                                        
                                    </apex:inputText>
                                    <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="arrdatetime1">
                                        [ <a href="javascript:void(0);" class="{!IF(isVisitEditAllowedforSalesUser,'disableField','')}" onClick="$('[id$=arrivalTimeLocTZID_time]').val('{!currentTime}');updatelocationTZArrivalTimeStringJS();">{!currentTime}</a> ]
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <!-- Mobile Fields -->
                                <apex:outputPanel id="startTimeMobileFields" rendered="{!isMobileDevice}">
                                    <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="EditStartTimeFields">
                                        <input type="date" class="input-flexbox form-control" value="{!locationTZArrivalTimeString_Only_Date}" id="arrivalTimeLocTZID_date_mob" style="width:45% !important;display:inline !important;" placeholder="Arrival Date" onBlur="updatelocationTZArrivalTimeStringJS_Mobile(event);" onChange="updatelocationTZArrivalTimeStringJS_Mobile(event);"/>
                                        <input type="time" class="input-flexbox form-control" value="{!locationTZArrivalTimeString_Only_Time}" id="arrivalTimeLocTZID_time_mob" style="width:30% !important;display:inline !important;" placeholder="Arrival Time" onBlur="updatelocationTZArrivalTimeStringJS_Mobile(event);" onChange="updatelocationTZArrivalTimeStringJS_Mobile(event);"/>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser}" id="disabledStartTimeFields">
                                        <input type="date" class="input-flexbox form-control" value="{!locationTZArrivalTimeString_Only_Date}" style="width:45% !important;display:inline !important;" disabled="disabled"/>
                                        <input type="time" class="input-flexbox form-control" value="{!locationTZArrivalTimeString_Only_Time}" style="width:30% !important;display:inline !important;" disabled="disabled"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <apex:actionFunction name="updateUserTZArrivalDateTimeValues" action="{!calculateUserTZDateTimeValues}" rerender="arrDateID,pgMsgsId,startTimeId" status="progressIndicator" onComplete="">
                                    <apex:param name="contextField" value="arrivalDateTime"/>
                                    <apex:param name="locationTZArrivalDateTimeString" value="" assignTo="{!locationTZArrivalDateTimeString}"/>
                                </apex:actionFunction>
                                    
                                <apex:inputHidden value="{!locationTZArrivalDateTimeString}" id="arrivalTimeLocTZID" html-placeholder="Enter Arrival Date & Time">
                                    <apex:actionSupport event="onchange" action="{!calculateUserTZDateTimeValues}" rerender="arrDateID,pgMsgsId" status="progressIndicator">
                                        <apex:param name="contextField" value="arrivalDateTime"/>
                                    </apex:actionSupport>
                                </apex:inputHidden>
                            </apex:actionRegion>
                        </div>
                            
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__DepartureDateTimeLocationTZ__c.Label}" for="depDateLocTZID" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__DepartureDateTimeLocationTZ__c.inlineHelpText}"/></label>
                                <div class="requiredBlock"></div>
                                <!--<input class="form-control" id="textbox2" type="text" value="" />-->
                                <!--<apex:actionRegion >-->
                                <!-- <apex:inputField value="{!Visit__c.DepartureDateTimeLocationTZ__c}" id="depDateLocTZID"    onfocus="DatePicker.pickDate(true, '{!$Component.depDateLocTZID}', true);"> -->
                                    <!--<apex:inputText styleClass="form-control" value="{!locationTZDepartureDateTimeString}" id="depDateLocTZID" onfocus="DatePicker.pickDate(true, '{!$Component.depDateLocTZID}', true);">
                                        <apex:actionSupport event="onchange" action="{!calculateUserTZDateTimeValues}" rerender="depDateID,pgMsgsId" status="progressIndicator" oncomplete="loadCalendar();">
                                            <apex:param name="contextField" value="departureDateTime"/>
                                        </apex:actionSupport>
                                    </apex:inputText>
                                </apex:actionRegion>-->
                                <apex:actionRegion >
                                    <apex:outputPanel rendered="{!!isMobileDevice}">
                                        <apex:inputText styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:45% !important;display:inline !important;" value="{!locationTZDepartureTimeString_Only_Date}" id="departureTimeLocTZID_date" html-placeholder="Departure Date" onChange="updatelocationTZDepartureTimeStringJS();" onfocus="DatePicker.pickDate(true, '{!$Component.departureTimeLocTZID_date}', false);">
                                            
                                        </apex:inputText>&nbsp;
                                        <apex:inputText styleClass="form-control timePickerTextBox {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:30% !important;display:inline !important;" value="{!locationTZDepartureTimeString_Only_Time}" id="departureTimeLocTZID_time" html-data-id="DepartureDateTime_time" html-placeholder="Departure Time" onChange="updatelocationTZDepartureTimeStringJS();">
                                            
                                        </apex:inputText>
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="departuretime1">
                                            [ <a href="javascript:void(0);" class="{!IF(isVisitEditAllowedforSalesUser,'disableField','')}" onClick="$('[id$=departureTimeLocTZID_time]').val('{!currentTime}');updatelocationTZDepartureTimeStringJS();">{!currentTime}</a> ]
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <!-- Mobile Fields -->
                                    <apex:outputPanel id="endTimeMobileFields" rendered="{!isMobileDevice}">
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser && isMobileDevice}" id="EditEndTimeFields">
                                            <input type="date" class="input-flexbox form-control" value="{!locationTZDepartureTimeString_Only_Date}" id="departureTimeLocTZID_date_mob" style="width:45% !important;display:inline !important;" placeholder="Departure Date" onBlur="updatelocationTZDepartureTimeStringJS_Mobile(event);" onChange="updatelocationTZDepartureTimeStringJS_Mobile(event);"/>
                                            <input type="time" class="input-flexbox form-control" value="{!locationTZDepartureTimeString_Only_Time}" id="departureTimeLocTZID_time_mob" style="width:30% !important;display:inline !important;" placeholder="Departure Time" onBlur="updatelocationTZDepartureTimeStringJS_Mobile(event);" onChange="updatelocationTZDepartureTimeStringJS_Mobile(event);"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser && isMobileDevice}" id="disabledEndTimeFields">
                                            <input type="date" class="input-flexbox form-control" value="{!locationTZDepartureTimeString_Only_Date}" style="width:45% !important;display:inline !important;" disabled="disabled"/>
                                            <input type="time" class="input-flexbox form-control" value="{!locationTZDepartureTimeString_Only_Time}" style="width:30% !important;display:inline !important;" disabled="disabled"/>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:actionFunction name="updateUserTZDepartureDateTimeValues" action="{!calculateUserTZDateTimeValues}" rerender="depDateID,pgMsgsId,endTimeId" status="progressIndicator" onComplete="">
                                        <apex:param name="contextField" value="departureDateTime"/>
                                        <apex:param name="locationTZDepartureTimeString" value="" assignTo="{!locationTZDepartureTimeString}"/>
                                    </apex:actionFunction>
                                
                                    <apex:inputHidden value="{!locationTZDepartureDateTimeString}" id="departureTimeLocTZID" html-placeholder="Enter End Date & Time">
                                        <apex:actionSupport event="onchange" action="{!calculateUserTZDateTimeValues}" rerender="depDateID,pgMsgsId,endTimeId" status="progressIndicator">
                                            <apex:param name="contextField" value="departureDateTime"/>
                                        </apex:actionSupport>
                                    </apex:inputHidden>
                                </apex:actionRegion>
                            </div>                            
                        </div>
                        <div class="row" style="display:none;">
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Location__c.Label}" for="locID" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Location__c.inlineHelpText}"/></label>
                                <!--<input class="form-control" id="textbox1" type="text" value="" disabled="disabled"/>-->
                                <apex:inputText value="{!VisitOps__Visit__c.Location__r.Name}" id="locID" disabled="true" styleClass="form-control"/>
                            </div>
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitType__c.Label}" for="visitType" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitType__c.inlineHelpText}"/></label>
                                <!--<input class="form-control" id="textbox1" type="text" value=""/>-->
                                <apex:inputText value="{!VisitOps__Visit__c.VisitType__r.Name}" id="visitType" disabled="true" styleClass="form-control"/>
                            </div>
                        </div>
                        <div class="row" style="display:none;">
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ArrivalDateTime__c.Label}" for="arrDateID" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ArrivalDateTime__c.inlineHelpText}"/></label>
                                <!--<input class="form-control" id="textbox2" type="text" value="" disabled="disabled"/>
                                <p style="font-size:12px;font-weight:bold;color:#d95d2e;">(Auto populates from Location field)</p>-->
                                <apex:inputText value="{!userTZArrivalDateTimeString}" id="arrDateID" disabled="true" styleClass="form-control"/>
                                <p style="font-size:12px;font-weight:bold;color:#d95d2e;"><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__ArrivalDateTime__c.inlineHelpText}"/></p>
                            </div>
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__DepartureDateTime__c.Label}" for="depDateID" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__DepartureDateTime__c.inlineHelpText}"/></label>
                                <!--<input class="form-control" id="textbox2" type="text" value="" disabled="disabled"/>
                                <p style="font-size:12px;font-weight:bold;color:#d95d2e;">(Auto populates from Location field)</p>-->
                                <apex:inputText value="{!userTZDepartureDateTimeString}" id="depDateID" disabled="true" styleClass="form-control"/>
                                <p style="font-size:12px;font-weight:bold;color:#d95d2e;"><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__DepartureDateTime__c.inlineHelpText}"/></p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitStatus__c.Label}" for="statusOptionsId" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__VisitStatus__c.inlineHelpText}"/></label>
                                <div class="requiredBlock"></div>
                                <!--
                                <select class="form-control" name="assetsub_category" id="assetsub_category" required="required" value="">
                                    <option value="">--Select--</option>
                                    <option value="subcategory1">New Business</option>
                                    <option value="subcategory2">Partnership</option>
                                    <option value="subcategory3">Prospect</option>
                                </select>
                                -->
                               <apex:inputText value="{!VisitOps__Visit__c.VisitStatus__r.Name}" styleClass="form-control" disabled="true" id="statusTextId" rendered="{!OR(Not(isVisitTeamUser),isNewVisit,isVisitEditAllowedforSalesUser)}"/>
                               <apex:selectList styleClass="form-control" value="{!VisitOps__Visit__c.VisitOps__VisitStatus__c}" size="1" id="statusOptionsId" rendered="{!NOT(OR(Not(isVisitTeamUser),isNewVisit,isVisitEditAllowedforSalesUser))}" onchange="handleStatusChange(this);">
                                   <apex:selectOptions value="{!statusOptions}"/>
                               </apex:selectList>
                            </div>
                            <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Room__c.Label}" for="room" title="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Room__c.inlineHelpText}"/></label>
                                <!--<input class="form-control" id="textbox2" type="text" value="" disabled="disabled"/>
                                <a href="#" style="text-decoration:underline;">check Availability</a>-->
                                
                                <!-- <apex:variable var="isRequired" value="{!OR(selectedVisitTypeCategory == 'CV1', selectedVisitTypeCategory == 'CV2')}"/> -->
                                <!--<apex:inputText value="{!Visit__c.Room__r.Name}" styleClass="form-control {!IF(isRequired, 'reqField', '')}" id="room" disabled="true" required="{!isRequired}"/>-->
                                <apex:selectList styleClass="form-control" disabled="{!IF(OR(availableRoomsPicklist.size==1,isVisitEditAllowedforSalesUser,NOT(isRoomBookingAllowed)),true,false)}" value="{!bookedRoomId}" id="roomsPicklist" size="1" onChange="handleRoomBooking(this);" style="margin-bottom:5px;">
                                    <apex:selectOptions value="{!availableRoomsPicklist}"/>
                                </apex:selectList>
                                <!--<apex:outputPanel id="checkAvailabilityPanel" rendered="{!Not(selectedVisitTypeCategory == 'Offsite')}">-->
                                <apex:outputPanel id="checkAvailabilityPanel" rendered="{!isRoomBookingAllowed && NOT(isVisitEditAllowedforSalesUser)}">
                                    <!-- <apex:commandLink onclick="openCalendar('{!$Component.arrDateID}','{!$Component.depDateID}','{!$Component.locID}');" title="Check Availability" value="Check Availability" rerender="dummy"/> -->
                                    
                                    <!-- <apex:commandLink onclick="openCalendar('{!$Component.arrDateID}','{!$Component.depDateID}','{!$Component.locID}','{!$Component.totalNoOfAttendeesId}');" title="Check Availability" value="Check Availability" rerender="dummy"/> -->
                                    <!--<apex:commandLink style="text-decoration:underline;" onclick="validateCheckAvailabilityJS('{!$Component.arrDateID}','{!$Component.depDateID}','{!$Component.totalNoOfAttendeesId}');" title="Check Availability" value="Check Availability" rerender="dummy"/>-->
                                    <apex:commandLink style="text-decoration:underline;font-weight: bold;font-size:1.1em;" onclick="loadCalendar(true);" title="Check Availability" value="Check Availability" rerender="dummy"/>
                                </apex:outputPanel>
                                <apex:outputPanel id="roomBookingMessagePanel" rendered="{!NOT(isRoomBookingAllowed)}">
                                    <apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Room__c.inlineHelpText}"/>
                                </apex:outputPanel>
                            </div>                            
                        </div>
                        <div class="row">
                            <div class="timePicker" id="simpleTimePicker">
                                <apex:repeat value="{!timePickerTimingsList}" var="t">
                                    <div class="specificTime" id="timePickerItem_{!SUBSTITUTE(SUBSTITUTE(t,':','_'),' ','_')}">{!t}</div>
                                </apex:repeat>
                            </div>
                        </div> 
                      
                        <!-- Visit Section FIELDSET BEGIN -->
                        
                            <apex:variable var="count" value="{!0}"/>
                            <apex:repeat value="{!visitSectionFieldSetIteratorList}" var="i"> 
                                <div class="row">
                                    <apex:outputPanel styleClass="col-md-4 form-group" layout="block" rendered="{!i<visitSectionFields.size}">
                                        <apex:outputLabel value="{!visitSectionFields[i].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[visitSectionFields[i]].inlineHelpText}"/>
                                        
                                        <apex:variable var="isRequired" value="{!OR(visitSectionFields[i].required, visitSectionFields[i].dbrequired)}"/>
                                        <!-- Don't apply form-control class to checkboxes -->
                                        <apex:variable var="fieldStyleClass" value="{!IF(visitSectionFields[i].type=='boolean', '', IF(visitSectionFields[i].type=='reference', 'lookupCustomCss', 'form-control'))}"/>
                                        
                                        <!-- Add Red bar indicator manually and not based on 'required' attribute of inputfield tag as it prevents custom validation in save method and triggers Salesforce validation which dont allow all validation messages to be displayed at a time -->
                                        <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}">
                                            <apex:inputField styleClass="{!fieldStyleClass}" value="{!VisitOps__Visit__c[visitSectionFields[i].fieldPath]}" html-data-id="{!visitSectionFields[i].fieldPath}"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser}">
                                            <input type="text" class="form-control" value="{!VisitOps__Visit__c[visitSectionFields[i].fieldPath]}" disabled="true" readonly="true" style="display:{!IF(visitSectionFields[i].type!='reference','','none')}"/>
                                            <apex:outputField styleClass="{!fieldStyleClass}" value="{!VisitOps__Visit__c[visitSectionFields[i].fieldPath]}" html-data-id="{!visitSectionFields[i].fieldPath}" rendered="{!IF(visitSectionFields[i].type=='reference',true,false)}"/>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:outputPanel styleClass="col-md-4 form-group" layout="block" rendered="{!(i+1)<visitSectionFields.size}">
                                        <apex:outputLabel value="{!visitSectionFields[i+1].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[visitSectionFields[i+1]].inlineHelpText}"/>
                                        
                                        <apex:variable var="isRequired" value="{!OR(visitSectionFields[i+1].required, visitSectionFields[i+1].dbrequired)}"/>
                                        <!-- Don't apply form-control class to checkboxes -->
                                        <apex:variable var="fieldStyleClass" value="{!IF(visitSectionFields[i+1].type=='boolean', '', IF(visitSectionFields[i+1].type=='reference', 'lookupCustomCss', 'form-control'))}"/>
                                        
                                        <!-- Add Red bar indicator manually and not based on 'required' attribute of inputfield tag as it prevents custom validation in save method and triggers Salesforce validation which dont allow all validation messages to be displayed at a time -->
                                        <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}">
                                            <apex:inputField styleClass="{!fieldStyleClass}" value="{!VisitOps__Visit__c[visitSectionFields[i+1].fieldPath]}" html-data-id="{!visitSectionFields[i+1].fieldPath}"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser}">
                                            <input type="text" class="form-control" value="{!VisitOps__Visit__c[visitSectionFields[i+1].fieldPath]}" disabled="true" readonly="true" style="display:{!IF(visitSectionFields[i+1].type!='reference','','none')}"/>
                                            <apex:outputField styleClass="{!fieldStyleClass}" value="{!VisitOps__Visit__c[visitSectionFields[i+1].fieldPath]}" html-data-id="{!visitSectionFields[i+1].fieldPath}" rendered="{!IF(visitSectionFields[i+1].type=='reference',true,false)}"/>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <apex:variable var="count" value="{!count+1}"/>
                                </div>
                            </apex:repeat>
                    </div>
                </div>
            </div>
            <!-- Priyanka Multi Room Booking Section-->
            <div class="panel panel-default" id="visitMultiRoom" style="display:{!IF((NOT(allowMultiRoom || showAddRooms) || isVisitEditAllowedforSalesUser),'none','')}">
                <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapsevisitMultiRoom"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/SideArrow.png')}" data-toggle="collapse" data-target="#collapsevisitMultiRoom"/></span>Additional Rooms</a></h4>

                    </div>
                            <div id="collapsevisitMultiRoom" class="panel-collapse collapse"> 
                                <div class="panel-body">
                                <apex:actionRegion >
                             
                                    <apex:actionFunction name="validateRoomCheckAvailability" action="{!validateRoomCheckAvailability}" rerender="pgMsgsId,roomPanel" status="progressIndicator"  >
                                    <apex:param name="startTime" value=""/>
                                    <apex:param name="EndTime" value=""/>
                                    <apex:param name="locationvalue" value=""/>
                                    </apex:actionFunction>
                                </apex:actionRegion>
                                 <apex:actionRegion >
                                <apex:actionFunction name="cancelUnAvailableRooms" action="{!cancelUnAvailableRooms}" reRender="dummy" status="progressIndicator" onComplete="saveAgendaSession(redirectToTimelineVar,sendInvites);">
                                </apex:actionFunction>
                                
                            </apex:actionRegion>
                          
                                             <!--<div class="row" style="display:{!IF((NOT(allowMultiRoom) || isVisitEditAllowedforSalesUser),'none','')}">
                                                 <div class="col-md-4 form-group">
                                            <apex:outputPanel id="locationPanel">
                                            <apex:outputLabel value="{!$ObjectType.VisitOps__Visit__c.fields.VisitOps__Location__c.Label}"/>
                                            <apex:selectList value="{!selectedMultiRoomLocationId}"  onChange="renderRooms();" size="1" styleClass="form-control"  id="MultilocationOptionsId">
                                            <apex:selectOptions value="{!MultiRoomlocationOptions}"/>
                                            </apex:selectList> <br/> <br/>
                                            </apex:outputPanel>
                                            </div>
                                       </div>   -->
                                 <div class="row" style="display:{!IF((NOT(allowMultiRoom) || isVisitEditAllowedforSalesUser),'none','')}">       
                            <div class="col-md-4 form-group" >
                            <label><apex:outputLabel value="Start Time (Location)" for="startDateLocTZID" title="Start Time (Location)"/></label>
                            <div class="requiredBlock"></div>
                                 <apex:actionRegion >
                                <apex:outputPanel rendered="{!!isMobileDevice}">
                                    <apex:inputText styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:45% !important;display:inline !important;" value="{!locationTZstartTimeString_Only_Date}" id="startTimeLocTZID_date" html-placeholder="Start Date" onChange="updatelocationTZStartTimeStringJS();" onfocus="DatePicker.pickDate(true, '{!$Component.startTimeLocTZID_date}', false);">
                                        
                                    </apex:inputText>&nbsp;
                                    <apex:inputText styleClass="form-control timePickerTextBox {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:30% !important;display:inline !important;" value="{!locationTZstartTimeString_Only_Time}" id="startTimeLocTZID_time" html-data-id="StartDateTime_time" html-placeholder="Start Time" onChange="updatelocationTZStartTimeStringJS();">
            
                                    </apex:inputText>
                                    <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="startdatetime1">
                                        [ <a href="javascript:void(0);" class="{!IF(isVisitEditAllowedforSalesUser,'disableField','')}" onClick="$('[id$=startTimeLocTZID_time]').val('{!currentTime}');updatelocationTZStartTimeStringJS();">{!currentTime}</a> ]
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <!-- Mobile Fields -->
                                <apex:outputPanel id="roomTimeMobileFields" rendered="{!isMobileDevice}">
                                    <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="roomEditStartTimeFields">
                                        <input type="date" class="input-flexbox form-control" value="{!locationTZstartTimeString_Only_Date}" id="startTimeLocTZID_date_mob" style="width:45% !important;display:inline !important;" placeholder="start Date" onBlur="updatelocationTZStartTimeStringJS_Mobile(event);" onChange="updatelocationTZstartTimeStringJS_Mobile(event);"/>
                                        <input type="time" class="input-flexbox form-control" value="{!locationTZstartTimeString_Only_Time}" id="startTimeLocTZID_time_mob" style="width:30% !important;display:inline !important;" placeholder="start Time" onBlur="updatelocationTZstartTimeStringJS_Mobile(event);" onChange="updatelocationTZstartTimeStringJS_Mobile(event);"/>
                                    </apex:outputPanel>
                                    <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser}" id="roomdisabledStartTimeFields">
                                        <input type="date" class="input-flexbox form-control" value="{!locationTZstartTimeString_Only_Date}" style="width:45% !important;display:inline !important;" disabled="disabled"/>
                                        <input type="time" class="input-flexbox form-control" value="{!locationTZstartTimeString_Only_Time}" style="width:30% !important;display:inline !important;" disabled="disabled"/>
                                    </apex:outputPanel>
                                </apex:outputPanel>
                                <apex:actionFunction name="updateUserTZStartDateTimeValues" action="{!calculateUserRoomTZDateTimeValues}" rerender="checkroomAvailabilityPanel,startTimeId,locationPanel,roomPanel,pgMsgsId" status="progressIndicator" onComplete="">
                                    <apex:param name="contextField" value="startDateTime"/>
                                    <apex:param name="locationTZstartDateTimeString" value="" assignTo="{!locationTZstartDateTimeString}"/>
                                </apex:actionFunction>
                                <apex:inputHidden value="{!locationTZstartDateTimeString}" id="startTimeLocTZID" html-placeholder="Enter start Date & Time">
                                    <apex:actionSupport event="onchange" action="{!calculateUserRoomTZDateTimeValues}" rerender="startTimeId,pgMsgsId" status="progressIndicator">
                                        <apex:param name="contextField" value="startDateTime"/>
                                    </apex:actionSupport>
                                </apex:inputHidden>
                            </apex:actionRegion>
                        </div>
                                   <apex:actionFunction name="bookselRoom" action="{!setMultiRoomId}" rerender="dummy" >
                                    <apex:param name="SelRoomId" value=""/>
                                     </apex:actionFunction>
                                     
                        <div class="col-md-4 form-group">
                                <label><apex:outputLabel value="End Time (Location)" for="endDateLocTZID" title="End Time (Location)"/></label>
                                <div class="requiredBlock"></div>
                                <apex:actionRegion >
                                    <apex:outputPanel rendered="{!!isMobileDevice}">
                                        <apex:inputText styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:45% !important;display:inline !important;" value="{!locationTZendTimeString_Only_Date}" id="endTimeLocTZID_date" html-placeholder="End Date" onChange="updatelocationTZEndTimeStringJS();" onfocus="DatePicker.pickDate(true, '{!$Component.endTimeLocTZID_date}', false);">
                                            
                                        </apex:inputText>&nbsp;
                                        <apex:inputText styleClass="form-control timePickerTextBox {!IF(isVisitEditAllowedforSalesUser,'disableField','')}" style="width:30% !important;display:inline !important;" value="{!locationTZendTimeString_Only_Time}" id="endTimeLocTZID_time" html-data-id="endDateTime_time" html-placeholder="End Time" onChange="updatelocationTZEndTimeStringJS();">
                                            
                                        </apex:inputText>
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser}" id="endtime1">
                                            [ <a href="javascript:void(0);" class="{!IF(isVisitEditAllowedforSalesUser,'disableField','')}" onClick="$('[id$=endTimeLocTZID_time]').val('{!currentTime}');updatelocationTZEndTimeStringJS();">{!currentTime}</a> ]
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                    <!-- Mobile Fields -->
                                    <apex:outputPanel id="roomendTimeMobileFields" rendered="{!isMobileDevice}">
                                        <apex:outputPanel rendered="{!!isVisitEditAllowedforSalesUser && isMobileDevice}" id="roomEditEndTimeFields">
                                            <input type="date" class="input-flexbox form-control" value="{!locationTZendTimeString_Only_Date}" id="endTimeLocTZID_date_mob" style="width:45% !important;display:inline !important;" placeholder="End Date" onBlur="updatelocationTZendTimeStringJS_Mobile(event);" onChange="updatelocationTZendTimeStringJS_Mobile(event);"/>
                                            <input type="time" class="input-flexbox form-control" value="{!locationTZendTimeString_Only_Time}" id="endTimeLocTZID_time_mob" style="width:30% !important;display:inline !important;" placeholder="End Time" onBlur="updatelocationTZendTimeStringJS_Mobile(event);" onChange="updatelocationTZendTimeStringJS_Mobile(event);"/>
                                        </apex:outputPanel>
                                        <apex:outputPanel rendered="{!isVisitEditAllowedforSalesUser && isMobileDevice}" id="roomdisabledEndTimeFields">
                                            <input type="date" class="input-flexbox form-control" value="{!locationTZendTimeString_Only_Date}" style="width:45% !important;display:inline !important;" disabled="disabled"/>
                                            <input type="time" class="input-flexbox form-control" value="{!locationTZendTimeString_Only_Time}" style="width:30% !important;display:inline !important;" disabled="disabled"/>
                                        </apex:outputPanel>
                                    </apex:outputPanel>
                                  <apex:actionFunction name="updateUserTZEndDateTimeValues" action="{!calculateUserRoomTZDateTimeValues}" rerender="checkroomAvailabilityPanel,endTimeId,endDateID,locationPanel,roomPanel,pgMsgsId" status="progressIndicator" onComplete="">
                                        <apex:param name="contextField" value="endDateTime"/>
                                        <apex:param name="locationTZendTimeString" value="" assignTo="{!locationTZendTimeString}"/>
                                    </apex:actionFunction>
                                    <apex:inputHidden value="{!locationTZendDateTimeString}" id="EndTimeLocTZID" html-placeholder="Enter End Date & Time">
                                        <apex:actionSupport event="onchange" action="{!calculateUserRoomTZDateTimeValues}" rerender="endTimeId,pgMsgsId" status="progressIndicator">
                                            <apex:param name="contextField" value="endDateTime"/>
                                        </apex:actionSupport>
                                    </apex:inputHidden>
                                </apex:actionRegion>
                            </div>  
                          
                            </div>
                            
                             <div class="row" style="display:{!IF((NOT(allowMultiRoom) ||  isVisitEditAllowedforSalesUser),'none','')}">
                                 
                                     <div class="col-md-4 form-group">
                                            <apex:outputLabel value="Room" for="endDateLocTZID" title="Room"/>
                                            <div class="field">
                                            <apex:outputPanel id="roomPanel">
                                            <apex:selectList id="MultiroomId" value="{!MultiroomId}" onchange="showconsole();" size="1" disabled="{!IF(OR(roomOptions.size==1,isVisitEditAllowedforSalesUser,NOT(isRoomBookingAllowed)),true,false)}" styleClass="form-control">
                                                <apex:selectOptions value="{!roomOptions}"></apex:selectOptions>
                                            </apex:selectList> &nbsp;
                                            </apex:outputPanel></div>
                                            <apex:outputPanel id="checkroomAvailabilityPanel" rendered="{!isRoomBookingAllowed && NOT(isVisitEditAllowedforSalesUser)}">

                                     <apex:commandLink onclick="validateRoomCheckAvailabilityJS('{!$Component.startTimeId}','{!$Component.endTimeId}');" title="Check Availability" value="Check Availability" rerender="dummy" style="text-decoration:underline;font-weight: bold;font-size:1.1em;padding-top:20px;" />
                                       </apex:outputpanel>
                                            </div>
                                            <div class="col-md-4 form-group">
                                                <br/>
                                        <div class="field">
                                         <apex:outputPanel id="bookRoomPanel">
                                            <apex:commandButton id="bookRoomId2" value="Book Room" action="{!bookroom}" onComplete="renderRooms();" reRender="bookedRoomsTable,roomPanel,pgMsgsId" status="progressIndicator" styleClass="btn btn-default btn-sm;" style="padding-bottom:7px;" />
                                            </apex:outputPanel></div><br/> <br/>
                                    
                                    </div>
                                     </div>
                                   <div class="row" style="padding-top:-20px;display:{!IF((NOT(allowMultiRoom) || isVisitEditAllowedforSalesUser),'none','')}">
                                       <div class="col-md-4 form-group">
                                                                           
                                         </div>
                                    </div>
                                   
                                    <div class="row" style="padding-right:20px;padding-left:20px">
                                            <apex:outputPanel id="bookedRoomsTable">
                                            <br/>
                                            <apex:outputLabel value="Booked Rooms"/>
                                            <table id="table1" class="list bookedRooms table table-striped table-bordered" cellpadding="0" cellspacing="0">
                                            <thead>
                                            <tr class="headerRow">
                                                
                                                <td>Location</td>
                                                <td>Room</td>
                                                <td>Start Date (User)</td>
                                                <td>End Date (User)</td>
                                                <td>Start Date (Room Location)</td>
                                                <td>End Date (Room Location)</td>
                                                <td>Status</td>
                                                <td>Action</td>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            <apex:repeat value="{!bookedRoomsWrapperList}" var="bookedRoom">
                                                <tr class="dataRow" style="background-color: {!IF(bookedRoom.isNotAvailable,'red','')}">
                                                    <td><apex:outputText value="{!bookedRoom.LocationName}"/></td>
                                                    <td><apex:outputText value="{!bookedRoom.RoomName}"/></td>
                                                    <td><apex:outputText value="{!bookedRoom.starttimeString} "> 
                                                    </apex:outputText></td>
                                                    <td><apex:outputText value="{!bookedRoom.EndtimeString}"> 

                                                    </apex:outputText></td>
                                                    <td><apex:outputText value="{!bookedRoom.StartRoomTimeString}"/></td>
                                                    <td><apex:outputText value="{!bookedRoom.EndRoomTimeString}"/></td>
                                                    <td><apex:outputText value="{!bookedRoom.Status}"/></td>
                                                    <td>
                                                        <apex:commandButton id="cancelButton" value="Cancel Room" rendered="{!(bookedRoom.RoomSaved && bookedRoom.Status == 'Booked' && !bookedRoom.ReBookRoom)}" action="{!bookedRoom.cancelRoomBooking}" reRender="bookedRoomsTable,pgMsgsId" status="progressIndicator" styleClass="btn btn-default btn-sm" onComplete="removeFromBookedRooms();"/>
                                                        <apex:commandButton id="removeButton" value="Remove" rendered="{!(!bookedRoom.RoomSaved || bookedRoom.ReBookRoom)}" action="{!bookedRoom.removeBooking}" reRender="bookedRoomsTable,pgMsgsId" status="progressIndicator" onComplete="removeFromBookedList();" styleClass="btn btn-default btn-sm"/>
                                                    </td>
                                                </tr>
                                            </apex:repeat> 
                                            </tbody>                             
                                            </table>
                                            </apex:outputPanel>
                        </div>  
                    </div>
                </div>
                          <div style="display:none;">
                 <div class="row" style="display:none;">
                    <div class="label">Start Date (User)</div>
                    <div class="field"> 
<!--                        <span style="display:none"><apex:outputField id="initialStartTimeId" value="{!finalLocationTZStartDateTimeString}"/></span>
-->                        <!-- Timezone Changes -->
                        <!-- <apex:inputField id="startTimeId" value="{!agendaRecord.Start_Time__c}" html-placeholder="Enter Start Date & Time" styleClass="reqField" required="true" /> -->
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputText required="true" value="{!userTZStartTimeString}" id="startTimeId" disabled="true"/>
                        </div>
                    </div>
                </div>
                <div class="row" style="display:none;">
                    <div class="label">End Date (User)</div>
                    <div class="field"> 
<!--                        <span style="display:none"><apex:outputField id="initialEndTimeId" value="{!finalLocationTZEndDateTimeString}"/></span>
-->                        <!-- Timezone Changes -->
                        <!-- <apex:inputField id="endTimeId" value="{!agendaRecord.End_Time__c}" html-placeholder="Enter End Date & Time" styleClass="reqField" required="true"/> -->
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputText required="true" value="{!userTZEndTimeString}" id="endTimeId" disabled="true"/>
                        </div>
                    </div>
                </div>
           
            <apex:actionFunction name="renderRooms" action="{!getRoomDetails}" reRender="roomPanel" status="progressIndicator">
                    <apex:param name="MultiroomId" value="" assignTo="{!MultiroomId}"/>
             </apex:actionFunction>
            <apex:actionFunction name="removeFromBookedList" action="{!removeBookingFromRoomBookingsWrapperList}" reRender="bookedRoomsTable" status="progressIndicator" onComplete="renderRooms();"/>
           <apex:actionFunction name="removeFromBookedRooms" action="{!removeBookingFromRoomBookingIds}" reRender="bookedRoomsTable" status="progressIndicator" onComplete="renderRooms();"/>

           </div>  
            </div> 
            
    
            <!-- Calendar display Section-->
            <div class="panel panel-default" id="visitcalendar" style="display:{!IF((NOT(isRoomBookingAllowed) || isVisitEditAllowedforSalesUser),'none','')}">
                <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapseVisitcalendar"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/SideArrow.png')}" data-toggle="collapse" data-target="#collapseVisitcalendar"/></span>Visit Calendar</a></h4>
                </div>
                <div id="collapseVisitcalendar" class="panel-collapse collapse">
                    <div class="panel-body">
                        <apex:actionRegion id="calendarRegion">
                            <apex:outputPanel id="calendarPanel">
                            <div class="row">
                                <iframe id="theIframe" width="100%" scrolling="yes" style="border:0px;"></iframe>
                            </div>
                            </apex:outputPanel>
                        </apex:actionRegion>
                    </div>
                </div>
            </div>
            
            <!-- Visit Offsite Panel -->
            <div class="panel panel-default" id="visitOffsitePanel" style="display:{!IF(selectedVisitTypeCategory == 'Offsite','block','none')}">
                <apex:outputPanel layout="block" rendered="{!selectedVisitTypeCategory == 'Offsite'}">
                <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapseVisitOffsite"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/downArrow.png')}" data-toggle="collapse" data-target="#collapseVisitOffsite"/></span>Offsite</a></h4>
                </div>
                <div id="collapseVisitOffsite" class="panel-collapse in">
                    <div class="panel-body">
                        <apex:repeat value="{!offsiteSectionFieldSetIteratorList}" var="i">
                            <div class="row">
                                <apex:outputPanel styleClass="colmedium" layout="block" rendered="{!i<offsiteSectionFields.size}">
                                    <div class="col-md-4 form-group">
                                        <apex:variable var="isRequired" value="{!OR(offsiteSectionFields[i].required, offsiteSectionFields[i].dbrequired)}"/>
                                        <apex:outputLabel value="{!offsiteSectionFields[i].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[offsiteSectionFields[i]].inlineHelpText}"/>
                                        <apex:outputPanel layout="{!IF(isRequired,'block','none')}" styleClass="requiredInput">
                                            <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                            <apex:inputField value="{!VisitOps__Visit__c[offsiteSectionFields[i].fieldPath]}" styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}"/>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                                <apex:outputPanel styleClass="colmedium" layout="block" rendered="{!(i+1)<offsiteSectionFields.size}">
                                    <div class="col-md-4 form-group">
                                        <apex:variable var="isRequired" value="{!OR(offsiteSectionFields[i+1].required, offsiteSectionFields[i+1].dbrequired)}"/>
                                        <apex:outputLabel value="{!offsiteSectionFields[i+1].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[offsiteSectionFields[i+1]].inlineHelpText}"/>
                                        <apex:outputPanel layout="{!IF(isRequired,'block','none')}" styleClass="requiredInput">
                                            <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                            <apex:inputField value="{!VisitOps__Visit__c[offsiteSectionFields[i+1].fieldPath]}" styleClass="form-control {!IF(isVisitEditAllowedforSalesUser,'disableField','')}"/>
                                        </apex:outputPanel>
                                    </div>
                                </apex:outputPanel>
                            </div>
                        </apex:repeat>
                    </div>
                </div>
                </apex:outputPanel>
            </div>
            
            
            <!-- Visit Strategy Panel -->
            <div class="panel panel-default" id="visitStrategyPanel">
                <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapseVisitStrategy"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/downArrow.png')}" data-toggle="collapse" data-target="#collapseVisitStrategy"/></span>Visit Strategy</a></h4>
                </div>
                <div id="collapseVisitStrategy" class="panel-collapse in">
                    <div class="panel-body">
                        <apex:repeat value="{!strategySectionFieldSetIteratorList}" var="i">
                            <div class="row">
                                <apex:outputPanel styleClass="col-md-4 form-group" layout="block" rendered="{!i<strategySectionFields.size}">
                                    <apex:outputLabel value="{!strategySectionFields[i].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[strategySectionFields[i]].inlineHelpText}"/>
                                    
                                    <apex:variable var="isRequired" value="{!OR(strategySectionFields[i].required, strategySectionFields[i].dbrequired)}"/>
                                    <!-- Don't apply form-control class to checkboxes -->
                                    <apex:variable var="fieldStyleClass" value="{!IF(strategySectionFields[i].type!='boolean', 'form-control', '')}"/>
                                    
                                    <!-- Add Red bar indicator manually and not based on 'required' attribute of inputfield tag as it prevents custom validation in save method and triggers Salesforce validation which dont allow all validation messages to be displayed at a time -->
                                    <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                    <apex:inputField value="{!VisitOps__Visit__c[strategySectionFields[i].fieldPath]}" style="resize: none;" styleClass="{!fieldStyleClass}"/>
                                </apex:outputPanel>
                                <apex:outputPanel styleClass="col-md-4 form-group" layout="block" rendered="{!(i+1)<strategySectionFields.size}">
                                    <apex:outputLabel value="{!strategySectionFields[i+1].Label}" title="{!$ObjectType.VisitOps__Visit__c.fields[strategySectionFields[i+1]].inlineHelpText}"/>
                                    
                                    <apex:variable var="isRequired" value="{!OR(strategySectionFields[i+1].required, strategySectionFields[i+1].dbrequired)}"/>
                                    <!-- Don't apply form-control class to checkboxes -->
                                    <apex:variable var="fieldStyleClass" value="{!IF(strategySectionFields[i+1].type!='boolean', 'form-control', '')}"/>
                                    
                                    <!-- Add Red bar indicator manually and not based on 'required' attribute of inputfield tag as it prevents custom validation in save method and triggers Salesforce validation which dont allow all validation messages to be displayed at a time -->
                                    <apex:outputPanel layout="block" rendered="{!isRequired}" styleClass="requiredBlock"></apex:outputPanel>
                                    <apex:inputField value="{!VisitOps__Visit__c[strategySectionFields[i+1].fieldPath]}" style="resize: none;" styleClass="{!fieldStyleClass}"/>
                                </apex:outputPanel>
                            </div>
                        </apex:repeat>
                        
                    </div>
                </div>
            </div>
            
            <!--- Account,Opportunities,Contacts grids + Modals Panel ---->
            <div class="panel panel-default" id="Accountpanel">
            <div class="panel-heading">
                    <h4 class="panel-title"><a data-toggle="collapse" data-target="#collapseAccounts"><span class="plus"><img src="{!URLFOR($Resource.VMSResources, 'images/downArrow.png')}" data-toggle="collapse" data-target="#collapseAccounts"/></span>Accounts, Opportunities and Attendees</a></h4>
            </div>
            <div id="collapseAccounts" class="panel-collapse in">
                <!--- AccountDeatils section -->
                <div class="AccountDeatils">
                    <div class="row">
                      <div class="col-md-4 heading form-group">Account Details</div>
                      <div class="col-md-4 form-group">
                        <button type="button" class="btn btn-default btn-sm" onclick="handleDeleteCompaniesRequest();">Delete</button>
                           
                        <button type="button" class="btn btn-default btn-sm" id="addAccounts" onClick="addAccountsPopupJS();">Add Accounts</button>
                        <apex:outputpanel rendered="{!isVisitTeamUser && isVisitSubmitted}">
                            <button type="button" class="createCompanyBtn btn btn-default btn-sm" onClick="createCompanyBtnPopupJS();">Add Company</button>
                        </apex:outputpanel>
                      </div>
                    </div>
                    <!--<apex:actionRegion id="companiesGridRegion">-->
                        <!-- delete companies-->
                        <apex:actionFunction name="deleteCompaniesJS" action="{!deleteCompanies}" rerender="companiesGrid,companiesGridPgMsgsId,visitOppsGrid,attendeesGrid" status="progressIndicator" oncomplete="resetCheckboxById('masterChkbx_compnsGrd')"/>
                                  
                        <!-- select a Record-->
                        <apex:actionFunction name="aSelectItemCompaniesGrid" action="{!companyGridObj.selectRecord}" rerender="companiesGrid,companiesGridPgMsgsId" status="progressIndicator">
                            <apex:param name="currentSObjId" value="" assignTo="{!companyGridObj.currentSObjId}"/>
                        </apex:actionFunction>
                        
                        <!-- deselect a Record-->
                        <apex:actionFunction name="aDeselectItemCompaniesGrid" action="{!companyGridObj.deselectRecord}" rerender="companiesGrid,companiesGridPgMsgsId" status="progressIndicator">
                            <apex:param name="currentSObjId" value="" assignTo="{!companyGridObj.currentSObjId}"/>
                        </apex:actionFunction>
                        
                        
                        <apex:actionFunction name="handleSelectionForCompaniesGrid" action="{!companyGridObj.handleRecordsSelectionChange}" rerender="companiesGrid,companiesGridPgMsgsId" status="progressIndicator">
                            <apex:param name="recordsSelectionJsonString" value="" assignTo="{!companyGridObj.recordsSelectionJsonString}"/>
                        </apex:actionFunction>
                        
                        <!-- Account Popup Actions -->
                                                    
                        <!--<apex:actionFunction name="populateAccountsGridJS" action="{!populateAccountsGrid}" rerender="accPopupGridPanel,accPopupPgMsgsId,acchelptext" oncomplete="resetCheckboxById('masterChkbx_compnsGrd');" status="progressIndicator" immediate="false"/>-->
                        <apex:actionFunction name="populateAccountsGridJS" action="{!populateAccountsGrid}" rerender="accPopupGridPanel,accPopupPgMsgsId,acchelptext" status="progressIndicator" immediate="false">
                            <apex:param name="accountJSON" value=""/>
                        </apex:actionFunction>
                        
                        <!-- select a Record-->
                        <apex:actionFunction name="aSelectItemSearchAccs" action="{!accGridObj.selectRecord}" rerender="accPopupGridPanel" status="progressIndicator">
                            <apex:param name="currentSObjId" value="" assignTo="{!accGridObj.currentSObjId}"/>
                        </apex:actionFunction>
                        
                        <!-- deselect a Record-->
                        <apex:actionFunction name="aDeselectItemSearchAccs" action="{!accGridObj.deselectRecord}" rerender="accPopupGridPanel" status="progressIndicator">
                            <apex:param name="currentSObjId" value="" assignTo="{!accGridObj.currentSObjId}"/>
                        </apex:actionFunction>
                        
                        
                        <apex:actionFunction name="addAccountsToVisitWithSelectionChangeJS" action="{!addAccountsToVisit}" rerender="accPopupPgMsgsId,accPopupGridPanel,companiesGrid" status="progressIndicator" oncomplete="populateAccountsGridJS();"/>
                        
                        <!-- Place this pageMessages outside the companiesGrid to ensure error message from search account poup is not displayed also in companiesGrid pageMessages as it rerenders the companiesGrid -->
                        <apex:pageMessages id="companiesGridPgMsgsId"/>
                    <!-- AccountDeatils section AddAccounts Modal -->
                    <apex:actionRegion id="addAccountsRegion">
                    <div class="modal fade" id="addAccountsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AccountDeatils section AddAccounts Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <!--button type="button" class="close" data-dismiss="modal">&times;</button-->
                            <div style="float: right;margin-top: -2px; font-size: 24px; font-weight: bold; line-height: 1;color: #000;text-shadow: 0 1px 0 #fff;opacity: .2;border:1px solid  #000;width:17px;padding-left:1px;padding-right:1px;    cursor: pointer;-webkit-appearance: button;" onclick="closeAccounts();">&times;</div>
                              <h4 class="modal-title">Add Accounts</h4>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-5 form-group">
                                        <apex:inputText value="{!accSearchText}" styleClass="form-control" html-placeholder="Search Name, SF ID" id="accSearchTextBoxId" onkeypress="return noenter(event, 'Account');"/>
                                    </div>
                                    <div class="col-md-1 form-group">
                                        <!--<apex:commandButton value="Go" styleClass="btn btn-default btn-sm" action="{!populateAccountsGrid}" rerender="accPopupGridPanel,acchelptext,accPopupPgMsgsId" status="progressIndicator" oncomplete="selectedAccountsArray = new Array();"/>-->
                                        <!--<apex:commandButton value="Go" styleClass="btn btn-default btn-sm" onclick="populateAccountsGridJS(JSON.stringify(selectedAccountsArray));" rerender="accPopupGridPanel,acchelptext,accPopupPgMsgsId" status="progressIndicator"/>-->
                                        <!--<button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateAccountsGridJS(JSON.stringify(selectedAccountsArray));">Go</button>-->
                                        <button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchAOCGridJS('acc');">Go</button>
                                    </div>
                                    <!--<div class="col-md-3 form-group">
                                        <apex:selectList styleClass="form-control input-sm" size="1" value="{!selectedAccListView}" id="searchAccountOptionsId" onchange="handleSearchAccountOptionsChange();">
                                            <apex:selectOption itemValue="myAccounts" itemLabel="My accounts"/>
                                            <apex:selectOption itemValue="allAccounts" itemLabel="All accounts"/>
                                        </apex:selectList>
                                    </div>-->
                                    <div class="col-md-3 form-group">
                                        <apex:outputpanel rendered="{!canCreateNewAccount}">
                                            <button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="createAccountBtnPopupJS();">Create a New Account</button>
                                            <!-- <apex:commandButton value="Go" action="{!populateAccountsGrid}" rerender="accPopupGridPanel,accPopupPgMsgsId" status="progressIndicator"/> -->
                                         </apex:outputpanel>
                                    </div>
                                </div>
                                <div class="row" style="padding:0px 20px 15px;text-align:right;">
                                    <apex:outputPanel id="acchelptext">
                                    <apex:outputLabel value="Recently Viewed in Last 30 days" style="margin-top:11px; float:left;"  rendered="{!if(accSearchText==null || accSearchText=='',true,false)}" />   
                                    </apex:outputPanel>
                                    <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addAccountsToVisit}" rendered="{!accGridObj.SObjectsList.size != 0}" rerender="accPopupPgMsgsId,accPopupGridPanel,companiesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addAccountsModal')" status="progressIndicator"/-->
                                    <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeAccounts();">Close</div>
                                    <apex:outputPanel rendered="{!accGridObj.SObjectsList.size != 0}">
                                        <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveAccountsVisit(JSON.stringify(selectedAccountsArray),'Save');">Save</div>
                                    </apex:outputPanel>
                                    
                                    <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                                    <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="selectedAccountsArray = new Array();">Close</button-->
                                    
                                </div>
                                <apex:outputPanel title="Accounts" id="accPopupGridPanel" layout="block">
                                    <!-- <apex:inputHidden value="{!accGridObj.selectedRecordCount}" id="selectedRecordCountForAccsId"/> -->
                                    <apex:outputText value="{!accGridObj.selectedRecordCount}" id="selectedRecordCountForAccsId" style="visibility:hidden;"/>
                                    <apex:pageMessages id="accPopupPgMsgsId"/> 
                                    <apex:outputPanel rendered="{!accGridObj.SObjectsList.size != 0}">
                                <div id="cardView" class="table-responsive">
                                    
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>&nbsp;</th>
                                                <th>Account Name</th>
                                                <th>Account Type</th>
                                                <th>Account Owner</th>
                                                <th>Website</th>
                                                <th>Account Id</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:actionRegion >
                                            <apex:repeat value="{!accGridObj.SObjectsList}" var="wrp" id="accountsTable">
                                            <tr>
                                                <td><apex:inputCheckbox value="{!wrp.IsSelected}" id="wrpChkBx" onchange="handleAccountCheckbox(this.checked, '{!JSENCODE(wrp.sobj.Id)}');" styleClass="wrapperCheckboxes"/></td>
                                                <td>
                                                    <div class="custom-label">Name:</div>
                                                    <div class="custom-value oppWordbreak"><apex:outputLink value="/{!wrp.sobj['id']}" target="_blank">{!wrp.sobj['name']}</apex:outputLink>&nbsp;</div>
                                                </td>
                                                <td>
                                                    
                                                        <div class="custom-label">Type:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['type']}"/>&nbsp;</div>
                                                    
                                                </td>
                                                <!--<td><apex:outputText value="{!wrp.sobj['type']}"/></td>-->
                                                <td>
                                                    
                                                        <div class="custom-label">Owner:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['owner.Name']}"/>&nbsp;</div>
                                                    
                                                </td>
                                                <td>
                                                    
                                                        <div class="custom-label">Website:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['website']}"/>&nbsp;</div>
                                                   
                                                </td>
                                                <td>
                                                    
                                                        <div class="custom-label">Id:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['ID']}"/>&nbsp;</div>
                                                    
                                                </td>
                                            </tr>
                                            </apex:repeat>
                                            </apex:actionRegion>
                                        </tbody>
                                    </table>
                                          
                                </div>
                                <!-- next, previous and page info -->
                                <apex:outputLabel value="Page {!accGridObj.pageNumber} of {!accGridObj.totalPages}" style="float:right;"/>
                                <!--apex:commandLink rendered="{!accGridObj.hasPrevious}" value="Previous" rerender="accPopupGridPanel" onClick="sendJSON(JSON.stringify(selectedAccountsArray));" status="progressIndicator"/-->
                                <apex:outputPanel rendered="{!NOT(accGridObj.hasPrevious)}">
                                    Previous
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(accGridObj.hasPrevious)}">
                                    <a onclick="sendJSON(JSON.stringify(selectedAccountsArray),'Previous');" style="cursor: pointer;">Previous</a>
                                </apex:outputPanel>
                                &nbsp;&nbsp;
                                <!--apex:commandLink rendered="{!accGridObj.hasNext}" value="Next" rerender="accPopupGridPanel" onClick="sendJSON(JSON.stringify(selectedAccountsArray));" status="progressIndicator"/-->
                                <apex:outputPanel rendered="{!NOT(accGridObj.hasNext)}">
                                    Next
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(accGridObj.hasNext)}">
                                    <a onclick="sendJSON(JSON.stringify(selectedAccountsArray),'Next');" style="cursor: pointer;">Next</a>
                                </apex:outputPanel>
                                </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                            <div class="modal-footer">
                              <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addAccountsToVisit}" rendered="{!accGridObj.SObjectsList.size != 0}" rerender="accPopupPgMsgsId,accPopupGridPanel,companiesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addAccountsModal')" status="progressIndicator"/-->
                              <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeAccounts();">Close</div>
                              <apex:outputPanel rendered="{!accGridObj.SObjectsList.size != 0}">
                                <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveAccountsVisit(JSON.stringify(selectedAccountsArray),'Save');">Save</div>
                              </apex:outputPanel><!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                              
                              <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="closeAccounts();">Close</button-->
                              
                              <!--<apex:commandButton value="Close" rerender="dummy" styleClass="closePopup" immediate="true" onclick="handlePopupClose(this,'true')"/>-->
                            </div>
                          </div>                          
                        </div>
                    </div>
                        <apex:actionFunction name="sendJSON" action="{!storeSelectedAccounts}" rerender="accPopupGridPanel" status="progressIndicator">
                            <apex:param name="accountJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="saveAccountsVisit" action="{!storeSelectedAccounts}" rerender="accPopupPgMsgsId,accPopupGridPanel,companiesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addAccountsModal');resetCheckboxById('masterChkbx_compnsGrd');" status="progressIndicator">
                            <apex:param name="accountJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="closeAccounts" action="{!resetPagination}" rerender="accPopupPgMsgsId,accPopupGridPanel,companiesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addAccountsModal');resetCheckboxById('masterChkbx_compnsGrd');" status="progressIndicator">
                            <apex:param name="paginationGrid" value="acc"/>
                        </apex:actionFunction>
                    </apex:actionRegion>
                    
                    <apex:actionRegion id="addObjectivesRegion">
                        <apex:actionFunction name="addObjectiveToAccount" action="{!addObjectiveToAccount}" rerender="addObjPgMsgsId,companiesGrid" status="progressIndicator">
                            <apex:param name="companyId" value="" />
                        </apex:actionFunction>
                    <!-- AccountDeatils section AddObjectives Modal -->
                    <div class="modal fade" id="addObjectivesAccountDetailsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AccountDeatils section AddObjectives Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <button type="button" class="close" data-dismiss="modal">&times;</button>
                              <h4 class="modal-title">Add Objective</h4>
                            </div>
                            <div class="modal-body">
                                <apex:pageMessages id="addObjPgMsgsId"/>
                                <div class="row">
                                    <div class="col-md-7 form-group">
                                        <label>Add Visit Objective for this Account</label>
                                        <apex:inputTextArea styleClass="form-control" value="{!accObjective}" id="accObjTxtbxId"/>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" onclick="addObjectiveToAccount(companyId)" rerender="dummy" oncomplete="handlePopupClose(this,'{!Not(isError)}','addObjectivesAccountDetailsModal')"/>
                                <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                            </div>
                          </div>                          
                        </div>
                    </div>
                    </apex:actionRegion>
                    
                    <!-- Handle Grid Checkboxes -->
                    <apex:actionFunction name="sendGridJSONAcc" action="{!storeSelectedGridElements}" oncomplete="resetCheckboxById('masterChkbx_compnsGrd')" rerender="companiesGrid,companiesGridPgMsgsId,visitOppsGrid,attendeesGrid" status="progressIndicator">
                            <apex:param name="gridJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                            <apex:param name="gridName" value=""/>
                    </apex:actionFunction>
                    
                    <!--- Account Details table in Visit Screen page -->
                    <apex:actionRegion id="accountsTableRegion">
                    <apex:outputPanel id="companiesGrid">
                    <div id="cardView" class="table-responsive">
                        <table class="table table-striped table-bordered" id="acccountDetailsTable">
                            <thead>
                                <tr>
                                    <!--<th><apex:inputCheckbox id="masterChkbx_compnsGrd" onchange="handleMasterCheckboxChange(this.checked,'wrpChkBx_cmpns','handleSelectionForCompaniesGrid');"/></th>-->
                                    <th>&nbsp;</th>
                                    <th>Number</th>
                                    <th>Account Name</th>
                                    <th>Account Owner</th>
                                    <th>Annual Revenue</th>
                                    <th>Industry</th>
                                    <th>Website</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <apex:repeat value="{!companyGridObj.SObjectsList}" var="wrp" id="companiesTable">
                                <tr>
                                    <td><apex:inputCheckbox value="{!wrp.IsSelected}" onchange="handleGridCheckbox('acc', '{!JSENCODE(wrp.sobj.Id)}', 'false');" styleClass="wrpChkBx_cmpns" html-data-id="{!wrp.sobj.Id}"/></td>
                                    <td>
                                        
                                            <div class="custom-label">Number:</div>
                                            <div class="custom-value"><apex:outputLink value="/{!wrp.sobj['id']}" target="_blank">{!wrp.sobj['Name']}</apex:outputLink>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Name:</div>
                                            <div class="custom-value"><apex:outputLink value="/{!IF(wrp.sobj['Account__c'] != null,wrp.sobj['Account__r.id'],wrp.sobj['id'])}" target="_blank">{!wrp.sobj['Company_Name__c']}</apex:outputLink>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Owner:</div>
                                            <!--<div class="custom-value"><apex:outputText value="{!wrp.sobj['Account__r.Owner.Name']}"/>&nbsp;</div>-->
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['VO_Account_Owner__c']}"/>&nbsp;</div>
                                       
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Revenue:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Company_Annual_Revenue__c']}"/>&nbsp;</div>
                                      
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Industry:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Company_Industry__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Website:</div>
                                            <div class="custom-value"><a href="{!IF(CONTAINS(wrp.sobj['Company_Website__c'],'http') || CONTAINS(wrp.sobj['Company_Website__c'],'https') || (ISBLANK(wrp.sobj['Company_Website__c'])),wrp.sobj['Company_Website__c'],'http://'+wrp.sobj['Company_Website__c'])}"><apex:outputText value="{!wrp.sobj['Company_Website__c']}"/></a>&nbsp;</div>
                                            <!--<div class="custom-value"><a href="{!IF(CONTAINS(wrp.sobj['Company_Website__c'],'http') || (ISBLANK(wrp.sobj['Account__r.Website'])),wrp.sobj['Account__r.Website'],'http://'+wrp.sobj['Account__r.Website'])}"><apex:outputText value="{!wrp.sobj['Account__r.Website']}"/></a>&nbsp;</div>-->
                                        
                                    </td>
                                    <td><!--<button type="button" class="btn btn-default btn-sm" id="addObjectivesAccountDetails">Add Objective</button>
                                        <button type="button" class="btn btn-default btn-sm" id="addOpportunitiesAccountDetails">Add Opportunities</button>
                                        <button type="button" class="btn btn-default btn-sm" id="addContactsAccountDetails">Add Contacts</button>-->
                                        
                                        <apex:variable var="objective" value="{!wrp.sobj['ObjectiveForThisAccount__c']}"/>
                                        <button type="button" class="btn btn-default btn-sm addObjectiveAccBtn" onclick="handleAddObjectiveForAccount('{!wrp.sobj.Id}','{!objective}')">{!IF(objective == null || objective == '', 'Add', 'Modify')} Objective</button>
                                        <!-- <input type="button" class="btn addOppsBtn" value="Add Opportunities" onclick="handleAddOppsBtn('{!wrp.sobj['Account__c']}')"/> -->
                                        <apex:outputPanel layout="none" rendered="{!AND(isOpportunityAvailable,isOpportunityAccessible,wrp.sobj['Account__c'] !='')}">
                                            <button type="button" class="btn addOppsBtn btn-default btn-sm" onclick="handleAddOppsBtn('{!wrp.sobj['Account__c']}',false)">Add Opportunities</button>
                                        </apex:outputPanel>
                                        <apex:outputPanel layout="none" rendered="{!IF(wrp.sobj['Account__c'] =='',false,true)}">
                                            <button type="button" class="btn addContactsBtn btn-default btn-sm" onclick="handleAddContactsBtn('{!wrp.sobj['Account__c']}',false)">Add Contacts</button>
                                        </apex:outputPanel>
                                    </td>
                                </tr>
                                </apex:repeat>
                            </tbody>
                        </table>
                    </div>
                    <apex:outputPanel styleClass="paginationDiv" layout="block" rendered="{!companyGridObj.totalPages!=0}">
                        <div class="panel-body" style="border-top:0px;padding:10px;">
                        <div class="col-md-12">
                            <span style="font-size:0.8em;">Page {!companyGridObj.pageNumber} of {!companyGridObj.totalPages}</span>
                            <span class="pull-right">
                                <!--<button type="button" class="btn btn-default btn-sm">First</button>
                                <button type="button" class="btn btn-default btn-sm">Previous</button>
                                <button type="button" class="btn btn-default btn-sm">Next</button>
                                <button type="button" class="btn btn-default btn-sm">Last</button>-->
                                
                                <!--apex:commandButton action="{!companyGridObj.doFirst}" value="First" rerender="companiesGrid" styleClass="btn btn-default btn-sm {!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=1),'','disabled')}"/-->
                                
                                <apex:outputPanel rendered="{!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=companyGridObj.totalPages), true, false)}">
                                    <div onclick="sendGridJSONAcc(JSON.stringify(gridAccArray), 'Last', 'companyGridObj');" class="gridButton">Last</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=companyGridObj.totalPages), false, true)}">
                                    <div class="gridButtonInactive">Last</div>
                                </apex:outputPanel>
                                
                                 <apex:outputPanel rendered="{!IF(companyGridObj.hasNext, true, false)}">
                                    <div onclick="sendGridJSONAcc(JSON.stringify(gridAccArray), 'Next', 'companyGridObj');" class="gridButton">Next</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(companyGridObj.hasNext, false, true)}">
                                    <div class="gridButtonInactive">Next</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(companyGridObj.hasPrevious, true, false)}">
                                    <div onclick="sendGridJSONAcc(JSON.stringify(gridAccArray), 'Previous', 'companyGridObj');" class="gridButton">Previous</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(companyGridObj.hasPrevious, false, true)}">
                                    <div class="gridButtonInactive">Previous</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=1), true, false)}">
                                    <div onclick="sendGridJSONAcc(JSON.stringify(gridAccArray), 'First', 'companyGridObj');" class="gridButton">First</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=1), false, true)}">
                                    <div class="gridButtonInactive">First</div>
                                </apex:outputPanel>
                                
                                <!--apex:commandButton action="{!companyGridObj.doPrevious}" value="Previous" rerender="companiesGrid" styleClass="btn btn-default btn-sm {!IF(companyGridObj.hasPrevious,'','disabled')}"/>
                                <apex:commandButton action="{!companyGridObj.doNext}" value="Next" rerender="companiesGrid" styleClass="btn btn-default btn-sm {!IF(companyGridObj.hasNext,'','disabled')}"/>
                                <apex:commandButton action="{!companyGridObj.doLast}" value="Last" rerender="companiesGrid" styleClass="btn btn-default btn-sm {!IF(AND(companyGridObj.totalPages!=0, companyGridObj.pageNumber!=companyGridObj.totalPages),'','disabled')}"/-->
                                
                            </span>
                        </div>
                    </div>
                    </apex:outputPanel>
                    </apex:outputPanel>
                    </apex:actionRegion>
                </div>
                <!-- Opportunity Details + Account Details section AddOpportunities Modal -->
                <apex:actionRegion id="addOppRegion">
                    <div class="modal fade" id="addOpportunitiesModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                    <div class="modal-dialog">                      
                      <!-- Opportunity Details + Account Details section AddOpportunities Modal content-->
                      <div class="modal-content">
                        <div class="modal-header">
                          <!--button type="button" class="close" data-dismiss="modal">&times;</button-->
                          <div style="float: right;margin-top: -2px; font-size: 24px; font-weight: bold; line-height: 1;color: #000;text-shadow: 0 1px 0 #fff;opacity: .2;border:1px solid  #000;width:17px;padding-left:1px;padding-right:1px;    cursor: pointer;-webkit-appearance: button;" onclick="closeOpportunities();">&times;</div>
                          <h4 class="modal-title">Add Opportunities&nbsp;
                          <apex:outputPanel style="display:{!if(accountNameForOppPopUpGrid != null,'','none')}" id="accountNameaddOpp">
                            of {!accountNameForOppPopUpGrid}
                          </apex:outputPanel>
                          </h4>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-7 form-group">
                                    <apex:inputText styleClass="form-control" value="{!oppSearchText}" html-placeholder="Search Name, SF ID" id="oppSearchTextBoxId" onkeypress="return noenter(event, 'Opp');"/>
                                </div>
                                <div class="col-md-2 form-group">
                                    <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" action="{!populateSearchOppsGrid}" rerender="searchOppsGridPanel,opphelptext" status="progressIndicator" oncomplete="selectedOppArray = new Array();"/>-->
                                    <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" onclick="populateSearchOppsGridOnEnter(JSON.stringify(selectedOppArray));" rerender="searchOppsGridPanel,opphelptext" status="progressIndicator"/>-->
                                    <!--<button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchOppsGridOnEnter(JSON.stringify(selectedOppArray));">Go</button>-->
                                    <button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchAOCGridJS('opp');">Go</button>
                                </div>
                            </div>
                             
                            <div class="row" style="padding:0px 20px 15px;text-align:right;">
                                <apex:outputPanel id="opphelptext">
                                    <apex:outputLabel value="Recently Viewed in Last 30 days" style="margin-top:11px; float:left;"  rendered="{!if(oppSearchText==null || oppSearchText=='',true,false)}" />   
                                    </apex:outputPanel>
                                <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addOpportunitiesToVisit}" rendered="{!opportunityGridObj.SObjectsList.size != 0}" rerender="searchOppsGridPanel,visitOppsGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addOpportunitiesModal')" status="progressIndicator"/-->
                                <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeOpportunities();">Close</div>
                                <apex:outputPanel rendered="{!opportunityGridObj.SObjectsList.size != 0}">
                                    <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveOpportunitiesVisit(JSON.stringify(selectedOppArray),'Save');">Save</div>
                                </apex:outputPanel>
                                <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                                <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="selectedOppArray = new Array();">Close</button-->
                            </div>
                            <apex:actionFunction name="populateSearchOppsGridJS" action="{!populateSearchOppsGrid}" rerender="searchOppsGridPanel,accountNameaddOpp,opphelptext,searchOppsPgMsgsId" status="progressIndicator">
                                <apex:param name="accountIdForSearchedOpps" value="" assignTo="{!accountIdForSearchedOpps}"/>
                                <apex:param name="isShowAllOppsPopup" value="" assignTo="{!isShowAllOppsPopup}"/>
                                <apex:param name="oppJSON" value=""/>
                            </apex:actionFunction>
                            
                            <apex:actionFunction name="populateSearchOppsGridOnEnter" action="{!populateSearchOppsGrid}" rerender="searchOppsGridPanel,opphelptext,searchOppsPgMsgsId" status="progressIndicator">
                                <apex:param name="oppJSON" value=""/>
                            </apex:actionFunction>
                            
                            <!-- select a Record-->
                            <apex:actionFunction name="aSelectItemSearchOpp" action="{!opportunityGridObj.selectRecord}" rerender="searchOppsGridPanel" status="progressIndicator">
                                <apex:param name="currentSObjId" value="" assignTo="{!opportunityGridObj.currentSObjId}"/>
                            </apex:actionFunction>
                            
                            <!-- deselect a Record-->
                            <apex:actionFunction name="aDeselectItemSearchOpp" action="{!opportunityGridObj.deselectRecord}" rerender="searchOppsGridPanel" status="progressIndicator">
                                <apex:param name="currentSObjId" value="" assignTo="{!opportunityGridObj.currentSObjId}"/>
                            </apex:actionFunction>
                            <apex:outputPanel id="searchOppsGridPanel" layout="block">                                                    
        
                            
                            
                            <apex:pageMessages id="searchOppsPgMsgsId"/> 
                            
                            <apex:outputPanel rendered="{!opportunityGridObj.SObjectsList.size != 0}">
                            <div id="cardView" class="table-responsive">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>&nbsp;</th>
                                            <th>Opportunity Name</th>
                                            <apex:outputPanel layout="none" rendered="{!isShowAllOppsPopup}">
                                                <th>Account Name</th>
                                            </apex:outputPanel>
                                            <!--<th>Probability</th>-->
                                            <th>Opportunity Owner</th>
                                            <th>Close Date</th>
                                            <th>Sales Stage</th>
                                            <th>Opportunity Amount</th>
                                            <th>Opportunity Id</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <apex:repeat value="{!opportunityGridObj.SObjectsList}" var="wrp" id="oppsTable">
                                        <tr>
                                            <td><apex:inputCheckbox value="{!wrp.IsSelected}" id="wrpChkBx_opp" onchange="handleOppCheckbox(this.checked, '{!JSENCODE(wrp.sobj.Id)}');" styleClass="wrapperCheckboxes"/></td>
                                            <td>
                                                
                                                    <div class="custom-label">Name:</div>
                                                    <div class="custom-value oppWordbreak"><apex:outputLink value="/{!wrp.sobj['id']}" target="_blank">{!wrp.sobj['Name']}</apex:outputLink>&nbsp;</div>
                                                
                                            </td>
                                            <apex:outputPanel layout="none" rendered="{!isShowAllOppsPopup}">
                                                <td>
                                                    
                                                        <div class="custom-label">Account:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Account.Name']}"/>&nbsp;</div>
                                                    
                                                </td>
                                            </apex:outputPanel>
                                            <!--<td><apex:outputText value="{!wrp.sobj['Probability']}"/></td>-->
                                            <td>
                                                
                                                    <div class="custom-label">Owner:</div>
                                                    <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['owner.Name']}"/>&nbsp;</div>
                                                
                                            </td>
                                            <td>
                                                
                                                    <div class="custom-label">Date:</div>
                                                    <div class="custom-value">
                                                        <apex:outputText value="{0,date,MM/dd/yyyy}">
                                                            <apex:param value="{!wrp.sobj['CloseDate']}"/>
                                                        </apex:outputText>&nbsp;
                                                    </div>
                                                
                                            </td>
                                            <td>
                                                
                                                    <div class="custom-label">Stage:</div>
                                                    <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['StageName']}"/>&nbsp;</div>
                                                
                                            </td>
                                            <td>
                                                
                                                    <div class="custom-label">Amount:</div>
                                                    <div class="custom-value"><apex:outputText value="{0, number, 00.00}">
                                                                              <apex:param value="{!wrp.sobj['Amount']}" />
                                                                              </apex:outputText>&nbsp;</div>
                                                
                                            </td>
                                            <td>
                                                
                                                    <div class="custom-label">Id:</div>
                                                    <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Id']}"/>&nbsp;</div>
                                                
                                            </td>
                                        </tr>
                                        </apex:repeat>
                                    </tbody>
                                </table>
                            </div>
                            <!-- next, previous and page info -->
                            <apex:outputLabel value="Page {!opportunityGridObj.pageNumber} of {!opportunityGridObj.totalPages}" style="float:right;"/>
                            
                            <!--apex:commandLink action="{!opportunityGridObj.doPrevious}" rendered="{!opportunityGridObj.hasPrevious}" value="Previous" rerender="searchOppsGridPanel"/-->
                            <apex:outputPanel rendered="{!NOT(opportunityGridObj.hasPrevious)}">
                                Previous
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!!NOT(opportunityGridObj.hasPrevious)}">
                                    <a onclick="sendJSONOpp(JSON.stringify(selectedOppArray),'Previous');" style="cursor: pointer;">Previous</a>
                                </apex:outputPanel>
                            &nbsp;&nbsp;
                            <!--apex:commandLink action="{!opportunityGridObj.doNext}" rendered="{!opportunityGridObj.hasNext}" value="Next" rerender="searchOppsGridPanel"/-->
                            <apex:outputPanel rendered="{!NOT(opportunityGridObj.hasNext)}">
                                Next
                            </apex:outputPanel>
                             <apex:outputPanel rendered="{!!NOT(opportunityGridObj.hasNext)}">
                                    <a onclick="sendJSONOpp(JSON.stringify(selectedOppArray),'Next');" style="cursor: pointer;">Next</a>
                                </apex:outputPanel>
                            </apex:outputPanel>
                            </apex:outputPanel>
                        </div>
                        <div class="modal-footer">
                            <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addOpportunitiesToVisit}" rendered="{!opportunityGridObj.SObjectsList.size != 0}" rerender="searchOppsGridPanel,visitOppsGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addOpportunitiesModal')" status="progressIndicator"/-->
                            <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeOpportunities();">Close</div>
                            <apex:outputPanel rendered="{!opportunityGridObj.SObjectsList.size != 0}">
                                <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveOpportunitiesVisit(JSON.stringify(selectedOppArray),'Save');">Save</div>
                            </apex:outputPanel>
                                <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                            <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="selectedOppArray = new Array();">Close</button-->
                        </div>
                      </div>                          
                    </div>
                </div>       
                    <apex:actionFunction name="sendJSONOpp" action="{!storeSelectedOpportunities}" rerender="searchOppsGridPanel" oncomplete="resetCheckboxById('masterChkbx_vstOpsGrd');" status="progressIndicator">
                        <apex:param name="oppJSON" value=""/>
                        <apex:param name="actionPerformed" value=""/>
                    </apex:actionFunction>
                    <apex:actionFunction name="saveOpportunitiesVisit" action="{!storeSelectedOpportunities}" rerender="searchOppsGridPanel,visitOppsGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addOpportunitiesModal');resetCheckboxById('masterChkbx_vstOpsGrd');" status="progressIndicator">
                        <apex:param name="oppJSON" value=""/>
                        <apex:param name="actionPerformed" value=""/>
                    </apex:actionFunction>
                    <apex:actionFunction name="closeOpportunities" action="{!resetPagination}" rerender="searchOppsGridPanel,visitOppsGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addOpportunitiesModal');resetCheckboxById('masterChkbx_vstOpsGrd');" status="progressIndicator">
                        <apex:param name="paginationGrid" value="opp"/>
                    </apex:actionFunction>
                </apex:actionRegion>
                
                <!-- OpportunityDeatils section AddObjectives Modal -->
                <apex:actionRegion id="addOppObjectives">
                    <apex:actionFunction name="addObjectiveToVisitOpp" action="{!addObjectiveToVisitOpp}" rerender="addVisitOppObjPgMsgsId,visitOppsGrid" status="progressIndicator">
                        <apex:param name="visitOppId" value="" />
                    </apex:actionFunction>
                    <div class="modal fade" id="addObjectivesOpportunityDetailsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                    <div class="modal-dialog">                      
                      <!-- OpportunityDeatils section AddObjectives Modal content-->
                      <div class="modal-content">
                        <div class="modal-header">
                          <button type="button" class="close" data-dismiss="modal">&times;</button>
                          <h4 class="modal-title">Add Objective</h4>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-7 form-group">
                                    <label>Add Visit Objective for this Opportunity</label>
                                    <apex:inputTextArea styleClass="form-control" value="{!visitOppObjective}" id="oppObjTxtbxId"/>
                                    <!--<textarea class = "form-control" rows = "3"></textarea>-->
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                          <!--<button type="button" class="btn btn-default btn-sm pull-left" data-dismiss="modal">Save</button>-->
                          
                          <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" onclick="addObjectiveToVisitOpp(visitOppId)" rerender="dummy" oncomplete="handlePopupClose(this,'{!Not(isError)}','addObjectivesOpportunityDetailsModal')"/>
                          <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                        </div>
                      </div>                          
                    </div>
                </div>                  
                </apex:actionRegion>
                <!-- Opportunity Details section -->
                <apex:outputPanel layout="none" rendered="{!AND(isOpportunityAvailable,isOpportunityAccessible)}">
                <div class="OpportunityDetails">
                    
                    <div class="row">
                      <div class="col-md-4 heading form-group">Opportunity Details</div>
                      <div class="col-md-4 form-group">
                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Delete" onClick="sendGridJSONOpp(JSON.stringify(gridOppArray), 'Delete', 'visitOppGridObj');" status="progressIndicator" oncomplete="gridOppArray = new Array();"/>-->
                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Delete" onClick="handleDeleteOppsRequest();" status="progressIndicator"/>-->
                        <button type="button" class="btn btn-default btn-sm" onclick="handleDeleteOppsRequest();">Delete</button>
                        <!--<button type="button" class="btn btn-default btn-sm">Delete</button>-->
                        <!--<button type="button" class="btn btn-default btn-sm" id="addOpportunitiesOpportunityDetails">Add Opportunities</button>-->
                        <button type="button" class="btn btn-default btn-sm" onclick="handleAddOppsBtn('null',true);">Add Opportunities</button>
                      </div>
                    </div>
                    
                    <!--- Opportunity Details table in Visit Screen page -->
                    <apex:actionRegion id="visitOppsGridRegion">                                            
                    <!-- select a Record-->
                    <apex:actionFunction name="aSelectItemVisitOppsGrid" action="{!visitOppGridObj.selectRecord}" rerender="visitOppsGrid,visitOppsGridPgMsgsId" status="progressIndicator">
                        <apex:param name="currentSObjId" value="" assignTo="{!visitOppGridObj.currentSObjId}"/>
                    </apex:actionFunction>
                    
                    <!-- deselect a Record-->
                    <apex:actionFunction name="aDeselectItemVisitOppsGrid" action="{!visitOppGridObj.deselectRecord}" rerender="visitOppsGrid,visitOppsGridPgMsgsId" status="progressIndicator">
                        <apex:param name="currentSObjId" value="" assignTo="{!visitOppGridObj.currentSObjId}"/>
                    </apex:actionFunction>
                    
                    
                    <apex:actionFunction name="handleSelectionForVisitOppsGrid" action="{!visitOppGridObj.handleRecordsSelectionChange}" rerender="visitOppsGrid,visitOppsGridPgMsgsId" status="progressIndicator">
                        <apex:param name="recordsSelectionJsonString" value="" assignTo="{!visitOppGridObj.recordsSelectionJsonString}"/>
                    </apex:actionFunction>
                    
                     <!-- Handle Grid Checkboxes -->
                    <apex:actionFunction name="sendGridJSONOpp" action="{!storeSelectedGridElements}" rerender="visitOppsGrid,visitOppsGridPgMsgsId" onComplete="resetCheckboxById('masterChkbx_vstOpsGrd');" status="progressIndicator">
                            <apex:param name="gridJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                            <apex:param name="gridName" value="visitOppGridObj"/>
                    </apex:actionFunction>
                    
                    <!-- Place this pageMessages outside the visitOppsGrid to ensure error message from search opp poup is not displayed also in visitOppsgrid pageMessages as it rerenders the visitOppsGrid -->
                    <apex:pageMessages id="visitOppsGridPgMsgsId"/>
                    
                    <apex:outputPanel id="visitOppsGrid">
                    <div id="cardView" class="table-responsive">
                        <table class="table table-bordered table-striped table-condensed" id="opportunityDetailsTable">
                            <thead id="deskGridOppDetailsHeader">
                                <tr>
                                    <!--<th><apex:inputCheckbox id="masterChkbx_vstOpsGrd" onchange="handleMasterCheckboxChange(this.checked,'wrpChkBx_vopps','handleSelectionForVisitOppsGrid');"/></th>-->
                                    <th>&nbsp;</th>
                                    <th>Number</th>
                                    <th>Opportunity Name</th>
                                    <th>Account Name</th>
                                    <th>Sales Stage</th>
                                    <th>Opportunity Amount</th>
                                    <th>Close Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody> 
                            <apex:repeat value="{!visitOppGridObj.SObjectsList}" var="wrp" id="visitOppsTable">
                                <tr>
                                    <td><apex:inputCheckbox value="{!wrp.IsSelected}" onchange="handleGridCheckbox('opp', '{!JSENCODE(wrp.sobj.Id)}', 'false');" styleClass="wrpChkBx_vopps" html-data-id="{!wrp.sobj.Id}"/></td>
                                    <td>
                                        
                                            <div class="custom-label">Number:</div>
                                            <div class="custom-value"><apex:outputLink value="/{!wrp.sobj['id']}" target="_blank">{!wrp.sobj['Name']}</apex:outputLink>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Name:</div>
                                            <apex:outputPanel rendered="{!IF(wrp.sobj['Opportunity__r.id']!=null,true,false)}">
                                                <div class="custom-value"><apex:outputLink value="/{!wrp.sobj['Opportunity__r.id']}" target="_blank">{!wrp.sobj['Opportunity__r.Name']}</apex:outputLink>&nbsp;</div>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!IF(wrp.sobj['Opportunity__r.id']==null,true,false)}">
                                                <div class="custom-value"><apex:outputText value="{!wrp.sobj['Opp_Name__c']}"/>&nbsp;</div>
                                            </apex:outputPanel>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Account:</div>
                                            <!--<div class="custom-value"><apex:outputText value="{!wrp.sobj['Opportunity__r.Account.Name']}"/>&nbsp;</div>-->
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Company_Name__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Stage:</div>
                                            <!--<div class="custom-value"><apex:outputText value="{!wrp.sobj['Opportunity__r.StageName']}"/>&nbsp;</div>-->
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Opp_Sales_Stage__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Amount:</div>
                                            <!--<div class="custom-value"><apex:outputText value="{!wrp.sobj['Opportunity__r.Amount']}"/>&nbsp;</div>-->
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Opp_Amount__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Close Date:</div>
                                            <div class="custom-value">
                                                <apex:outputText value=" {0,date,MM/dd/yyyy}">
                                                   <!--<apex:param value="{!wrp.sobj['Opportunity__r.CloseDate']}"/>-->
                                                   <apex:param value="{!wrp.sobj['Opp_Close_Date__c']}"/>
                                                </apex:outputText>
                                            </div>
                                    </td>
                                    <td>
                                        <apex:variable var="objective" value="{!wrp.sobj['Objective_for_this_Opportunity__c']}"/>
                                        <button type="button" class="btn btn-default btn-sm addObjectiveOppBtn" onclick="handleAddObjectiveForOpp('{!wrp.sobj.Id}','{!objective}')">{!IF(objective == null || objective == '', 'Add', 'Modify')} Objective</button>
                                    </td>
                                </tr>
                            </apex:repeat>
                            </tbody>
                        </table>
                    </div>
                    
                    <apex:outputPanel styleClass="paginationDiv" layout="block" rendered="{!visitOppGridObj.totalPages!=0}">
                    <div class="panel-body" style="border-top:0px;padding:10px;">
                        <div class="col-md-12">
                            <span style="font-size:0.8em;">Page {!visitOppGridObj.pageNumber} of {!visitOppGridObj.totalPages}</span>
                            <span class="pull-right">
                                <apex:outputPanel rendered="{!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=visitOppGridObj.totalPages), true, false)}">
                                    <div onclick="sendGridJSONOpp(JSON.stringify(gridOppArray), 'Last', 'visitOppGridObj');" class="gridButton">Last</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=visitOppGridObj.totalPages), false, true)}">
                                    <div class="gridButtonInactive">Last</div>
                                </apex:outputPanel>
                                
                                 <apex:outputPanel rendered="{!IF(visitOppGridObj.hasNext, true, false)}">
                                    <div onclick="sendGridJSONOpp(JSON.stringify(gridOppArray), 'Next', 'visitOppGridObj');" class="gridButton">Next</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(visitOppGridObj.hasNext, false, true)}">
                                    <div class="gridButtonInactive">Next</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(visitOppGridObj.hasPrevious, true, false)}">
                                    <div onclick="sendGridJSONOpp(JSON.stringify(gridOppArray), 'Previous', 'visitOppGridObj');" class="gridButton">Previous</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(visitOppGridObj.hasPrevious, false, true)}">
                                    <div class="gridButtonInactive">Previous</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=1), true, false)}">
                                    <div onclick="sendGridJSONOpp(JSON.stringify(gridOppArray), 'First', 'visitOppGridObj');" class="gridButton">First</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=1), false, true)}">
                                    <div class="gridButtonInactive">First</div>
                                </apex:outputPanel>
                                <!--apex:commandLink action="{!visitOppGridObj.doFirst}" value="First" rerender="visitOppsGrid,visitOppsGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=1),'','disabled')}"/>
                                <apex:commandLink action="{!visitOppGridObj.doPrevious}" value="Previous" rerender="visitOppsGrid,visitOppsGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(visitOppGridObj.hasPrevious,'','disabled')}"/>
                                <apex:commandLink action="{!visitOppGridObj.doNext}" value="Next" rerender="visitOppsGrid,visitOppsGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(visitOppGridObj.hasNext,'','disabled')}"/>
                                <apex:commandLink action="{!visitOppGridObj.doLast}" value="Last" rerender="visitOppsGrid,visitOppsGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(AND(visitOppGridObj.totalPages!=0, visitOppGridObj.pageNumber!=visitOppGridObj.totalPages),'','disabled')}"/>
                                <!--<button type="button" class="btn btn-default btn-sm">First</button>
                                <button type="button" class="btn btn-default btn-sm">Previous</button>
                                <button type="button" class="btn btn-default btn-sm">Next</button>
                                <button type="button" class="btn btn-default btn-sm">Last</button>-->
                            </span>
                        </div>
                    </div>
                    </apex:outputPanel>
                    </apex:outputPanel>
                    </apex:actionRegion>
                </div>
                </apex:outputPanel>
               
                <!--- AttendeeDeatils section -->
                <div class="AttendeeDetails">
                    <div class="row">
                      <div class="col-md-4 heading form-group">Attendee Details</div>
                      <div class="col-md-7 form-group">
                        <!--<button type="button" class="btn btn-default btn-sm">Delete</button>
                        <button type="button" class="btn btn-default btn-sm" id="addContactsAttendeeDetails">Add Contacts</button>
                        <button type="button" class="btn btn-default btn-sm" id="addOtherAttendees">Add Other Attendees</button>
                        <button type="button" class="btn btn-default btn-sm" id="addUsersEmployees">Add Users/Employees</button>-->
                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Delete" onClick="sendGridJSONCon(JSON.stringify(gridConArray), 'Delete', 'attendeeGridObj');" status="progressIndicator" oncomplete="gridConArray = new Array();"/>-->
                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Delete" onClick="handleDeleteContactsRequest" status="progressIndicator"/>-->
                        <button type="button" class="btn btn-default btn-sm" onclick="handleDeleteContactsRequest();">Delete</button>
                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Delete" action="{!deleteAttendees}" status="progressIndicator" rerender="attendeesGrid,attendeesGridPgMsgsId" onComplete="resetCheckboxById('masterChkbx_atndsGrd');gridConArray = new Array();"/>-->
                        <button type="button" class="btn btn-default btn-sm" onclick="handleAddContactsBtn('null',true)">Add Contacts</button>
                        <button type="button" id="attendeesNtAssociatdBtn" class="btn btn-default btn-sm" onClick="attendeesNtAssociatdBtnPopupJS();">Add Other Attendees</button>
                        <button type="button" class="btn btn-default btn-sm" id="AddUserBtn" onclick="handleAddUsersBtn()">Add Users/Employees</button>
                      </div>
                    </div>
                    <!-- AttendeeDeatils + AccountDetails section AddContacts Modal -->
                    <apex:actionRegion id="contactPopupRegion">
                    <div class="modal fade" id="addContactsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AttendeeDeatils + AccountDetails section AddContacts Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <!--button type="button" class="close" data-dismiss="modal">&times;</button-->
                              <div style="float: right;margin-top: -2px; font-size: 24px; font-weight: bold; line-height: 1;color: #000;text-shadow: 0 1px 0 #fff;opacity: .2;border:1px solid  #000;width:17px;padding-left:1px;padding-right:1px;    cursor: pointer;-webkit-appearance: button;" onclick="closeContacts();">&times;</div>
                              <h4 class="modal-title">Add Contacts&nbsp;
                              <apex:outputPanel style="display:{!if(accountNameForContPopUpGrid != null,'','none')}" id="addContactsName">
                                 of {!accountNameForContPopUpGrid}
                              </apex:outputPanel>
                              </h4>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-5 form-group">
                                        <apex:inputText styleClass="form-control" value="{!contactSearchText}" html-placeholder="Search Full Name, SF ID" id="contactSearchTextBoxId" onkeypress="return noenter(event, 'Contact');"/>
                                    </div>
                                    <div class="col-md-1 form-group">
                                        <!--<button type="button" class="btn btn-default btn-sm" >Go</button>-->
                                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" action="{!populateSearchContactsGrid}" rerender="searchContactsGridPanel,conhelptext" status="progressIndicator" oncomplete="selectedConArray = new Array();"/>-->
                                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" onclick="populateSearchContactsGridOnEnter(JSON.stringify(selectedConArray));" rerender="searchContactsGridPanel,conhelptext" status="progressIndicator"/>-->
                                        <!--<button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchContactsGridOnEnter(JSON.stringify(selectedConArray));">Go</button>-->
                                        <button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchAOCGridJS('con');">Go</button>
                                        
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <!--<button type="button" class="btn btn-default btn-sm" >Create Contact</button>-->
                                        <apex:outputpanel rendered="{!canCreateNewContact}">
                                             <button type="button" class="createContactBtn btn btn-default btn-sm" onClick="createContactBtnPopupJS();">Create Contact</button>
                                         </apex:outputpanel>
                                    </div>
                                </div>
                                <div class="row" style="padding:0px 20px 15px;text-align:right;">
                                     <apex:outputPanel id="conhelptext">
                                    <apex:outputLabel value="Recently Viewed in Last 30 days" style="margin-top:11px; float:left;"  rendered="{!if(contactSearchText==null || contactSearchText=='',true,false)}" />   
                                    </apex:outputPanel>
                                    <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addContactsToVisit}" rendered="{!contactGridObj.SObjectsList.size != 0}" rerender="searchContactsGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addContactsModal')" status="progressIndicator"/-->
                                    <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeContacts();">Close</div>
                                    <apex:outputPanel rendered="{!contactGridObj.SObjectsList.size != 0}">
                                        <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveContactsVisit(JSON.stringify(selectedConArray),'Save');">Save</div>
                                    </apex:outputPanel>
                                    <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                                    <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="selectedConArray = new Array();">Close</button-->
                                </div>
                                <apex:actionFunction name="populateSearchContactsGridJS" action="{!populateSearchContactsGrid}" rerender="searchContactsGridPanel,addContactsName,conhelptext,searchContactsPgMsgsId" status="progressIndicator" oncomplete="populateSelectedAccountDetailsForNewContact('{!JSENCODE(accountIdForSearchedContacts)}','{!JSENCODE(accountNameForContPopUpGrid)}');">
                                <!-- <apex:param name="contOppPopupType" value="" assignTo="{!contOppPopupType}"/> -->
                                <apex:param name="accountIdForSearchedContacts" value="" assignTo="{!accountIdForSearchedContacts}"/>
                                <apex:param name="isShowAllContactsPopup" value="" assignTo="{!isShowAllContactsPopup}"/>
                                <apex:param name="contactJSON" value=""/>
                            </apex:actionFunction>
                            
                            <apex:actionFunction name="populateSearchContactsGridOnEnter" action="{!populateSearchContactsGrid}" rerender="searchContactsGridPanel,conhelptext,searchContactsPgMsgsId" status="progressIndicator" oncomplete="populateSelectedAccountDetailsForNewContact('{!JSENCODE(accountIdForSearchedContacts)}','{!JSENCODE(accountNameForContPopUpGrid)}');">
                                <apex:param name="contactJSON" value=""/>
                            </apex:actionFunction>
                            
                            <!-- select a Record-->
                            <apex:actionFunction name="aSelectItem" action="{!contactGridObj.selectRecord}" rerender="searchContactsGridPanel" status="progressIndicator">
                                <apex:param name="currentSObjId" value="" assignTo="{!contactGridObj.currentSObjId}"/>
                            </apex:actionFunction>
                            
                            <!-- deselect a Record-->
                            <apex:actionFunction name="aDeselectItem" action="{!contactGridObj.deselectRecord}" rerender="searchContactsGridPanel" status="progressIndicator">
                                <apex:param name="currentSObjId" value="" assignTo="{!contactGridObj.currentSObjId}"/>
                            </apex:actionFunction>
                            
                            <apex:outputPanel id="searchContactsGridPanel" layout="block">                                                    
                                 
                                <apex:pageMessages id="searchContactsPgMsgsId"/>
                                
                                <apex:outputPanel rendered="{!contactGridObj.SObjectsList.size != 0}">
                                    <div id="cardView" class="table-responsive">
                                    <table class="table table-striped table-bordered">
                                        <thead id="deskAddContactsGridHeader">
                                            <tr>
                                                <th>&nbsp;</th>
                                                <th>Name</th>
                                                <apex:outputPanel layout="none" rendered="{!isShowAllContactsPopup}">
                                                    <th>Account Name</th>
                                                </apex:outputPanel>
                                                <th>Email ID</th>
                                                <th>Phone</th>
                                                <th>Department</th>
                                                <th>Contact Id</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:repeat value="{!contactGridObj.SObjectsList}" var="wrp" id="contactsTable">
                                            <tr>
                                                <td><apex:inputCheckbox value="{!wrp.IsSelected}" id="wrpChkBx_cont" onchange="handleConCheckbox(this.checked, '{!JSENCODE(wrp.sobj.Id)}');" styleClass="wrapperCheckboxes"/></td>
                                                <td>
                                                    
                                                        <div class="custom-label">Name:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputLink value="/{!wrp.sobj['id']}" target="_blank">{!wrp.sobj['Name']}</apex:outputLink>&nbsp;</div>
                                                    
                                                </td>
                                                <apex:outputPanel layout="none" rendered="{!isShowAllContactsPopup}">
                                                    <td>
                                                        
                                                            <div class="custom-label">Account:</div>
                                                            <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Account.Name']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                </apex:outputPanel>
                                                <td>
                                                    
                                                        <div class="custom-label">Email:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Email']}"/>&nbsp;</div>
                                                    
                                                </td>
                                                <td>
                                                    
                                                        <div class="custom-label">Phone:</div>
                                                        <div class="custom-value"><apex:outputText value="{!wrp.sobj['Phone']}"/>&nbsp;</div>
                                                    
                                                </td>
                                                <td>
                                                    
                                                        <div class="custom-label">Department:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Department']}"/>&nbsp;</div>
                                                    
                                                </td>
                                                <!--<td><apex:outputText value="{!wrp.sobj['Department']}"/></td>-->
                                                <td>
                                                    
                                                        <div class="custom-label">Id:</div>
                                                        <div class="custom-value oppWordbreak"><apex:outputText value="{!wrp.sobj['Id']}"/>&nbsp;</div>
                                                    
                                                </td>
                                            </tr>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                                <!-- next, previous and page info -->
                                <apex:outputLabel value="Page {!contactGridObj.pageNumber} of {!contactGridObj.totalPages}" style="float:right;"/>
                                
                                <!--apex:commandLink action="{!contactGridObj.doPrevious}" rendered="{!contactGridObj.hasPrevious}" value="Previous" rerender="searchContactsGridPanel"/-->
                                <apex:outputPanel rendered="{!NOT(contactGridObj.hasPrevious)}">
                                    Previous
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(contactGridObj.hasPrevious)}">
                                    <a onclick="sendJSONCon(JSON.stringify(selectedConArray),'Previous');" style="cursor: pointer;">Previous</a>
                                </apex:outputPanel>
                                &nbsp;&nbsp;
                                <!--apex:commandLink action="{!contactGridObj.doNext}" rendered="{!contactGridObj.hasNext}" value="Next" rerender="searchContactsGridPanel"/-->
                                <apex:outputPanel rendered="{!NOT(contactGridObj.hasNext)}">
                                    Next
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(contactGridObj.hasNext)}">
                                    <a onclick="sendJSONCon(JSON.stringify(selectedConArray),'Next');" style="cursor: pointer;">Next</a>
                                </apex:outputPanel>
                                </apex:outputPanel>
                            </apex:outputPanel>
                            </div>
                            <div class="modal-footer">
                                <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addContactsToVisit}" rendered="{!contactGridObj.SObjectsList.size != 0}" rerender="searchContactsGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addContactsModal')" status="progressIndicator"/-->
                                <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                                <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeContacts();">Close</div>
                                <apex:outputPanel rendered="{!contactGridObj.SObjectsList.size != 0}">
                                    <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveContactsVisit(JSON.stringify(selectedConArray),'Save');">Save</div>
                                </apex:outputPanel>
                                
                            <!--button type="button" class="btn btn-default btn-sm" data-dismiss="modal" onClick="closeContacts();">Close</button-->
                            </div>
                          </div>                          
                        </div>
                    </div>    
                        <apex:actionFunction name="sendJSONCon" action="{!storeSelectedContacts}" rerender="searchContactsGridPanel" oncomplete="resetCheckboxById('masterChkbx_atndsGrd');" status="progressIndicator">
                            <apex:param name="contactJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="saveContactsVisit" action="{!storeSelectedContacts}" rerender="searchContactsGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addContactsModal');resetCheckboxById('masterChkbx_atndsGrd');" status="progressIndicator">
                            <apex:param name="contactJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                        </apex:actionFunction>
                        <apex:actionFunction name="closeContacts" action="{!resetPagination}" rerender="searchContactsGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addContactsModal');resetCheckboxById('masterChkbx_atndsGrd');" status="progressIndicator">
                            <apex:param name="paginationGrid" value="con"/>
                        </apex:actionFunction>
                    </apex:actionRegion>
                                        
                    <!-- AttendeeDetails section AddUsersEmployees Modal -->
                    <apex:actionRegion id="userPopupRegion">
                    <div class="modal fade" id="addUsersEmployeesModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AttendeeDetails section AddUsersEmployees Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <!--button type="button" class="close" data-dismiss="modal">&times;</button-->
                              <div style="float: right;margin-top: -2px; font-size: 24px; font-weight: bold; line-height: 1;color: #000;text-shadow: 0 1px 0 #fff;opacity: .2;border:1px solid  #000;width:17px;padding-left:1px;padding-right:1px;    cursor: pointer;-webkit-appearance: button;" onclick="closeUsers();">&times;</div>
                              <h4 class="modal-title">Add Users/Employees</h4>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-5 form-group">
                                        <apex:inputText styleClass="form-control" value="{!userSearchText}" html-placeholder="Search Full Name" id="userSearchTextBoxId" onkeypress="return noenter(event, 'User');"/>
                                    </div>
                                    <div class="col-md-1 form-group">
                                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" action="{!populateSearchUsersGrid}" rerender="searchUsersGridPanel,userhelptext" status="progressIndicator" oncomplete="selectedUserArray = new Array();"/>-->
                                        <!--<apex:commandButton styleClass="btn btn-default btn-sm" value="Go" onclick="populateSearchUsersGridJS(JSON.stringify(selectedUserArray));" rerender="searchUsersGridPanel,userhelptext" status="progressIndicator"/>-->
                                        <!--<button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchUsersGridJS(JSON.stringify(selectedUserArray));">Go</button>-->
                                        <button type="button" class="createAccountBtn btn btn-default btn-sm" onClick="populateSearchAOCGridJS('use');">Go</button>
                                    </div>
                                </div>
                                <div class="row" style="padding:0px 20px 15px;text-align:right;">
                                    <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                                   <apex:outputPanel id="userhelptext">
                                    <apex:outputLabel value="Recently Viewed in Last 30 days" style="margin-top:11px; float:left;"  rendered="{!if(userSearchText==null || userSearchText=='',true,false)}" />   
                                    </apex:outputPanel>
                                    <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addUsersToVisit}" rendered="{!userGridObj.SObjectsList.size != 0}" rerender="searchUsersGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addUsersEmployeesModal')" status="progressIndicator"/>
                                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button-->
                                    <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeUsers();">Close</div>
                                    <apex:outputPanel rendered="{!userGridObj.SObjectsList.size != 0}">
                                        <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveUsersVisit(JSON.stringify(selectedUserArray),'Save');">Save</div>
                                    </apex:outputPanel>
                                </div>
                                <!-- Search Users Grid-->
                                <apex:actionFunction name="populateSearchUsersGridJS" action="{!populateSearchUsersGrid}" rerender="searchUsersGridPanel,userhelptext,searchUsersPgMsgsId" status="progressIndicator">
                                    <apex:param name="userJSON" value=""/>
                                </apex:actionFunction>
                                
                                <!-- select a Record-->
                                <apex:actionFunction name="aSelectItemSearchUser" action="{!userGridObj.selectRecord}" rerender="searchUsersGridPanel" status="progressIndicator">
                                    <apex:param name="currentSObjId" value="" assignTo="{!userGridObj.currentSObjId}"/>
                                </apex:actionFunction>
                                
                                <!-- deselect a Record-->
                                <apex:actionFunction name="aDeselectItemSearchUser" action="{!userGridObj.deselectRecord}" rerender="searchUsersGridPanel" status="progressIndicator">
                                    <apex:param name="currentSObjId" value="" assignTo="{!userGridObj.currentSObjId}"/>
                                </apex:actionFunction>

                                <apex:outputPanel id="searchUsersGridPanel" layout="block">                                                    
                                <!-- 
                                <apex:outputPanel layout="block" styleClass="row" rendered="{!accountNameForOppPopUpGrid != null}">
                                    <div class="popupSubHeading"><apex:outputText value="{!accountNameForOppPopUpGrid} Opportunities"/></div>
                                </apex:outputPanel>
                                 -->
                                <apex:pageMessages id="searchUsersPgMsgsId"/> 
                                
                                <apex:outputPanel rendered="{!userGridObj.SObjectsList.size != 0}">
                                <div id="cardView" class="table-responsive">
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>&nbsp;</th>
                                                <th>Name</th>
                                                <th>Email</th>
                                                <th>Username</th>
                                                <th>Title</th>
                                                <th>Divison</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:repeat value="{!userGridObj.SObjectsList}" var="wrp" id="usersTable">
                                                <tr>
                                                    <td>
                                                      <apex:inputCheckbox value="{!wrp.IsSelected}" id="wrpChkBx_usr" onchange="handleUserCheckbox(this.checked,'{!wrp.sobj.Id}')" styleClass="wrapperCheckboxes"/>
                                                    </td>
                                                    <td>
                                                        
                                                            <div class="custom-label">Name:</div>
                                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Name']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                    <td>
                                                        
                                                            <div class="custom-label">Email:</div>
                                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Email']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                    <td>
                                                        
                                                            <div class="custom-label">Username:</div>
                                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Username']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                    <td>
                                                        
                                                            <div class="custom-label">Title:</div>
                                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Title']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                    <td>
                                                        
                                                            <div class="custom-label">Division:</div>
                                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Division']}"/>&nbsp;</div>
                                                        
                                                    </td>
                                                </tr>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                                <!-- next, previous and page info -->
                                <apex:outputLabel value="Page {!userGridObj.pageNumber} of {!userGridObj.totalPages}" style="float:right;"/>
                                
                                <!--apex:commandLink action="{!userGridObj.doPrevious}" rendered="{!userGridObj.hasPrevious}" value="Previous" rerender="searchUsersGridPanel"/>
                                <apex:outputPanel rendered="{!NOT(userGridObj.hasPrevious)}">
                                    Previous
                                </apex:outputPanel-->
                                <apex:outputPanel rendered="{!NOT(userGridObj.hasPrevious)}">
                                    Previous
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(userGridObj.hasPrevious)}">
                                    <a onclick="sendJSONUser(JSON.stringify(selectedUserArray),'Previous');" style="cursor: pointer;">Previous</a>
                                </apex:outputPanel>
                                &nbsp;&nbsp;
                                <apex:outputPanel rendered="{!NOT(userGridObj.hasNext)}">
                                    Next
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!!NOT(userGridObj.hasNext)}">
                                    <a onclick="sendJSONUser(JSON.stringify(selectedUserArray),'Next');" style="cursor: pointer;">Next</a>
                                </apex:outputPanel>
                                <!--apex:commandLink action="{!userGridObj.doNext}" rendered="{!userGridObj.hasNext}" value="Next" rerender="searchUsersGridPanel"/>
                                <apex:outputPanel rendered="{!NOT(userGridObj.hasNext)}">
                                    Next
                                </apex:outputPanel-->
                                </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                            <div class="modal-footer">
                              <!--<button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Save</button>-->
                              <!--apex:commandButton styleClass="btn btn-default btn-sm" value="Save" action="{!addUsersToVisit}" rendered="{!userGridObj.SObjectsList.size != 0}" rerender="searchUsersGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addUsersEmployeesModal')" status="progressIndicator"/>
                              <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button-->
                            <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="closeUsers();">Close</div>
                            <apex:outputPanel rendered="{!userGridObj.SObjectsList.size != 0}">
                                <div style="border:1px solid rgb(211,211,211);border-radius:3px;width:50px;padding-left:10px;padding-right:10px;float:right;padding-top:7px;padding-bottom:7px;margin-left:3px;cursor: pointer;" onclick="saveUsersVisit(JSON.stringify(selectedUserArray),'Save');">Save</div>
                            </apex:outputPanel>
                            </div>
                          </div>                          
                        </div>
                    </div>
                    <apex:actionFunction name="sendJSONUser" action="{!storeSelectedUsers}" rerender="searchUsersGridPanel,attendeesGrid" status="progressIndicator">
                        <apex:param name="userJSON" value=""/>
                        <apex:param name="actionPerformed" value=""/>
                    </apex:actionFunction>
                    <apex:actionFunction name="saveUsersVisit" action="{!storeSelectedUsers}" rerender="searchUsersGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addUsersEmployeesModal')" status="progressIndicator">
                        <apex:param name="userJSON" value=""/>
                        <apex:param name="actionPerformed" value=""/>
                    </apex:actionFunction>
                    <apex:actionFunction name="closeUsers" action="{!resetPagination}" rerender="searchUsersGridPanel,attendeesGrid" oncomplete="handlePopupClose(this,'{!Not(isError)}','addUsersEmployeesModal')" status="progressIndicator">
                        <apex:param name="paginationGrid" value="usr"/>
                    </apex:actionFunction>
                    </apex:actionRegion>
                    <!-- AttendeeDetails section Previous Visits Modal -->
                    <apex:actionRegion id="prevVisitsPopupRegion">
                    <div class="modal fade" id="previousVisitsOpportunityDetailsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AttendeeDetails section Previous Visits Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <button type="button" class="close" data-dismiss="modal">&times;</button>
                              <h4 class="modal-title">
                                  <apex:outputPanel id="attndTitle">
                                      Previous visits of {!attendeeNameForPrevVisits}
                                  </apex:outputPanel>
                              </h4>
                            </div>
                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-md-5 form-group">
                                        <apex:inputText value="{!prevVisitsSearchText}" styleClass="form-control" html-placeholder="Search Visit Number, Name, Status" />
                                    </div>
                                    <div class="col-md-1 form-group">
                                        <apex:commandButton styleClass="btn btn-default btn-sm" value="Go" action="{!populateSearchPrevVisitsGrid}" rerender="searchPrevVisitsGridPanel" status="progressIndicator"/>
                                    </div>
                                </div>
                                <!-- Previous Visits Grid-->

                                <apex:actionFunction name="populateSearchPrevVisitsGridJS" action="{!populateSearchPrevVisitsGrid}" rerender="searchPrevVisitsGridPanel,attndTitle" status="progressIndicator">
                                    <apex:param name="attendeeIdForPrevVisits" value="" assignTo="{!attendeeIdForPrevVisits}"/>
                                </apex:actionFunction>
                                  
                                <apex:outputPanel id="searchPrevVisitsGridPanel" layout="block">
                                <apex:pageMessages id="searchPrevVisitsPgMsgsId"/>
                                <apex:outputPanel rendered="{!prevVisitsGridObj.SObjectsList.size != 0}">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Visit Number</th>
                                                <th>Visit Name</th>
                                                <th>Status</th>
                                                <th>Arrival Date</th>
                                                <th>Departure Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <apex:repeat value="{!prevVisitsGridObj.SObjectsList}" var="wrp" id="prevVisitsTable">
                                                <tr>
                                                    <td><apex:outputLink value="/{!wrp.sobj['Visit__c']}" target="_blank">{!wrp.sobj['Visit__r.Name']}</apex:outputLink></td>
                                                    <td><apex:outputText value="{!wrp.sobj['Visit__r.VisitName__c']}"/></td>
                                                    <td><apex:outputText value="{!wrp.sobj['Visit__r.VisitStatusName__c']}"/></td>
                                                    <td><apex:outputField value="{!wrp.sobj['VisitArrivalDateTime__c']}"/></td>
                                                    <td><apex:outputField value="{!wrp.sobj['VisitDepartureDateTime__c']}"/></td>
                                                </tr>
                                            </apex:repeat>
                                        </tbody>
                                    </table>
                                </div>
                                <!-- next, previous and page info -->
                                <apex:outputLabel value="Page {!prevVisitsGridObj.pageNumber} of {!prevVisitsGridObj.totalPages}" style="float:right;"/>
                                
                                <apex:commandLink action="{!prevVisitsGridObj.doPrevious}" rendered="{!prevVisitsGridObj.hasPrevious}" value="Previous" rerender="searchPrevVisitsGridPanel"/>
                                <apex:outputPanel rendered="{!NOT(prevVisitsGridObj.hasPrevious)}">
                                     Previous
                                </apex:outputPanel>
                                &nbsp;&nbsp;
                                <apex:commandLink action="{!prevVisitsGridObj.doNext}" rendered="{!prevVisitsGridObj.hasNext}" value="Next" rerender="searchPrevVisitsGridPanel"/>
                                <apex:outputPanel rendered="{!NOT(prevVisitsGridObj.hasNext)}">
                                     Next
                                </apex:outputPanel>
                                </apex:outputPanel>
                                </apex:outputPanel>
                            </div>
                            <div class="modal-footer">
                              <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                            </div>
                          </div>                          
                        </div>
                    </div>
                    </apex:actionRegion>
                    <!-- AttendeeDetails section AddObjectives Modal -->
                    <apex:actionRegion >                                        
                        <apex:actionFunction name="addObjectiveToAttendee" action="{!addObjectiveToAttendee}" rerender="addAtndObjPgMsgsId,attendeesGrid" status="progressIndicator">
                            <apex:param name="attendeeId" value="" />
                        </apex:actionFunction>
                    <div class="modal fade" id="addObjectivesAttendeeDetailsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AttendeeDetails section AddObjectives Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <button type="button" class="close" data-dismiss="modal">&times;</button>
                              <h4 class="modal-title">Add Objective</h4>
                            </div>
                            <div class="modal-body">
                                <apex:pageMessages id="addAtndObjPgMsgsId"/>
                                <div class="row">
                                    <div class="col-md-7 form-group">
                                        <label>Add Visit Objective for this Attendee</label>
                                        <apex:inputTextArea styleClass="form-control" value="{!attendeeObjective}" id="atndObjTxtbxId"/>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                              <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" onclick="addObjectiveToAttendee(attendeeId)" rerender="dummy" oncomplete="handlePopupClose(this,'{!Not(isError)}','addObjectivesAttendeeDetailsModal')"/>
                              <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                            </div>
                          </div>                          
                        </div>
                    </div> 
                    </apex:actionRegion>
                    <!-- AttendeeDetails section AddLogistics Modal -->
                    <apex:actionRegion id="addAttendeeLogisticsRegion">
                        <apex:actionFunction name="addAttendeeLogisticsJS" action="{!addAttendeeLogistics}" rerender="addAtndLgstcsPgMsgsId,attendeesGrid" status="progressIndicator">
                        </apex:actionFunction>
                    <div class="modal fade" id="addLogisticsAttendeeDetailsModal" role="dialog" data-backdrop="static">
                        <div class="modal-backdrop fade in"></div>
                        <div class="modal-dialog">                      
                          <!-- AttendeeDetails section AddLogistics Modal content-->
                          <div class="modal-content">
                            <div class="modal-header">
                              <button type="button" class="close" data-dismiss="modal">&times;</button>
                              <h4 class="modal-title">Add Logistics</h4>
                            </div>
                            <div class="modal-body">
                                <apex:outputPanel id="addAttendeeLogisticsPanel">
                                    <apex:pageMessages id="addAtndLgstcsPgMsgsId"/>
                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__IsPrimaryDecisionMakerForVisit__c.Label}"/>
                                        <apex:inputField value="{!attendeeForLogistics.VisitOps__IsPrimaryDecisionMakerForVisit__c}" styleClass="field"/>
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__DietType__c.Label}"/>
                                        <apex:inputField value="{!attendeeForLogistics.VisitOps__DietType__c}" styleClass="form-control"/>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 form-group">
                                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__TravelDetails__c.Label}"/>
                                        <apex:inputField value="{!attendeeForLogistics.VisitOps__TravelDetails__c}" styleClass="form-control" id="atndTravelDetailsId"/>
                                    </div>
                                    <div class="col-md-4 form-group">
                                        <apex:outputLabel value="{!$ObjectType.VisitOps__Attendee__c.fields.VisitOps__DietaryRequirements__c.Label}"/>
                                        <apex:inputField value="{!attendeeForLogistics.VisitOps__DietaryRequirements__c}" styleClass="form-control"/>
                                    </div>
                                </div>
                                </apex:outputPanel>
                            </div>
                            <div class="modal-footer">
                                <apex:commandButton styleClass="btn btn-default btn-sm" value="Save" onclick="addAttendeeLogisticsJS()" rerender="dummy" oncomplete="handlePopupClose(this,'{!Not(isError)}','addLogisticsAttendeeDetailsModal')"/>
                              <!--<button type="button" class="btn btn-default btn-sm pull-left" data-dismiss="modal">Save</button>-->
                              <button type="button" class="btn btn-default btn-sm" data-dismiss="modal">Close</button>
                            </div>
                          </div>                          
                        </div>
                    </div>
                    </apex:actionRegion>
                    <!--- Attendee Details table in Visit Screen page -->
                    <apex:actionRegion id="attendeesGridRegion">                              
                    <!-- select a Record-->
                    <apex:actionFunction name="aSelectItemAttendeesGrid" action="{!attendeeGridObj.selectRecord}" rerender="attendeesGrid,attendeesGridPgMsgsId" status="progressIndicator">
                        <apex:param name="currentSObjId" value="" assignTo="{!attendeeGridObj.currentSObjId}"/>
                    </apex:actionFunction>
                    
                    <!-- deselect a Record-->
                    <apex:actionFunction name="aDeselectItemAttendeesGrid" action="{!attendeeGridObj.deselectRecord}" rerender="attendeesGrid,attendeesGridPgMsgsId" status="progressIndicator">
                        <apex:param name="currentSObjId" value="" assignTo="{!attendeeGridObj.currentSObjId}"/>
                    </apex:actionFunction>
                    
                    <apex:actionFunction name="handleSelectionForAttendeesGrid" action="{!attendeeGridObj.handleRecordsSelectionChange}" rerender="attendeesGrid,attendeesGridPgMsgsId" status="progressIndicator">
                        <apex:param name="recordsSelectionJsonString" value="" assignTo="{!attendeeGridObj.recordsSelectionJsonString}"/>
                    </apex:actionFunction>
                    
                    <!-- Handle Grid Checkboxes -->
                    <apex:actionFunction name="sendGridJSONCon" action="{!storeSelectedGridElements}" rerender="attendeesGrid,attendeesGridPgMsgsId" onComplete="resetCheckboxById('masterChkbx_atndsGrd');" status="progressIndicator">
                            <apex:param name="gridJSON" value=""/>
                            <apex:param name="actionPerformed" value=""/>
                            <apex:param name="gridName" value="attendeeGridObj"/>
                    </apex:actionFunction>
                    
                    <!-- Place this pageMessages outside the attendeesGrid to ensure error message from search contact poup is not displayed also in attendeesGrid pageMessages as it rerenders the attendeesGrid -->
                    <apex:pageMessages id="attendeesGridPgMsgsId"/>
                    
                    <apex:outputPanel id="attendeesGrid">
                    <div id="cardView" class="table-responsive">
                        <table class="table table-bordered" id="attendeeDetailsTable">
                            <thead id="deskGridAttDetailsHeader">
                                <tr>
                                    <!--<th><apex:inputCheckbox id="masterChkbx_atndsGrd" onchange="handleMasterCheckboxChange(this.checked,'wrpChkBx_atnds','handleSelectionForAttendeesGrid');"/></th>-->
                                    <th>&nbsp;</th>
                                    <th>Number</th>
                                    <th>Name</th>
                                    <th>Company</th>
                                    <th>Title</th>
                                    <th>Email</th>
                                    <th>PDM</th>
                                    <th>Attendee Type</th>
                                    <th>Attendee Role</th>
                                    <th>LinkedIn</th>
                                    <th class="hideRecentVisits">Recent Visits</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <apex:repeat value="{!attendeeGridObj.SObjectsList}" var="wrp" id="attendeesTable">
                                <tr>
                                    <td><apex:inputCheckbox value="{!wrp.IsSelected}" onchange="handleGridCheckbox('con', '{!JSENCODE(wrp.sobj.Id)}', 'false');" styleClass="wrpChkBx_atnds" html-data-id="{!wrp.sobj.Id}"/></td>
                                    <td>
                                        
                                            <div class="custom-label">Number:</div>
                                            <div class="custom-value"><apex:outputLink value="/{!wrp.sobj['Id']}" target="_blank">{!wrp.sobj['Name']}</apex:outputLink>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Name:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Attendee_Name__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Company:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Company__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Title:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Title__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Email:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Email__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">PDM:</div>
                                            <div class="custom-value"><apex:outputField value="{!wrp.sobj['IsPrimaryDecisionMakerForVisit__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Type:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Attendee_Type__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">Role:</div>
                                            <div class="custom-value"><apex:outputText value="{!wrp.sobj['Attendee_Role__c']}"/>&nbsp;</div>
                                        
                                    </td>
                                    <td>
                                        
                                            <div class="custom-label">LinkedIn:</div>
                                            <div class="custom-value">
                                                <apex:outputLink value="{!IF(CONTAINS(wrp.sobj['LinkedIn_Url__c'],'http') || CONTAINS(wrp.sobj['LinkedIn_Url__c'],'https') || (ISBLANK(wrp.sobj['LinkedIn_Url__c'])),wrp.sobj['LinkedIn_Url__c'],'http://'+wrp.sobj['LinkedIn_Url__c'])}" target="_blank">
                                                    <apex:image id="theImage" value="{!$Resource.VisitOps__LinkedInIcon}" width="20" height="20" rendered="{!IF(wrp.sobj['LinkedIn_Url__c'] =='',false,true)}"/>
                                                </apex:outputLink>&nbsp;
                                            </div>
                                        
                                    </td>
                                    <td class="hideRecentVisits">
                                        <input type="button" class="btn btn-default btn-sm" value="Previous Visits" onclick="showPreviousVisits('{!wrp.sobj.Id}')"/>
                                    </td>
                                    <td>
                                        <apex:variable var="objective" value="{!wrp.sobj['Objectives_for_this_Attendee__c']}"/>
                                        <button type="button" class="btn btn-default btn-sm addObjectiveAtndBtn" onclick="handleAddObjectiveForAttendee('{!wrp.sobj.Id}','{!objective}')">{!IF(objective == null || objective == '', 'Add', 'Modify')} Objective</button>
                                        <!-- <input type="button" value="Add Logistics"  class="addLogisticBtn btn" onclick="handleAddAttendeeLogistics('{!wrp.sobj.Id}')"/> -->
                                        
                                        <apex:variable var="travelDetails" value="{!wrp.sobj['TravelDetails__c']}"/>
                                        <apex:variable var="dietaryRequirements" value="{!wrp.sobj['DietaryRequirements__c']}"/>
                                        <apex:variable var="dietType" value="{!wrp.sobj['DietType__c']}"/>  
                                        <button type="button" class="addLogisticBtn btn btn-default btn-sm" onclick="handleAddAttendeeLogistics('{!wrp.sobj.Id}')">{!IF(travelDetails != null || travelDetails != '' || dietaryRequirements != null || dietaryRequirements != '' || dietType != null || dietType != '', 'Modify', 'Add')} Logistics</button>
                                    </td>
                                </tr>  
                                </apex:repeat> 
                            </tbody>
                        </table>
                    </div>
                    <apex:outputPanel styleClass="paginationDiv" layout="block" rendered="{!attendeeGridObj.totalPages!=0}">
                    <div class="panel-body" style="border-top:0px;padding:10px;">
                        <div class="col-md-12">
                            <span style="font-size:0.8em;">Page {!attendeeGridObj.pageNumber} of {!attendeeGridObj.totalPages}</span>
                            <span class="pull-right">
                                <apex:outputPanel rendered="{!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=attendeeGridObj.totalPages), true, false)}">
                                    <div onclick="sendGridJSONCon(JSON.stringify(gridConArray), 'Last', 'attendeeGridObj');" class="gridButton">Last</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=attendeeGridObj.totalPages), false, true)}">
                                    <div class="gridButtonInactive">Last</div>
                                </apex:outputPanel>
                                
                                 <apex:outputPanel rendered="{!IF(attendeeGridObj.hasNext, true, false)}">
                                    <div onclick="sendGridJSONCon(JSON.stringify(gridConArray), 'Next', 'attendeeGridObj');" class="gridButton">Next</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(attendeeGridObj.hasNext, false, true)}">
                                    <div class="gridButtonInactive">Next</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(attendeeGridObj.hasPrevious, true, false)}">
                                    <div onclick="sendGridJSONCon(JSON.stringify(gridConArray), 'Previous', 'attendeeGridObj');" class="gridButton">Previous</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(attendeeGridObj.hasPrevious, false, true)}">
                                    <div class="gridButtonInactive">Previous</div>
                                </apex:outputPanel>
                                
                                <apex:outputPanel rendered="{!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=1), true, false)}">
                                    <div onclick="sendGridJSONCon(JSON.stringify(gridConArray), 'First', 'attendeeGridObj');" class="gridButton">First</div>
                                </apex:outputPanel>
                                <apex:outputPanel rendered="{!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=1), false, true)}">
                                    <div class="gridButtonInactive">First</div>
                                </apex:outputPanel>
                                <!--apex:commandButton action="{!attendeeGridObj.doFirst}" value="First" rerender="attendeesGrid,attendeesGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=1),'','disabled')}" onComplete="hideButtonsandSections();"/>
                                <apex:commandButton action="{!attendeeGridObj.doPrevious}" value="Previous" rerender="attendeesGrid,attendeesGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(attendeeGridObj.hasPrevious,'','disabled')}" onComplete="hideButtonsandSections();"/>
                                <apex:commandButton action="{!attendeeGridObj.doNext}" value="Next" rerender="attendeesGrid,attendeesGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(attendeeGridObj.hasNext,'','disabled')}" onComplete="hideButtonsandSections();"/>
                                <apex:commandButton action="{!attendeeGridObj.doLast}" value="Last" rerender="attendeesGrid,attendeesGridPgMsgsId" styleClass="btn btn-default btn-sm {!IF(AND(attendeeGridObj.totalPages!=0, attendeeGridObj.pageNumber!=attendeeGridObj.totalPages),'','disabled')}" onComplete="hideButtonsandSections();"/-->
                            </span>
                        </div>
                    </div>
                    </apex:outputPanel>
                    </apex:outputPanel>
                    </apex:actionRegion>
                </div>
            </div>
        </div>
            
        </div>
        
        <!-- Buttons -->
        <div class="row">
          <div class="col-md-4 form-group"></div>
          <div class="col-md-7 form-group">
            <!-- <apex:commandButton styleClass="btn btn-default btn-sm" value="Submit" rendered="{!isSubmitAllowed}" action="{!submitVisit}" rerender="pgMsgsId" status="progressIndicator" oncomplete="handleRoomEffectingVariablesChange('submit',{!isRoomValid},'{!invalidRoomMessage}');redirectForMobile('{!isSaveSuccess}','{!Visit__c.id}');" style="margin-left:3px;"/> -->
            <apex:outputPanel rendered="{!isSubmitAllowed}"> 
                <button type="button" class="btn btn-default btn-sm" onclick="submitJS();" style="margin-left:3px;">Submit</button>
            </apex:outputPanel>
            <button type="button" class="btn btn-default btn-sm" onclick="saveJS();" style="margin-left:3px;">Save</button>
            <button type="button" class="btn btn-default btn-sm" onclick="actionCancelJS();">Cancel</button>
          </div>
        </div>
    </apex:outputPanel>
    </apex:form>
</div>
<!--<script src="js/bootstrap.min.js"></script>-->
</body>

</html>
</apex:page>